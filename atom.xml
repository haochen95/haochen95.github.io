<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Unknown404</title>
  
  <subtitle>Stay Hungry,Stay Foolish</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://haochen95.github.io/"/>
  <updated>2019-03-05T14:57:42.044Z</updated>
  <id>http://haochen95.github.io/</id>
  
  <author>
    <name>Unknown404</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java类的继承</title>
    <link href="http://haochen95.github.io/2019/03/05/Java%E7%B1%BB%E7%9A%84%E7%BB%A7%E6%89%BF/"/>
    <id>http://haochen95.github.io/2019/03/05/Java类的继承/</id>
    <published>2019-03-05T14:57:22.000Z</published>
    <updated>2019-03-05T14:57:42.044Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-继承extends"><a href="#1-继承extends" class="headerlink" title="1. 继承extends"></a>1. 继承extends</h1><p>一个类得到另外一个类的成员变量和成员函数，java只支持单继承</p><p><strong>继承的特点：</strong></p><ol><li>自动获得父类的成员变量和成员函数</li><li>子类可以定义自己的成员函数(扩展父类的功能)</li><li>将通用成员变量和函数定义在父类中，子类通过继承获取，来减少重复代码</li><li>子类可以覆盖父类的一些方法</li><li>子类通过super调用父类的方法</li><li>子类通过super调用父类构造器（子类构造函数中，必须调用父类的构造函数）<ul><li>如果没有super调用父类构造器，将自动调用父类的默认构造器</li></ul></li></ol><p>首先写父类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  Person()&#123;</span><br><span class="line">    System.out.println(<span class="string">"无参数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    System.out.println(<span class="string">"有参数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"吃饭"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字是"</span> + name + <span class="string">", 我的年龄是"</span> + age);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function">String <span class="title">getName</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> self.name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后写子类</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  <span class="comment">// 自动获得父类的成员变量和成员函数</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 可以定义自己的成员变量和函数</span></span><br><span class="line">  <span class="keyword">int</span> grade;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"学习"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Student(String name, <span class="keyword">int</span> age, <span class="keyword">int</span> grade)&#123;</span><br><span class="line">    <span class="comment">// 可以通过super调用父类构造函数</span></span><br><span class="line">    <span class="keyword">super</span>(name, age);</span><br><span class="line">    <span class="keyword">this</span>.grade = grade;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 可以覆盖父类的函数</span></span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    String name = <span class="keyword">super</span>.getName();</span><br><span class="line">    System.out.println(<span class="string">"父类的名字是： "</span> + name);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在main方法中写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    Student student = <span class="keyword">new</span> Student();</span><br><span class="line">    student.name = <span class="string">"zhang"</span>;</span><br><span class="line">    student.eat();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-理解方法的调用"><a href="#2-理解方法的调用" class="headerlink" title="2. 理解方法的调用"></a>2. 理解方法的调用</h1><p>分析<code>x.f(args)</code>这个调用的主要流程</p><p>(1). 编译器查看对象的声明类型和方法名，检查到<code>x是C类的对象</code><br>(2). 编译器将查看调用方法时提供的参数类型，根据输入的参数，来判断调用哪一个f方法-<code>重载解析</code><br>(3). 如果方法时static,final,private或者是一个构造器的时候，编译器可以精确定位，也称为静态绑定，与此对应，调用的方法依赖于x的实际类型，并且在运行时动态绑定<br>(4). 当程序运行的时候，并且动态绑定后，须立即一定调用与x所引用对象的实际类型最合适的那个方法，假设x的实际类型是D，它是C类的子类，如果D类定义了f函数，就直接调用，否则会从D的父类里面找这个函数</p><h1 id="3-阻止继承-final类和方法"><a href="#3-阻止继承-final类和方法" class="headerlink" title="3.  阻止继承: final类和方法"></a>3.  阻止继承: final类和方法</h1><p><strong>不允许扩展的类为final类</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">Executive</span> <span class="keyword">extends</span> <span class="title">Manager</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-对象转型"><a href="#4-对象转型" class="headerlink" title="4. 对象转型"></a>4. 对象转型</h1><h2 id="4-1-向上转型"><a href="#4-1-向上转型" class="headerlink" title="4.1. 向上转型"></a>4.1. 向上转型</h2><p>将子类的对象赋值给父类的引用</p><ol><li><strong>一个引用能够调用哪个成员变量和方法，取决于这个引用的类型</strong></li><li><strong>一个引用调用的是哪一个方法，取决于这个引用指向的对象</strong></li></ol><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_3.PNG" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 父类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"name: "</span> + name + <span class="string">"age"</span> + age);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String address;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">study</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"study "</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.introduce();</span><br><span class="line">    System.out.println(<span class="string">"address: "</span> + address);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在主main函数中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    Student s = <span class="keyword">new</span> Student();</span><br><span class="line">    Person p = s;</span><br><span class="line">    <span class="comment">// 一个引用能够调用哪个成员变量或者函数，取决于这个引用的类型</span></span><br><span class="line">    <span class="comment">// p只能有name和age变量</span></span><br><span class="line">    <span class="comment">// p只能调用introduce方法</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 一个引用调用的是哪一个方法，取决于这个引用指向的对象</span></span><br><span class="line">    <span class="comment">// p调用的introduce方法，实际上是student中的复写后的introduce方法</span></span><br><span class="line"></span><br><span class="line">    p.name = <span class="string">"zhang"</span>;</span><br><span class="line">    p.age = <span class="number">20</span>;</span><br><span class="line">    <span class="comment">// p.address = "CQ";   // 这个会出错</span></span><br><span class="line">    <span class="comment">// p.study(); // 出错</span></span><br><span class="line">    <span class="comment">// 实际上是s.introduce()</span></span><br><span class="line">    p.introduce();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-向下转型"><a href="#4-2-向下转型" class="headerlink" title="4.2. 向下转型"></a>4.2. 向下转型</h2><p>将父类的对象赋值给子类的引用</p><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_4.PNG" alt></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    Student s1 = <span class="keyword">new</span> Student();</span><br><span class="line">    Person p = s1;</span><br><span class="line">    Student s2 = (Student)p;</span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-3-面向对象多态性的例子"><a href="#4-3-面向对象多态性的例子" class="headerlink" title="4.3.面向对象多态性的例子"></a>4.3.面向对象多态性的例子</h2><p>目标： 开发一个打印机控制程序，能够实现开机，关机和打印功能, 能够控制不同打印机<br>设计：</p><ol><li>建立一个printer类</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 将相同的代码放到父类中</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">open</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"open"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"close"</span>)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">(String s)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"print---&gt;"</span> + s)</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类复写父类的代码，用于新增功能</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CanonPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">close</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.clean();</span><br><span class="line">    <span class="keyword">super</span>.close();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">clean</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"clean"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HPPrinter</span> <span class="keyword">extends</span> <span class="title">Printer</span></span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>添加一个主函数测试</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (flag ==<span class="number">0</span>)&#123;</span><br><span class="line">      HPPrinter hpprinter = <span class="keyword">new</span> HPPrinter();</span><br><span class="line">      hpprinter.open();</span><br><span class="line">      hpprinter.print(<span class="string">"123"</span>);</span><br><span class="line">      hpprinter.close();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (flag ==<span class="number">1</span>)&#123;</span><br><span class="line">      CanonPrinter canonPrinter = <span class="keyword">new</span> CanonPrinter();</span><br><span class="line">      canonPrinter.open();</span><br><span class="line">      canonPrinter.print(<span class="string">"456"</span>);</span><br><span class="line">      canonPrinter.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="5-抽象类"><a href="#5-抽象类" class="headerlink" title="5. 抽象类"></a>5. 抽象类</h1><h2 id="5-1-抽象函数abstract"><a href="#5-1-抽象函数abstract" class="headerlink" title="5.1. 抽象函数abstract"></a>5.1. 抽象函数abstract</h2><p>只有函数的定义，没有函数体的函数</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br></pre></td></tr></table></figure><h2 id="5-2-抽象类"><a href="#5-2-抽象类" class="headerlink" title="5.2. 抽象类"></a>5.2. 抽象类</h2><p>通过abstract定义的类</p><ol><li><p>抽象类不能够生成对象</p><ul><li>因为一旦生成对象，调用里面的抽象函数时，java不知道做什么</li></ul></li><li><p>如果一个类当中包含抽象函数，那么这个类必须声明为抽象类</p></li><li>如果一个类中没有抽象函数，也可以声明为抽象类</li><li>抽象类天生就是当爹的，它的子类可以生成对象</li><li>当子类继承抽象类的时候，必须复写抽象类中的抽象函数</li><li><strong>抽象类可以有构造函数</strong></li><li>这种继承抽象类和继承普通类的优点在哪里？<ul><li>代码检查，必须重写抽象类中的抽象方法</li></ul></li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line">  <span class="comment">// 抽象类可以有构造函数</span></span><br><span class="line">  Person(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">    System.out.println(<span class="string">"Person的构造函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">introduce</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我的名字:"</span>+name + <span class="string">"，我的年龄是:"</span>+age);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">abstract</span> <span class="keyword">void</span> <span class="title">fun</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 子类继承抽象类的时候，必须复写抽象函数</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Chinese</span> <span class="keyword">extends</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String address;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">Chinese</span><span class="params">(String name, <span class="keyword">int</span> age, String address)</span></span>&#123;</span><br><span class="line">    <span class="keyword">super</span>(name,age);</span><br><span class="line">    <span class="keyword">this</span>.address = address;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">eat</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"用筷子吃饭"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在主函数中</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    <span class="comment">// 向上转型</span></span><br><span class="line">    Person p  = <span class="keyword">new</span> Chinese();</span><br><span class="line">    <span class="comment">// 虽然p是抽象类，但是他指向的是chinese这个引用，调用的是chinese的eat</span></span><br><span class="line">    p.eat();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="6-包和访问权限"><a href="#6-包和访问权限" class="headerlink" title="6. 包和访问权限"></a>6. 包和访问权限</h1><h2 id="6-1-将类放到包中"><a href="#6-1-将类放到包中" class="headerlink" title="6.1. 将类放到包中"></a>6.1. 将类放到包中</h2><p><strong>什么是软件包?</strong></p><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190116132954776-225225914.png" alt></p><p><strong>怎么讲类放到软件包中?</strong></p><ul><li>将类放到一个包中，需要使用packcage “包名”</li><li>编译时需要使用 -d参数，该参数的作用是依照包名生成相应的文件夹</li><li>一个类的全名: 包名 + . + 类名：mars.Test</li><li>包名的命名规范<ul><li>一般小写</li><li>一般是域名倒过来写: <code>io.github.com.haochen95</code>;</li></ul></li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> mars;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"package"</span>)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-2-包的访问权限"><a href="#6-2-包的访问权限" class="headerlink" title="6.2. 包的访问权限"></a>6.2. 包的访问权限</h2><table><thead><tr><th>访问权限</th><th>含义</th><th>包内可否使用</th><th>包之间可否使用</th><th>包内继承</th><th>包间继承</th></tr></thead><tbody><tr><td>public</td><td>公有权限</td><td>Yes</td><td>Yes</td><td>Yes</td><td>Yes</td></tr><tr><td>private(很少修饰类)</td><td>私有权限</td><td>No</td><td>No</td><td>No</td><td>No</td></tr><tr><td>default</td><td>包级别访问权限</td><td>Yes</td><td>No</td><td>Yes</td><td>No</td></tr><tr><td>protected(不修饰类)</td><td>受保护权限</td><td>Yes</td><td>No</td><td>Yes</td><td>Yes(只有子类才能使用)</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;1-继承extends&quot;&gt;&lt;a href=&quot;#1-继承extends&quot; class=&quot;headerlink&quot; title=&quot;1. 继承extends&quot;&gt;&lt;/a&gt;1. 继承extends&lt;/h1&gt;&lt;p&gt;一个类得到另外一个类的成员变量和成员函
      
    
    </summary>
    
      <category term="Java" scheme="http://haochen95.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS语法教程01</title>
    <link href="http://haochen95.github.io/2019/03/05/CSS%E8%AF%AD%E6%B3%95%E6%95%99%E7%A8%8B01/"/>
    <id>http://haochen95.github.io/2019/03/05/CSS语法教程01/</id>
    <published>2019-03-05T07:10:23.000Z</published>
    <updated>2019-03-05T15:58:50.900Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h1 id="1-CSS基础语法"><a href="#1-CSS基础语法" class="headerlink" title="1.CSS基础语法"></a>1.CSS基础语法</h1><p>css样式是由一条和多条以分好隔开的样式声明组成</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size:50px;"</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-1-创建CSS样式表的三种方法"><a href="#1-1-创建CSS样式表的三种方法" class="headerlink" title="1.1. 创建CSS样式表的三种方法"></a>1.1. 创建CSS样式表的三种方法</h2><h3 id="元素内嵌样式"><a href="#元素内嵌样式" class="headerlink" title="元素内嵌样式"></a>元素内嵌样式</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在这里定义style--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red;font-size:50px;"</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-文档内嵌样式"><a href="#2-文档内嵌样式" class="headerlink" title="2.文档内嵌样式"></a>2.文档内嵌样式</h3><p>通过在head设置全局的样式：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--在这里定义style--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">      p &#123;</span></span><br><span class="line"><span class="undefined">        color: blue;</span></span><br><span class="line"><span class="undefined">        font-size: 40px;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段文本<span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="3-外部引入样式"><a href="#3-外部引入样式" class="headerlink" title="3.外部引入样式"></a>3.外部引入样式</h3><p><strong>这是最常用的一种方式，包括</strong></p><ol><li>创建一个外部的CSS文件<code>style.css</code> 用于设置字体颜色和大小</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在创建一个外部CSS文件<code>test.css</code>用于设置文字斜体</li></ol><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">b</span>&#123;</span><br><span class="line">  <span class="attribute">font-style</span>: italic;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在html文件中引用多个CSS文件</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"test.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一段<span class="tag">&lt;<span class="name">b</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="1-2-样式层叠和继承"><a href="#1-2-样式层叠和继承" class="headerlink" title="1.2. 样式层叠和继承"></a>1.2. 样式层叠和继承</h2><p>样式层叠： 同一个元素通过不同方式设置样式表产生的样式重叠<br>样式继承： 某一个被嵌套的元素得到它的父元素样式</p><p><strong>浏览器样式</strong></p><p>浏览器本身自带的样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>b元素本身就有加粗样式<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">"font-weight: bold;"</span>&gt;</span>span本身没有家畜，但是可以自己设置家畜<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-2-样式层叠"><a href="#1-2-2-样式层叠" class="headerlink" title="1.2.2. 样式层叠"></a>1.2.2. 样式层叠</h3><p>样式层叠通过五种方法进行(优先级从低到高，4最高)</p><ol><li>浏览器样式：自带样式</li><li>外部引用样式(<code>&lt;linl&gt;</code>引入)</li><li>文档内嵌样式(<code>&lt;style&gt;</code>设置)</li><li>元素内嵌样式(使用<code>style</code>属性)</li><li>自定义强制性优先级(<code>important</code>)</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"test.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">      p &#123;</span></span><br><span class="line"><span class="undefined">        color: green important;</span></span><br><span class="line"><span class="undefined">        font-size: 20px;</span></span><br><span class="line"><span class="undefined">      &#125;</span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>我要叠加三种样式<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="1-2-3-样式继承"><a href="#1-2-3-样式继承" class="headerlink" title="1.2.3. 样式继承"></a>1.2.3. 样式继承</h3><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color:red"</span>&gt;</span>这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>你会发现整段文本就会是红色的，虽然我并没设置<code>b</code>元素为红色</p><p><strong>样式继承只用于元素的外观(文字，颜色，字体等)，布局样式不会被继承</strong></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">  p &#123;</span></span><br><span class="line"><span class="undefined">    border: 1px solid red;</span></span><br><span class="line"><span class="undefined">  &#125;</span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这时候p元素有外边框，但是b元素没有</p><h1 id="2-CSS选择器"><a href="#2-CSS选择器" class="headerlink" title="2. CSS选择器"></a>2. CSS选择器</h1><p>CSS选择器就是定外到你想要的设置的元素，然后对他进行样式设置，主要分为</p><ol><li>基本选择器</li><li>复合选择器</li><li>伪元素选择器</li></ol><table><thead><tr><th>选择器</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>*</code></td><td>通用选择器</td><td>选择所有的元素</td></tr><tr><td><code>&lt;type&gt;</code></td><td>元素选择器</td><td>选择指定类型的元素</td></tr><tr><td><code>#&lt;id&gt;</code></td><td>id选择器</td><td>选择指定id属性的元素</td></tr><tr><td><code>&lt;class&gt;</code></td><td>class选择器</td><td>选择指定class属性的元素</td></tr><tr><td><code>[attr]</code></td><td>属性选择器</td><td>选择指定attr属性的元素</td></tr><tr><td><code>s1,s2,s3...</code></td><td>分组选择器</td><td>选择多个选择器的元素</td></tr><tr><td><code>s1 s2</code></td><td>后代选择器</td><td>选择指定选择器的后代元素</td></tr><tr><td><code>s1&gt;s2</code></td><td>子选择器</td><td>选择指定选择器的子元素</td></tr><tr><td><code>s1+s2</code></td><td>相邻兄弟选择器</td><td>选择指定选择器相邻的元素</td></tr><tr><td><code>s1~s2</code></td><td>普通兄弟选择器</td><td>选指定选择器后面的元素</td></tr><tr><td><code>::first-line</code></td><td>伪元素选择器</td><td>选择块级元素文本的首行</td></tr><tr><td><code>::first-letter</code></td><td>伪元素选择器</td><td>选择块级元素文本的首字母</td></tr><tr><td><code>::before</code></td><td>伪元素选择器</td><td>选择元素之前插入内容</td></tr><tr><td><code>::after</code></td><td>伪元素选择器</td><td>选择元素之后插入内容</td></tr></tbody></table><h2 id="2-1-通用选择器"><a href="#2-1-通用选择器" class="headerlink" title="2.1. 通用选择器"></a>2.1. 通用选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line">*&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*通用选择器还匹配到了html和body元素*/</span></span><br></pre></td></tr></table></figure><h2 id="2-2-元素选择器"><a href="#2-2-元素选择器" class="headerlink" title="2.2. 元素选择器"></a>2.2. 元素选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-id选择"><a href="#2-3-id选择" class="headerlink" title="2.3. id选择"></a>2.3. id选择</h2><p><strong>id只能是一个全局唯一样式</strong></p><p><strong>这个选择器只能设置一个元素</strong></p><p>在css文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#abc</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"abc"</span>&gt;</span>这是HTML<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-4-类选择器"><a href="#2-4-类选择器" class="headerlink" title="2.4. 类选择器"></a>2.4. 类选择器</h2><p>为了补偿id选择器的缺点，可以一下子设置多个元素样式</p><p>在css文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*用.定义*/</span></span><br><span class="line"><span class="selector-class">.abc</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*只能b元素的abc才有效果*/</span></span><br><span class="line"><span class="selector-tag">b</span><span class="selector-class">.abc</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.def</span> &#123;</span><br><span class="line">  <span class="attribute">font-size</span>: <span class="number">40px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"abc"</span>&gt;</span>这是HTML<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span> <span class="attr">class</span>=<span class="string">"abc"</span>&gt;</span>哈哈哈哈<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"abc def"</span>&gt;</span>同时使用多个class的style<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-5-属性选择器"><a href="#2-5-属性选择器" class="headerlink" title="2.5. 属性选择器"></a>2.5. 属性选择器</h2><p>直接通过两个中括号里面包含属性名来设置</p><p>在css文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*属性匹配*/</span></span><br><span class="line"><span class="selector-attr">[href]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*属性+内容 匹配*/</span></span><br><span class="line"><span class="selector-attr">[tyep="password"]</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*属性+正则 匹配*/</span></span><br><span class="line"><span class="selector-attr">[href^="http"]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-attr">[href$=".cn"]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*属性+模糊查询 匹配*/</span></span><br><span class="line"><span class="selector-attr">[href*="baidu"]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*属性有多个值时，匹配其中一个 匹配*/</span></span><br><span class="line"><span class="selector-attr">[class~="edf"]</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在html中</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-6-复合选择器"><a href="#2-6-复合选择器" class="headerlink" title="2.6. 复合选择器"></a>2.6. 复合选择器</h2><p>将不同的选择器进行组合形成新的特定匹配</p><p>在css文件中</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">@<span class="keyword">charset</span> <span class="string">"UTF-8"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 分组选择器 */</span></span><br><span class="line"><span class="comment">/* 匹配所有的p,b,i,span元素 */</span></span><br><span class="line"><span class="selector-tag">p</span>,<span class="selector-tag">b</span>,<span class="selector-tag">i</span>,<span class="selector-tag">span</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#abc</span>, <span class="selector-class">.abc</span>, <span class="selector-tag">i</span>, <span class="selector-tag">span</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 后代选择器 */</span></span><br><span class="line"><span class="comment">/* 不在乎b到底是第几代 */</span></span><br><span class="line"><span class="selector-tag">p</span> <span class="selector-tag">b</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* 子选择器 */</span></span><br><span class="line"><span class="comment">/* b只能是p的儿子，孙子就不行了 */</span></span><br><span class="line"><span class="selector-tag">p</span>&gt;<span class="selector-tag">b</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 相邻兄弟选择器 */</span></span><br><span class="line"><span class="comment">/* 在html中，两个元素靠在一起 */</span></span><br><span class="line"><span class="selector-tag">p</span>+<span class="selector-tag">b</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 普通兄弟选择器 */</span></span><br><span class="line"><span class="comment">/* 中间可以有其他元素隔开 */</span></span><br><span class="line"><span class="selector-tag">p</span>~<span class="selector-tag">b</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-7-伪元素选择器"><a href="#2-7-伪元素选择器" class="headerlink" title="2.7. 伪元素选择器"></a>2.7. 伪元素选择器</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 块级首行 */</span></span><br><span class="line"><span class="comment">/* 在p,div，body等块级元素才有效果 */</span></span><br><span class="line"><span class="selector-pseudo">::first-line</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 块级首字母 */</span></span><br><span class="line"><span class="selector-pseudo">::first-letter</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文本前插入内容 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'点击-'</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 文本后插入内容 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">  <span class="attribute">content</span>: <span class="string">'搜索'</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-8-伪类选择器"><a href="#2-8-伪类选择器" class="headerlink" title="2.8. 伪类选择器"></a>2.8. 伪类选择器</h2><table><thead><tr><th>选择器</th><th>名称</th><th>说明</th></tr></thead><tbody><tr><td><code>:root</code></td><td>根元素选择器</td><td>选择文档的根元素</td></tr><tr><td><code>:first-child</code></td><td>子元素选择器</td><td>选择元素的第一个子元素</td></tr><tr><td><code>:last-child</code></td><td>子元素选择器</td><td>选择元素的最后一个子元素</td></tr><tr><td><code>:only-child</code></td><td>子元素选择器</td><td>选择元素中的唯一子元素</td></tr><tr><td><code>:only-of-type</code></td><td>子元素选择器</td><td>选择指定类型的唯一元素</td></tr><tr><td><code>:nth-child</code></td><td>子元素选择器</td><td>选择指定N个子元素</td></tr><tr><td><code>:enabled</code></td><td>UI选择器</td><td>选择启用状态元素</td></tr><tr><td><code>:disabled</code></td><td>UI选择器</td><td>选择禁用状态元素</td></tr><tr><td><code>:checked</code></td><td>UI选择器</td><td>选择被选中input勾选元素</td></tr><tr><td><code>:default</code></td><td>UI选择器</td><td>选择默认元素</td></tr><tr><td><code>:valid</code></td><td>UI选择器</td><td>验证有效选择input元素</td></tr><tr><td><code>:invalid</code></td><td>UI选择器</td><td>验证无效选择input元素</td></tr><tr><td><code>:required</code></td><td>UI选择器</td><td>有require属性的元素</td></tr><tr><td><code>:optional</code></td><td>UI选择器</td><td>没有required属性的元素</td></tr><tr><td><code>:link</code></td><td>动态选择器</td><td>未访问的超链接元素</td></tr><tr><td><code>:visited</code></td><td>动态选择器</td><td>已经访问的超链接元素</td></tr><tr><td><code>:hover</code></td><td>动态选择器</td><td>悬停在超链接上的元素</td></tr><tr><td><code>:active</code></td><td>动态选择器</td><td>激活超链接上的元素</td></tr><tr><td><code>:focus</code></td><td>动态选择器</td><td>获取焦点的元素</td></tr><tr><td><code>:not</code></td><td>其他选择器</td><td>否定选择的元素</td></tr><tr><td><code>:empty</code></td><td>其他选择器</td><td>选择没有内容的元素</td></tr><tr><td><code>:lang</code></td><td>其他选择器</td><td>选择包含lang属性的元素</td></tr><tr><td><code>:target</code></td><td>其他选择器</td><td>选取URL片段标识指向元素</td></tr></tbody></table><h3 id="2-8-1-结构性伪类选择器"><a href="#2-8-1-结构性伪类选择器" class="headerlink" title="2.8.1. 结构性伪类选择器"></a>2.8.1. 结构性伪类选择器</h3><p>根据元素在文档中的位置选择元素，伪类都需要加入前置选择器来限制范围  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-pseudo">:root</span> &#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/* ul&gt;li 来限制范围 */</span></span><br><span class="line"><span class="comment">/* 选择第一个子元素 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:first-child</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:only-child</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择第二个儿子 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child(2)</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 选择倒数第二个儿子 */</span></span><br><span class="line"><span class="selector-tag">ul</span> &gt; <span class="selector-tag">li</span><span class="selector-pseudo">:nth-last-child(2)</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span><span class="selector-pseudo">:only-of-type</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span><span class="selector-pseudo">:nth-of-type(2)</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span> &gt; <span class="selector-tag">p</span><span class="selector-pseudo">:nth-last-of-type(2)</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>CSS语法<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"style.css"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="undefined">    </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是儿子1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是儿子2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是儿子3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">li</span>&gt;</span>我是儿子4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">span</span>&gt;</span>这是另外一个段落<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-8-2-UI伪类选择器"><a href="#2-8-2-UI伪类选择器" class="headerlink" title="2.8.2. UI伪类选择器"></a>2.8.2. UI伪类选择器</h3><p>主要用于匹配表单form控件  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:enabled</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:disabled</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:checked</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:valid</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:invalid</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">disabled</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"checkbox"</span> <span class="attr">checked</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"checkbox"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">required</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">  </span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-8-3-动态选择器"><a href="#2-8-3-动态选择器" class="headerlink" title="2.8.3. 动态选择器"></a>2.8.3. 动态选择器</h3><p>跟鼠标有关  </p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 悬停状态的颜色 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 鼠标点下去不松的状态 */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* focus是对文本框的设置 */</span></span><br><span class="line"><span class="comment">/* 获取光标焦点时的样式 */</span></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>&#123;</span><br><span class="line">  <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span> = <span class="string">"www.baidu.com"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="2-8-4-其他选择器"><a href="#2-8-4-其他选择器" class="headerlink" title="2.8.4. 其他选择器"></a>2.8.4. 其他选择器</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">/* 选择除baidu外的其他URL */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:not(</span><span class="selector-attr">[href*="baidu"]</span>)&#123;</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:empty</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">:lang(en)</span>&#123;</span><br><span class="line">  <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;[TOC]&lt;/p&gt;
&lt;h1 id=&quot;1-CSS基础语法&quot;&gt;&lt;a href=&quot;#1-CSS基础语法&quot; class=&quot;headerlink&quot; title=&quot;1.CSS基础语法&quot;&gt;&lt;/a&gt;1.CSS基础语法&lt;/h1&gt;&lt;p&gt;css样式是由一条和多条以分好隔开的样式声明组成&lt;/p&gt;

      
    
    </summary>
    
      <category term="前端开发" scheme="http://haochen95.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="CSS" scheme="http://haochen95.github.io/tags/CSS/"/>
    
  </entry>
  
  <entry>
    <title>HTML语法大全之代码实现</title>
    <link href="http://haochen95.github.io/2019/03/05/HTML%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8%E4%B9%8B%E4%BB%A3%E7%A0%81%E5%AE%9E%E7%8E%B0/"/>
    <id>http://haochen95.github.io/2019/03/05/HTML语法大全之代码实现/</id>
    <published>2019-03-05T05:38:31.000Z</published>
    <updated>2019-03-05T05:39:07.647Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span> <span class="attr">dir</span>=<span class="string">"ltr"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>1.文本元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">b元素（加粗）： 这是<span class="tag">&lt;<span class="name">b</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">b</span>&gt;</span>教程 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">strong元素（加粗）： 这是<span class="tag">&lt;<span class="name">strong</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>教程 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">wbr元素(安全换行)： this is <span class="tag">&lt;<span class="name">wbr</span>&gt;</span>asdfasdgasdgfasdfasdf is apple <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">i元素(倾斜)： 这是<span class="tag">&lt;<span class="name">i</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">i</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">em元素(倾斜): 这是<span class="tag">&lt;<span class="name">em</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">em</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">var元素(倾斜): 这是<span class="tag">&lt;<span class="name">var</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">var</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">s元素(删除线):这是<span class="tag">&lt;<span class="name">s</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">s</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">del元素(删除线): 这是<span class="tag">&lt;<span class="name">del</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">del</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">u元素(下划线): 这是<span class="tag">&lt;<span class="name">u</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">u</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">ins元素(下划线): 这是<span class="tag">&lt;<span class="name">ins</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">small元素(放小字体): 这是<span class="tag">&lt;<span class="name">small</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">small</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">sub元素(下标): 这是HTML<span class="tag">&lt;<span class="name">sub</span>&gt;</span>5<span class="tag">&lt;/<span class="name">sub</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">sup元素(上标): 这是HTML<span class="tag">&lt;<span class="name">sup</span>&gt;</span>5<span class="tag">&lt;/<span class="name">sup</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">code元素(代码块): 这是<span class="tag">&lt;<span class="name">code</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">code</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">kdb元素(用户输入): 这是<span class="tag">&lt;<span class="name">kdb</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">kdb</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">abbr元素(缩写): 这是<span class="tag">&lt;<span class="name">abbr</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">abbr</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">dfn元素(表示术语): 这是<span class="tag">&lt;<span class="name">dfn</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">dfn</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">q元素(双引号): 这是<span class="tag">&lt;<span class="name">q</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">q</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">cite元素(引用标题): 这是<span class="tag">&lt;<span class="name">cite</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">cite</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">bdo元素(文字方向): 这是<span class="tag">&lt;<span class="name">bdo</span> <span class="attr">dir</span>=<span class="string">"rtl"</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">bdo</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">mark元素(突出显示):  这是<span class="tag">&lt;<span class="name">mark</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">mark</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">time元素(时间): 这是<span class="tag">&lt;<span class="name">time</span>&gt;</span>2019-01-01<span class="tag">&lt;/<span class="name">time</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">span元素(跟CSS搭配): 这是<span class="tag">&lt;<span class="name">span</span>&gt;</span>HTML<span class="tag">&lt;/<span class="name">span</span>&gt;</span>教程<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>2.超链接和路径<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span>&gt;</span>BaiDu<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--新开一个窗口进入百度--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"_blank"</span>&gt;</span>BaiDu<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--相对路径--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"html_01.html"</span>&gt;</span>转入第二页<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"../html_01_second.html"</span>&gt;</span>转入父目录<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">title</span>=<span class="string">"跳到百度"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://www.google.com.hk/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"</span> <span class="attr">alt</span>=<span class="string">"google"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>自动跳到页面顶部<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>3.锚点链接(页面内定位)<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#1"</span>&gt;</span>第一章<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#2"</span>&gt;</span>第二章<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#3"</span>&gt;</span>第三章<span class="tag">&lt;/<span class="name">a</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>4.分组元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--段落--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>这是另外一个段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--通用分组与段落类似--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这是一个通用分组<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>这是另外一个通用分组<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--引用大段落来自其他内容--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>这是一个来自其他内容的引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">blockquote</span>&gt;</span>这是另外一个来自其他内容的引用<span class="tag">&lt;/<span class="name">blockquote</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--展示格式化内容(编辑器怎么排版，我就怎么排版)--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">pre</span>&gt;</span></span><br><span class="line">    ########</span><br><span class="line">        #########</span><br><span class="line">               #######</span><br><span class="line"><span class="tag">&lt;/<span class="name">pre</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--添加水平线--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>4.1. 列表<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">无序列表:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://www.google.com.hk/"</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">有序列表：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">ol</span> <span class="attr">start</span>=<span class="string">"2"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>张三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">value</span>=<span class="string">"8"</span>&gt;</span>李四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span>王五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ol</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">生成说明列表(概念和概念的解释)：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>这是第一份文件<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>这是第一份文件的详细信息1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>这是第一份文件的详细信息2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">dt</span>&gt;</span>这是第二份文件<span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>这是第二份文件的详细信息1<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dd</span>&gt;</span>这是第二份文件的详细信息2<span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">dl</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">图片链接: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">figure</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">figcaption</span>&gt;</span>这是一张图片<span class="tag">&lt;/<span class="name">figcaption</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span> = <span class="string">"img/dog.jpg"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">figure</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>5.表格元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">构建基本的表格：</span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--cellpadding: 内容和边框的距离--&gt;</span></span><br><span class="line"><span class="comment">&lt;!--cellspacingg: 格子之间的距离--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"500"</span> <span class="attr">height</span> = <span class="string">"300"</span> <span class="attr">cellpadding</span>=<span class="string">"10"</span> <span class="attr">cellspacing</span> = <span class="string">"10"</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--表的标题--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">caption</span>&gt;</span>这是标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">&lt;!--设置某一列为红色--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">colgroup</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--第一列不设置--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span>&gt;</span></span><br><span class="line">      <span class="comment">&lt;!--第二列为红色--&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">col</span> <span class="attr">style</span> = <span class="string">"background: red;"</span> <span class="attr">span</span> = <span class="string">"1"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span></span><br><span class="line">  <span class="comment">&lt;!--tr表示一行--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--th表示表头--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--valign表示垂直对齐--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span> <span class="attr">valign</span>=<span class="string">"top"</span>&gt;</span>序号<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>产品名称<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>产品价格<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>产品数量<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">th</span>&gt;</span>统计<span class="tag">&lt;/<span class="name">th</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--colspan表示水平合并--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">"5"</span>&gt;</span>水平合并<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--td表示一格--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--align表示水平对齐--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>￥5.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>1000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--rowspan表示垂直合并--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>橘子<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>￥6.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2000<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>3<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>葡萄<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>￥16.00<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span>&gt;</span>2300<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>6.传统表格<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span> = <span class="string">"800"</span> <span class="attr">height</span>=<span class="string">"800"</span> <span class="attr">border</span>=<span class="string">"1"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"260"</span> <span class="attr">valign</span>=<span class="string">"top"</span> <span class="attr">bgcolor</span>=<span class="string">"#f2f2f2"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">table</span> <span class="attr">width</span>=<span class="string">"260"</span> <span class="attr">border</span>=<span class="string">"0"</span> <span class="attr">cellpadding</span>=<span class="string">"0"</span> <span class="attr">cellspacing</span>=<span class="string">"0"</span> <span class="attr">align</span>=<span class="string">"center"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">height</span>=<span class="string">"100"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"230"</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"https://www.google.com.hk/images/branding/googlelogo/1x/googlelogo_color_272x92dp.png"</span> <span class="attr">widht</span>=<span class="string">"200"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"30"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>Google<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>13251361449<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">"right"</span>&gt;</span>13251361449@qq.com<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"30"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"480"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">"30"</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>7.文档元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">标题: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">header</span>&gt;</span></span><br><span class="line">    这里存放页面的表头部分：LOGO,标题，导航等.</span><br><span class="line">    <span class="tag">&lt;<span class="name">hgroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h4</span>&gt;</span>这是一个副标题<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">hgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">nav</span>&gt;</span></span><br><span class="line">        这里是一个导航</span><br><span class="line">    <span class="tag">&lt;/<span class="name">nav</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line"></span><br><span class="line">主题部分: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">section</span>&gt;</span></span><br><span class="line">    这是文档的主题部分</span><br><span class="line"><span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">article</span>&gt;</span></span><br><span class="line">    这是一个文档</span><br><span class="line">    <span class="tag">&lt;<span class="name">header</span>&gt;</span>...<span class="tag">&lt;/<span class="name">header</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">section</span>&gt;</span>...<span class="tag">&lt;/<span class="name">section</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">footer</span>&gt;</span>...<span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">article</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">aside</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">页面尾部: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">footer</span>&gt;</span></span><br><span class="line">    这里是页面尾部，版权啊，等等</span><br><span class="line">    <span class="tag">&lt;<span class="name">address</span>&gt;</span></span><br><span class="line">        这里是联系信息</span><br><span class="line">    <span class="tag">&lt;/<span class="name">address</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">footer</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>8.内嵌框架<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>8.1.插入图片<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">插入图片：</span><br><span class="line"><span class="comment">&lt;!--alt:加载错误的时候显示的文字，width/height设置长度高度, usemap设置点击图片跳转到另外一个网址--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"img/dog.jpg"</span> <span class="attr">alt</span>=<span class="string">"狗图"</span> <span class="attr">width</span>=<span class="string">"200"</span> <span class="attr">height</span>=<span class="string">"300"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>8.2. iframe的使用<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">在页面中插入另外一个frame： <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.baidu.com"</span> <span class="attr">target</span>=<span class="string">"in"</span>&gt;</span>百度<span class="tag">&lt;/<span class="name">a</span>&gt;</span> | <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://www.haosou.com"</span> <span class="attr">target</span>=<span class="string">"in"</span>&gt;</span>好搜<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">"http://www.bilibili.com"</span> <span class="attr">frameborder</span>=<span class="string">"1"</span> <span class="attr">width</span>=<span class="string">"800"</span>, <span class="attr">height</span>=<span class="string">"600"</span> <span class="attr">name</span>=<span class="string">"in"</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">嵌入插件内容：  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--为了扩展浏览器的功能，--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">embed</span> <span class="attr">src</span>=<span class="string">"https://www.bilibili.com/video/av10257787/?p=2"</span> <span class="attr">width</span>=<span class="string">"480"</span> <span class="attr">height</span>=<span class="string">"400"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">进度条：  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">progress</span> <span class="attr">value</span> = <span class="string">"30"</span> <span class="attr">max</span> = <span class="string">"100"</span>&gt;</span><span class="tag">&lt;/<span class="name">progress</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">范围值：  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">meter</span> <span class="attr">value</span> = <span class="string">"30"</span> <span class="attr">min</span> = <span class="string">"10"</span> <span class="attr">max</span> = <span class="string">"100"</span> <span class="attr">low</span> = <span class="string">"40"</span> <span class="attr">high</span>=<span class="string">"80"</span> <span class="attr">optimum</span>=<span class="string">"60"</span>&gt;</span><span class="tag">&lt;/<span class="name">meter</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>9.音频和视频<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!--autoplay自动播放，loop反复播放，muted静音, poster是视频开头的图片，preload加载网络video使用，none什么都不加载，metadata下第一帧，auto尽快下载--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">video</span> <span class="attr">src</span>=<span class="string">"pink.mp4"</span> <span class="attr">width</span>=<span class="string">"640"</span> <span class="attr">height</span>=<span class="string">"480"</span> <span class="attr">controls</span> <span class="attr">poster</span>=<span class="string">"img/dog.jpg"</span>&gt;</span><span class="tag">&lt;/<span class="name">video</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span>  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">音频和视频几乎一样（除了没有宽高）: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">audio</span> <span class="attr">src</span>=<span class="string">"xusong.mp3"</span> <span class="attr">controls</span>&gt;</span><span class="tag">&lt;/<span class="name">audio</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>10.表单元素<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>1. form元素（用以用户输入数据）:<span class="tag">&lt;/<span class="name">b</span>&gt;</span>  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--action：表单提交的页面， method：用get和post提交，enctype：采用编码格式，name：表单名称，target：提交目标，</span></span><br><span class="line"><span class="comment">    autocomplete浏览器记住用户数据，novalidate验证性,form让表单为的元素和指定的表单挂钩提交---&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"form01"</span> <span class="attr">autocomplete</span>=<span class="string">"on"</span> <span class="attr">action</span>=<span class="string">"http://www.haosou.com"</span> <span class="attr">id</span>=<span class="string">"register"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--fieldset对表单进行分组, name+form+disabled--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--legend为分组添加标签--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">legend</span>&gt;</span>注册分组<span class="tag">&lt;/<span class="name">legend</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--label可用于CSS--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--input属性:autofocus:光标选中，disabled不可输入，autocomplete记住用户，type，name用提交数据的，value的默认值---&gt;</span></span><br><span class="line">        用户名： <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"User"</span> <span class="attr">value</span>=<span class="string">"666"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--外部表单控件可以连接form--&gt;</span></span><br><span class="line">        电子邮件： <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">form</span> = <span class="string">"register"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!--button属性: type：submit提交/reset重置/button按钮， formaction, formenctype, formmethod, formtarget, formvalidate--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>2. Input的type属性：<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--text的属性: maxlength,size, name, value, readonly, disabled, list提供建议值,required必须输入才能提交, palceholder输入字符的提示 --&gt;</span></span><br><span class="line">    文本：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">list</span>=<span class="string">"abc"</span> <span class="attr">required</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--password的属性：与text基本一致--&gt;</span></span><br><span class="line">    密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">placeholder</span>=<span class="string">"输入密码吧"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    搜索: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"search"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--max,min,step,--&gt;</span></span><br><span class="line">    数字: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    范围: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"range"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    日期: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"date"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"month"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"time"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"week"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime"</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"datetime-local"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    颜色: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"color"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    复选框: 音乐<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"music"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>  体育<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"sport"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    单选框: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">checked</span>&gt;</span>男  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"sex"</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>女 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    提交: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"submit"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    重置: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    按钮: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    图片按钮: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span> = <span class="string">"img"</span> <span class="attr">src</span>=<span class="string">"img/dog.jpg"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    email: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    telephone: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"tel"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    URL: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"url"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    隐藏:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    上传文件:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/gif"</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">datalist</span> <span class="attr">id</span>=<span class="string">"abc"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>橘子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">datalist</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>3. 下拉列表框：<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://www.haosou.com"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--auto,disabled,form size（下拉高度）,multiple（多选）,autofocus, required--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!--选项分组--&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"水果"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>苹果<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span> <span class="attr">selected</span>&gt;</span>橙子<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>香蕉<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"粗粮"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"4"</span>&gt;</span>大米<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"5"</span>&gt;</span>稻谷<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"6"</span>&gt;</span>玉米<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span>  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">b</span>&gt;</span>4.多行文本框：<span class="tag">&lt;/<span class="name">b</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://www.haosou.com"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--name,form,readonly,disabled,maxlength,autpfocus,placeholder,rows,cols,wrap,requried--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"content"</span> <span class="attr">cols</span>=<span class="string">"30"</span> <span class="attr">rows</span>=<span class="string">"10"</span>&gt;</span></span><br><span class="line">        请留下你的建议</span><br><span class="line">    <span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span>&gt;</span>提交<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span>10.1. 标准的form表单写法<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">form默认是GET方法提交，直接通过地址信息提交，用于大量文本且不敏感的信息 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">form可以通过method改为post， 输入的敏感信息就不会再地址中显示出来，用于少量文本且敏感的信息<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- form表单会提交到这里https://www.google.com.hk/</span></span><br><span class="line"><span class="comment">?username=123</span></span><br><span class="line"><span class="comment">&amp;pwd=123</span></span><br><span class="line"><span class="comment">&amp;gender=0</span></span><br><span class="line"><span class="comment">&amp;like=game&amp;like=shopping</span></span><br><span class="line"><span class="comment">&amp;site=2</span></span><br><span class="line"><span class="comment">&amp;info=hello --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"https://www.google.com.hk"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- for-id的设置可以使得label可点击 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- name用于在提交地址中显示来定位 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"username"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"pwd"</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"pwd"</span> <span class="attr">id</span>=<span class="string">"pwd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"0"</span> <span class="attr">id</span>=<span class="string">"male"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"male"</span>&gt;</span>男<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"gender"</span> <span class="attr">value</span>=<span class="string">"1"</span> <span class="attr">id</span>=<span class="string">"female"</span>&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"female"</span>&gt;</span>女<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>爱好：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like"</span> <span class="attr">value</span>=<span class="string">"game"</span>&gt;</span>游戏</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like"</span> <span class="attr">value</span>=<span class="string">"sleep"</span>&gt;</span>睡觉</span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span>=<span class="string">"like"</span> <span class="attr">value</span>=<span class="string">"shopping"</span>&gt;</span>购物</span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>个人照片<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">""</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>籍贯：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">"site"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"1"</span>&gt;</span>北京<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"2"</span>&gt;</span>上海<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"3"</span>&gt;</span>广州<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span>&gt;</span>个人描述<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">name</span>=<span class="string">"info"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"提交"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"reset"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"重置"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">name</span>=<span class="string">""</span> <span class="attr">value</span>=<span class="string">"单纯的按钮"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"hidden"</span> <span class="attr">name</span>=<span class="string">""</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>11.全局属性和其他<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"></span><br><span class="line">1. 实体：将有特殊意义的字符通过实体代码显示出来 <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">显示括号： &amp;lt;div&amp;gt;  &amp;lt;music&amp;gt; <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">空格： 我&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 你<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">和号： &amp;amp;HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">引号： &amp;quot;HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">撇号：&amp;apos;HTML<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">版权：&amp;copy;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2.元数据meta: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">2.1. 指定名/值元数据对  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;meta name="author" content="bnbbs"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;meta name="description" content="这是一个HTML页面"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;meta name="keywords" content="html5响应"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;meta name="generator" content="text3"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">2.2.声明编码格式<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;meta charset="utf-8"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3.全局属性: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.1. id属性: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p id="abc"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p id="def"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">id属性给元素分配一个唯一的标识符，通常用于CSS和javascript调用选中元素，只能是独有的<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.2. class属性: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p class="abc"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p class="abc"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p class="abc"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">class也是用于定位，是用于元素的归类，通过CSS同时设置多个元素<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.3.accesskey元素: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;input type="text" name="user" accesskey="n&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">快捷键操作，window下为Alt+指定的键<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.4.contenteditable属性:<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p contenteditable="true"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">用以修改text<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.5. dir属性： <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p dir="rtl"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">设置文本方向，左到右为ltr，右到左为rtl<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.6. hidden属性: <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p hidden&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">隐藏元素<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">3.7. lang属性：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p lang="en"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">可以局部设置语言<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3.8. title属性：<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p title="HTML5教程"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">对元素的内容进行额外提示<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3.9.tabindex元素  <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;input type="text" name="user" tabindex="1"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">表单中按下Tab键，实现获取焦点的顺序，-1为不会被选中<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">3.10. style属性<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">&amp;lt;p style="color: red;"&amp;gt;<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">设置行内的CSS样式<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>这是第一章内容</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">"2"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>这是第二章内容</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">name</span> = <span class="string">"3"</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>这是第三章内容</span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
      <category term="前端开发" scheme="http://haochen95.github.io/categories/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="HTML" scheme="http://haochen95.github.io/tags/HTML/"/>
    
  </entry>
  
  <entry>
    <title>Java面向对象编程</title>
    <link href="http://haochen95.github.io/2019/03/04/Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1%E7%BC%96%E7%A8%8B/"/>
    <id>http://haochen95.github.io/2019/03/04/Java面向对象编程/</id>
    <published>2019-03-04T10:45:42.000Z</published>
    <updated>2019-03-04T10:52:35.088Z</updated>
    
    <content type="html"><![CDATA[<p>本文主要的知识点是：  </p><ol><li>java中类的定义  </li><li>this和static的用法</li><li>封装的含义</li><li>重载的含义</li></ol><h1 id="1-Java的面向对象方法"><a href="#1-Java的面向对象方法" class="headerlink" title="1. Java的面向对象方法"></a>1. Java的面向对象方法</h1><ul><li>继承  </li><li>多态  </li><li>封装  </li></ul><p><strong>this的用法</strong>  </p><ul><li>引用隐式参数  </li><li>调用该类的其他构造器  </li></ul><p><strong>super的用法</strong>  </p><ul><li>调用超类方法  </li><li>调用超类的构造器  </li></ul><h2 id="1-1-创建类和对象的方法"><a href="#1-1-创建类和对象的方法" class="headerlink" title="1.1. 创建类和对象的方法"></a>1.1. 创建类和对象的方法</h2><p>对象和引用的一个关系图：  </p><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190116132817524-138031533.png" alt>  </p><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190116132823234-602688302.png" alt>  </p><h2 id="1-2-定义class的模板"><a href="#1-2-定义class的模板" class="headerlink" title="1.2. 定义class的模板"></a>1.2. 定义class的模板</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ClassName</span> </span>&#123;</span><br><span class="line">  </span><br><span class="line">  field1 <span class="comment">// 属性： 描述类的状态</span></span><br><span class="line">  field2</span><br><span class="line">  ...</span><br><span class="line">  constructor1</span><br><span class="line">  constructor2</span><br><span class="line">  ...</span><br><span class="line">  method1  <span class="comment">// 方法： 描述类的行为</span></span><br><span class="line">  method2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="1-3-定义实例"><a href="#1-3-定义实例" class="headerlink" title="1.3. 定义实例"></a>1.3. 定义实例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">      <span class="comment">// 对象的使用方法  </span></span><br><span class="line">      <span class="comment">// 对象.变量： staff.name</span></span><br><span class="line">      <span class="comment">// 对象.函数（）： staff.getname()</span></span><br><span class="line">        Employee[] staff = <span class="keyword">new</span> Employee[<span class="number">3</span>];</span><br><span class="line"></span><br><span class="line">        staff[<span class="number">0</span>] = <span class="keyword">new</span> Employee(<span class="string">"Zhang"</span>, <span class="number">75000</span>, <span class="number">1977</span>, <span class="number">12</span>,<span class="number">15</span>);</span><br><span class="line">        staff[<span class="number">1</span>] = <span class="keyword">new</span> Employee(<span class="string">"Li"</span>, <span class="number">23000</span>, <span class="number">1932</span>, <span class="number">3</span>,<span class="number">5</span>);</span><br><span class="line">        staff[<span class="number">2</span>] = <span class="keyword">new</span> Employee(<span class="string">"Zhang"</span>, <span class="number">56444</span>, <span class="number">1964</span>, <span class="number">6</span>,<span class="number">21</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Employee e: staff)&#123;</span><br><span class="line">            e.raiseSalary(<span class="number">5</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (Employee e: staff)&#123;</span><br><span class="line">            System.out.println(<span class="string">"name="</span> + e.getName() + <span class="string">", salary="</span> + e.getSalary() + <span class="string">", hireday="</span> + e.getHireDay());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 一个类可以有无限多个对象</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Employee</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 三个实例域用来存放将要操作的数据</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">double</span> salary;</span><br><span class="line">    <span class="keyword">private</span> LocalDate hireDay;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 构造器（与类名同名），总是伴随着new操作符的执行而被调用  </span></span><br><span class="line">    <span class="comment">// 每个类可以有一个以上的构造器</span></span><br><span class="line">    <span class="comment">// 如果类中没有构造器，java会默认有一个构造器用于初始化</span></span><br><span class="line">    <span class="comment">// 但是如果类的构造器大于1个的话，需要自己构造默认构造器</span></span><br><span class="line">    <span class="comment">// 构造器可以有0,1，...等多个参数</span></span><br><span class="line">    <span class="comment">// 构造器没有返回值，即没有void</span></span><br><span class="line">    <span class="comment">// 构造器总是伴随着new的操作一起调用</span></span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">Employee</span><span class="params">(String n, <span class="keyword">double</span> s, <span class="keyword">int</span> year, <span class="keyword">int</span> month, <span class="keyword">int</span> day)</span></span>&#123;</span><br><span class="line">        name = n;</span><br><span class="line">        salary = s;</span><br><span class="line">        hireDay = LocalDate.of(year, month, day);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 需要获得或者设置实例域的值，需要提供以下三个内容：  </span></span><br><span class="line">    <span class="comment">// (1).一个私有的数据域</span></span><br><span class="line">    <span class="comment">// (2).一个公有的域访问器方法</span></span><br><span class="line">    <span class="comment">// (3).一个公有的域更改器方法</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">getSalary</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> LocalDate <span class="title">getHireDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> hireDay;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setHireDay</span><span class="params">(LocalDate hireDay)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.hireDay = hireDay;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setName</span><span class="params">(String name)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setSalary</span><span class="params">(<span class="keyword">double</span> salary)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.salary = salary;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// class方法有两个参数： 显示参数(括号内部的参数) + 隐式参数(引用该方法的对象)</span></span><br><span class="line">    <span class="comment">// 用this来表示隐式参数，表示使用该方法的对象</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">raiseSalary</span><span class="params">(<span class="keyword">double</span> rate)</span></span>&#123;</span><br><span class="line">      <span class="comment">// 可以直接访问类的属性</span></span><br><span class="line">        <span class="keyword">double</span> raise = <span class="keyword">this</span>.salary * rate / <span class="number">100</span>;</span><br><span class="line">        <span class="keyword">this</span>.salary = <span class="keyword">this</span>.salary + raise;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2-Java构造器"><a href="#2-Java构造器" class="headerlink" title="2. Java构造器"></a>2. Java构造器</h1><p>构造器的注意事项  </p><ul><li>构造器与类同名</li><li>每个类可以有一个以上的构造器</li><li>构造器没有返回值</li><li>构造类的对象时，构造器会自动运行来初始化类</li><li>伴随着new而调用，跟方法不同  </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Employee a1 = <span class="keyword">new</span> Employee(<span class="string">"hao"</span>);</span><br></pre></td></tr></table></figure><h2 id="2-1-隐式参数和显式参数"><a href="#2-1-隐式参数和显式参数" class="headerlink" title="2.1. 隐式参数和显式参数"></a>2.1. 隐式参数和显式参数</h2><p>方法用于操纵对象以及存取它们的实例域  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">a1.raiseSalary(<span class="number">10</span>);</span><br><span class="line"><span class="comment">// 隐式参数.raiseSalary(显式参数)</span></span><br></pre></td></tr></table></figure><p>关键字this用于代表隐式参数  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">raiseSalary</span><span class="params">(<span class="keyword">double</span> byPercent)</span></span>&#123;</span><br><span class="line">  <span class="keyword">double</span> raise = <span class="keyword">this</span>.salary * byPercent / <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">this</span>.salary += raise;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-2-封装的优点"><a href="#2-2-封装的优点" class="headerlink" title="2.2. 封装的优点"></a>2.2. 封装的优点</h2><p>在定义一个类的时候，需要提供以下三个内容：  </p><ul><li>一个私有的数据域；</li><li>一个公有的域访问器方法；</li><li>一个公有的域更改器方法；</li></ul><p>封装的优点如下：  </p><ol><li>保护数据不给外界破坏</li><li>检查输入数据  </li></ol><h2 id="2-3-final实例域"><a href="#2-3-final实例域" class="headerlink" title="2.3. final实例域"></a>2.3. final实例域</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> String name;</span><br><span class="line"><span class="comment">// 一旦建立，不可更改</span></span><br></pre></td></tr></table></figure><h1 id="3-静态域和静态方法"><a href="#3-静态域和静态方法" class="headerlink" title="3. 静态域和静态方法"></a>3. 静态域和静态方法</h1><h2 id="3-1-静态成员变量"><a href="#3-1-静态成员变量" class="headerlink" title="3.1. 静态成员变量"></a>3.1. 静态成员变量</h2><p>静态成员变量的特点：  </p><ul><li>可以直接通过类名调用</li><li>类的对象共用一个静态变量(任何一个对象修改这个变量，所有的静态变量都变了)</li><li>理解为<strong>类级别</strong>的变量</li></ul><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190116132853723-1006882201.png" alt><br><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190116132847363-522111909.png" alt></p><h2 id="3-2-静态函数"><a href="#3-2-静态函数" class="headerlink" title="3.2. 静态函数"></a>3.2. 静态函数</h2><ul><li>也可以直接通过类名调用  </li><li>静态函数中不能使用非静态变量</li></ul><h2 id="3-3-静态代码块"><a href="#3-3-静态代码块" class="headerlink" title="3.3. 静态代码块"></a>3.3. 静态代码块</h2><p>在装载类的时候执行,为了静态变量赋予初始值</p><h2 id="3-4-main方法"><a href="#3-4-main方法" class="headerlink" title="3.4. main方法"></a>3.4. main方法</h2><p>main方法也是一个静态方法，其不对任何对象进行操作，事实上，在启动程序时还没有任何一个对象，静态的main方法将执行并创建程序所需要的对象.</p><h2 id="实例演示"><a href="#实例演示" class="headerlink" title="实例演示"></a>实例演示</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 静态变量</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">int</span> i;</span><br><span class="line">  String name;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 静态函数</span></span><br><span class="line">  <span class="function"><span class="keyword">static</span> <span class="title">fun</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// System.out.println("我是静态函数" + this.name); 这是错误的</span></span><br><span class="line">    <span class="comment">// 静态函数中不能使用非静态变量,如果这是this的话，这个this该如何解释，但是静态函数</span></span><br><span class="line">    <span class="comment">// 是直接通过类名调用的，而不是对象调用.</span></span><br><span class="line">    System.out.println(<span class="string">"我是静态函数"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 静态代码块</span></span><br><span class="line">  <span class="keyword">static</span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"我是静态代码块"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line"></span><br><span class="line">    Person.i = <span class="number">10</span>;</span><br><span class="line">    System.out.println(<span class="string">"p1的i值是"</span> + p1.i);</span><br><span class="line">    System.out.println(<span class="string">"p2的i值是"</span> + p2.i);</span><br><span class="line"></span><br><span class="line">    Person.fun();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果为</span></span><br><span class="line"><span class="comment">// p1的i值是: 10</span></span><br><span class="line"><span class="comment">// p2的i值是: 10</span></span><br></pre></td></tr></table></figure><h1 id="4-函数重载和this关键字"><a href="#4-函数重载和this关键字" class="headerlink" title="4. 函数重载和this关键字"></a>4. 函数重载和this关键字</h1><h2 id="4-1-重载"><a href="#4-1-重载" class="headerlink" title="4.1. 重载"></a>4.1. 重载</h2><p>在一个类中允许函数重名的现象   </p><ul><li>两个或者多个函数在同一个类中</li><li>函数名相同</li><li>参数列表不同 </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">funA</span><span class="params">()</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"无参数的funA"</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">funA</span><span class="params">(<span class="keyword">int</span> i)</span></span>&#123;</span><br><span class="line">    System.out.println(<span class="string">"有参数的funA"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">A a = <span class="keyword">new</span> A();</span><br><span class="line">a.funA();     <span class="comment">// 无参数的funA</span></span><br><span class="line">a.funA(<span class="number">10</span>);   <span class="comment">//有参数的funA</span></span><br></pre></td></tr></table></figure><p>重载在构造函数中的使用,构造函数的特点：  </p><ul><li>没有返回值的定义</li><li>和类名一样</li><li>如果类中没有构造函数，编译器会自动添加一个空的构造函数</li><li>如果类中已经有了构造函数了，编译器就不会再添加一个无参数的构造函数</li><li>作用是为类赋予初始值</li><li>构造函数也可以重载  </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  String name;</span><br><span class="line">  <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">  A()&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  A(String name, <span class="keyword">int</span> age)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-2-this的使用"><a href="#4-2-this的使用" class="headerlink" title="4.2. this的使用"></a>4.2. this的使用</h2><ul><li>代表调用这个方法(函数)的对象</li><li>代表类中的成员变量</li><li>调用本类中的另外一个构造函数</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Person</span></span>&#123;</span><br><span class="line">  String name;</span><br><span class="line">  String age;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// this 在构造函数的用法</span></span><br><span class="line">  Person()&#123;</span><br><span class="line">    System.out.println(<span class="string">"无参数构造 "</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person(String name)&#123;</span><br><span class="line">    <span class="keyword">this</span>.name = name;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  Person(String name, String age)&#123;</span><br><span class="line">    <span class="keyword">this</span>(name);</span><br><span class="line">    <span class="keyword">this</span>.age = age;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">void</span> <span class="title">talk</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">// this在方法中的用法</span></span><br><span class="line">    System.out.println(<span class="string">"My name is "</span> + <span class="keyword">this</span>.name);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String args[])</span></span>&#123;</span><br><span class="line">    Person p1 = <span class="keyword">new</span> Person();</span><br><span class="line">    p1.name = <span class="string">"zhangsan"</span>;</span><br><span class="line">    Person p2 = <span class="keyword">new</span> Person();</span><br><span class="line">    p2.name = <span class="string">"lisi"</span>;</span><br><span class="line"></span><br><span class="line">    p1.talk();</span><br><span class="line">    p2.talk();</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 结果为  </span></span><br><span class="line"><span class="comment">// my name is zhangsan</span></span><br><span class="line"><span class="comment">// my name is lisi</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文主要的知识点是：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;java中类的定义  &lt;/li&gt;
&lt;li&gt;this和static的用法&lt;/li&gt;
&lt;li&gt;封装的含义&lt;/li&gt;
&lt;li&gt;重载的含义&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id=&quot;1-Java的面向对象方法&quot;&gt;&lt;a href=&quot;#1
      
    
    </summary>
    
      <category term="Java" scheme="http://haochen95.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>数据结构与算法知识点</title>
    <link href="http://haochen95.github.io/2019/03/03/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95%E7%9F%A5%E8%AF%86%E7%82%B9/"/>
    <id>http://haochen95.github.io/2019/03/03/数据结构与算法知识点/</id>
    <published>2019-03-03T12:43:39.000Z</published>
    <updated>2019-03-03T12:44:40.398Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_20180320090743532461.png" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_20180320090743532461.png&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="数据结构与算法" scheme="http://haochen95.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
    
    
  </entry>
  
  <entry>
    <title>Android开发路线图</title>
    <link href="http://haochen95.github.io/2019/03/03/Android%E5%BC%80%E5%8F%91%E8%B7%AF%E7%BA%BF%E5%9B%BE/"/>
    <id>http://haochen95.github.io/2019/03/03/Android开发路线图/</id>
    <published>2019-03-03T10:57:27.000Z</published>
    <updated>2019-03-03T10:58:02.355Z</updated>
    
    <content type="html"><![CDATA[<p><img src="http://images.cnblogs.com/cnblogs_com/haochen273/1389248/o_47685-20161017144827185-112405259.jpg" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;http://images.cnblogs.com/cnblogs_com/haochen273/1389248/o_47685-20161017144827185-112405259.jpg&quot; alt&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Android Development" scheme="http://haochen95.github.io/categories/Android-Development/"/>
    
    
      <category term="Android" scheme="http://haochen95.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>加密测试</title>
    <link href="http://haochen95.github.io/2019/03/02/%E5%8A%A0%E5%AF%86%E6%B5%8B%E8%AF%95/"/>
    <id>http://haochen95.github.io/2019/03/02/加密测试/</id>
    <published>2019-03-01T16:04:41.000Z</published>
    <updated>2019-03-01T16:06:29.121Z</updated>
    
    <content type="html"><![CDATA[<script src="//cdn.bootcss.com/jquery/1.11.3/jquery.min.js"></script><div id="hbe-security">  <div class="hbe-input-container">  <input type="password" class="hbe-form-control" id="pass" placeholder="密码为“你好”的拼音" />    <label for="pass">密码为“你好”的拼音</label>    <div class="bottom-line"></div>  </div></div><div id="decryptionError" style="display: none;">Incorrect Password!</div><div id="noContentError" style="display: none;">No content to display!</div><div id="encrypt-blog" style="display:none">U2FsdGVkX18rD9yEt0mWfj7WA0z3M7YvGhnZs2tDHpZhzh6Jv3MAbAbGzKoNyonc4jKh++Fbf6n9K0ul329VbbfPVVRFGCynY9Bf2g3Jrc2T43evA0kOalQGW8e7ImAXdKiAEj1W1+EnH44IIM1E4va0a/CrayBYU/HWuPnkmHOlnUAPOerQHafxyhXgVMu2f74k+S5L+Zdjp5yz2bXlaqzrDrOM+MJ5eHwdWv58EA5W5xfoIqAfO7EtLygizViUVvu/F3oDKOXN3puA1r7255k01U0NLHKh/kOZRzPNwtpRoLur3lC2PKW+wLBhdVDGoy57bb8oaC/NmEJSR03EzQ==</div><script src="/lib/crypto-js.js"></script><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
    
    <summary type="html">
    
      这个文件用于测试password是否正常
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>正则表达式语法以及re模块的使用</title>
    <link href="http://haochen95.github.io/2019/03/02/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AF%AD%E6%B3%95%E4%BB%A5%E5%8F%8Are%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/正则表达式语法以及re模块的使用/</id>
    <published>2019-03-01T16:03:47.000Z</published>
    <updated>2019-03-01T16:04:26.969Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-正则表达式简介"><a href="#1-正则表达式简介" class="headerlink" title="1.正则表达式简介"></a>1.正则表达式简介</h1><p>正则表达式（或 RE）是一种小型的、高度专业化的编程语言，（在Python中）它内嵌在Python中，并通过 re 模块实现。使用这个小型语言，你可以为想要匹配的相应字符串集指定规则；该字符串集可能包含英文语句、email地址、TeX命令或任何你想搞定的东西。然后你可以问诸如“这个字符串匹配该模式吗？”或“在这个字符串中是否有部分匹配该模式呢？”。你也可以使用 RE以各种方式来修改或分割字符串。  </p><h1 id="2-正则表达式的语法简介"><a href="#2-正则表达式的语法简介" class="headerlink" title="2.正则表达式的语法简介"></a>2.正则表达式的语法简介</h1><p><img src="https://images.cnblogs.com/cnblogs_com/huxi/Windows-Live-Writer/Python_10A67/pyre_ebb9ce1c-e5e8-4219-a8ae-7ee620d5f9f1.png" alt>  </p><h1 id="3-re模块的介绍"><a href="#3-re模块的介绍" class="headerlink" title="3.re模块的介绍"></a>3.re模块的介绍</h1><h2 id="3-1-re模块的核心函数和方法"><a href="#3-1-re模块的核心函数和方法" class="headerlink" title="3.1.re模块的核心函数和方法"></a>3.1.re模块的核心函数和方法</h2><p>通过 pattern object 的方法（除 findall 外）进行匹配得到的返回结果都是 match object。每一个 match object 都包含了匹配到的相关信息，比如，起始位置、匹配到的子串。那么，我们如何从 match object 中提取这些信息呢？  </p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>re.compile(pattern,flags=0)</td><td>将一个字符串通过指定的匹配模式flag编译成 pattern object，用于匹配或搜索</td></tr><tr><td>pattern.match(string[, pos[, endpos]])</td><td>匹配从 pos 到 endpos 的字符子串的开头。匹配成功返回一个 match object，不匹配返回 None</td></tr><tr><td>pattern.search(string[, pos[, endpos]])</td><td>扫描整个字符串，并返回它找到的第一个匹配（Match object）</td></tr><tr><td>pattern.findall(string[, pos[, endpos]])</td><td>找到所有匹配的子串，并返回一个 list</td></tr><tr><td>pattern.finditer(string[, pos[, endpos]])</td><td>找到所有匹配的子串，并返回由这些匹配结果（match object）组成的迭代器</td></tr><tr><td>pattern.split(rules,string,max=0)</td><td>根据正则表达式的rules，将字符串string分割成列表并返回</td></tr><tr><td>pattern.sub(rules,repl,string,count=0)</td><td>根据正则表达式rules匹配的结果将它替换为repl的形式，除非定义count，否则替换所有</td></tr><tr><td>pattern.purge()</td><td>清除所有的正则表达式</td></tr><tr><td>match.group([group1, …])</td><td>返回 match object 中的字符串。 每一个 ( ) 都是一个分组，分组编号从1开始</td></tr><tr><td>match.groups(default=none)</td><td>返回由所有分组匹配到的字符串组成的 tuple。</td></tr><tr><td>match.groupdict(default=None)</td><td>返回一个包含所有匹配的命名子组的字典，子组名称为键</td></tr><tr><td>match.start([group])</td><td>没有参数时，返回匹配到的字符串的起始位置,<br>指定参数（整数）时，返回该分组匹配到的字符串的起始位置。。</td></tr><tr><td>match.end([group])</td><td>没有参数时，返回匹配到的字符串的结束位置。<br>    指定参数（整数）时，返回该分组匹配到的字符串的结束位置。</td></tr><tr><td>match.span</td><td>返回一个二元 tuple 表示匹配到的字符串的范围，即 (start, end)。</td></tr><tr><td>re.I</td><td>不区分大小写的匹配</td></tr><tr><td>re.L</td><td>使用预定字符类\w\W\b\B\s\Sq取决于当前区域设定</td></tr><tr><td>re.M</td><td>多行模式</td></tr><tr><td>re.S</td><td>使得句号匹配除换行符外的所有单个字符</td></tr><tr><td><code>\</code></td><td>转义符号</td></tr></tbody></table><h1 id="4-Python中的范例"><a href="#4-Python中的范例" class="headerlink" title="4. Python中的范例"></a>4. Python中的范例</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># regex.match(string[, pos[, endpos]])</span></span><br><span class="line"><span class="comment"># 匹配从 pos 到 endpos 的字符子串的开头。匹配成功返回一个 match object，不匹配返回 None。</span></span><br><span class="line">print(<span class="string">"\n-------match的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line">p1 = re.compile(<span class="string">r'ar&#123;1&#125;'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"当不指定位置时,match只从开头匹配:匹配成功  "</span>,p1.match(<span class="string">"army"</span>))</span><br><span class="line">print(<span class="string">"当不指定位置时,match只从开头匹配:匹配失败  "</span>,p1.match(<span class="string">"akarmy"</span>))</span><br><span class="line">print(<span class="string">"match从指定位置的开头匹配:匹配成功  "</span>,p1.match(<span class="string">"akarmy"</span>,<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># regex.search(string[, pos[, endpos]])</span></span><br><span class="line"><span class="comment"># 扫描整个字符串，并返回它找到的第一个匹配（Match object）。</span></span><br><span class="line">print(<span class="string">"\n-------search的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"search用法：匹配成功  "</span>,p1.search(<span class="string">"akarmy"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># regex.findall(string[, pos[, endpos]])</span></span><br><span class="line"><span class="comment"># 找到所有匹配的子串，并返回一个 list 。</span></span><br><span class="line">print(<span class="string">"\n-------findall的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">p2 = re.compile(<span class="string">r"\d+"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"从字符串中找到所有数字"</span>,p2.findall(<span class="string">"abc1def2rst3xyz"</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># regex.finditer(string[, pos[, endpos]])</span></span><br><span class="line"><span class="comment"># 找到所有匹配的子串，并返回由这些匹配结果（match object）组成的迭代器 。</span></span><br><span class="line">print(<span class="string">"\n-------finditer的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> p2.findall(<span class="string">"abc1def6rst25xyz"</span>):</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># re.split(pattern, string, maxsplit=0, flags=0) 模块级函数</span></span><br><span class="line">print(<span class="string">"\n-------split的用法--------\n"</span>)</span><br><span class="line">p2_1 = re.compile(<span class="string">r"[A-Z]+"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"根据大写字母分割字符串"</span>,p2_1.split(<span class="string">"abcDefgHijkLmnoPqrs"</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># re.sub(pattern, repl, string, count=0, flags=0)：</span></span><br><span class="line"><span class="comment"># 替换函数</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n-------sub的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">fun</span><span class="params">(m)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> m.group().upper()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">pattern = re.compile(<span class="string">r"like"</span>, re.I)</span><br><span class="line">s1 = pattern.sub(<span class="string">r"love"</span>, <span class="string">"I like you, do you like me?"</span>)</span><br><span class="line">s2 = pattern.sub(fun, <span class="string">"I like you, do you like me?"</span>)</span><br><span class="line">print(<span class="string">"love替换为like"</span>,s1)</span><br><span class="line">print(<span class="string">"替换函数的使用"</span>,s2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># match.group([group1, ...])</span></span><br><span class="line"><span class="comment"># 返回 match object 中的字符串。每一个 ( ) 都是一个分组，分组编号从1开始</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n-------match.group的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line">p3 = re.compile(<span class="string">r"(\w+) (\w+)"</span>)</span><br><span class="line">m = p3.match(<span class="string">"Kobe Bryant, Lakers"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"match object"</span>, m)</span><br><span class="line">print(<span class="string">"完整匹配"</span>,m.group())</span><br><span class="line">print(<span class="string">"match first group"</span>, m.group(<span class="number">1</span>))</span><br><span class="line">print(<span class="string">"match second group"</span>, m.group(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># match.groups()</span></span><br><span class="line"><span class="comment"># 返回由所有分组匹配到的字符串组成的 tuple</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">"\n-------match.group的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"match all the groups"</span>,m.groups())</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># match.start([group])</span></span><br><span class="line"><span class="comment"># 没有参数时，返回匹配到的字符串的起始位置。指定参数（整数）时，返回该分组匹配到的字符串的起始位置。</span></span><br><span class="line">print(<span class="string">"\n-------match.start的用法--------\n"</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"返回第一个匹配开始的index值"</span>,m.start())</span><br><span class="line">print(<span class="string">"返回第二组匹配开始的index值"</span>,m.start(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># match.span([group])</span></span><br><span class="line"><span class="comment"># 返回一个二元 tuple 表示匹配到的字符串的范围，即 (start, end)</span></span><br><span class="line">print(<span class="string">"\n-------match.span的用法--------\n"</span>)</span><br><span class="line">print(<span class="string">"返回第一个匹配的index范围值"</span>,m.span())</span><br><span class="line">print(<span class="string">"返回第二个匹配的index范围值"</span>,m.span(<span class="number">2</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># flags匹配模式的使用</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a = re.compile(<span class="string">r"like"</span>,re.I)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"忽略大小写的匹配"</span>,a.findall(<span class="string">"I like you, do you LIKE me,or LiKes?"</span>))</span><br></pre></td></tr></table></figure><p>其输出结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">-------match的用法--------</span><br><span class="line"></span><br><span class="line">当不指定位置时,match只从开头匹配:匹配成功   &lt;re.Match object; span=(0, 2), match=&apos;ar&apos;&gt;</span><br><span class="line">当不指定位置时,match只从开头匹配:匹配失败   None</span><br><span class="line">match从指定位置的开头匹配:匹配成功   &lt;re.Match object; span=(2, 4), match=&apos;ar&apos;&gt;</span><br><span class="line"></span><br><span class="line">-------search的用法--------</span><br><span class="line"></span><br><span class="line">search用法：匹配成功   &lt;re.Match object; span=(2, 4), match=&apos;ar&apos;&gt;</span><br><span class="line"></span><br><span class="line">-------findall的用法--------</span><br><span class="line"></span><br><span class="line">从字符串中找到所有数字 [&apos;1&apos;, &apos;2&apos;, &apos;3&apos;]</span><br><span class="line"></span><br><span class="line">-------finditer的用法--------</span><br><span class="line"></span><br><span class="line">1</span><br><span class="line">6</span><br><span class="line">25</span><br><span class="line"></span><br><span class="line">-------split的用法--------</span><br><span class="line"></span><br><span class="line">根据大写字母分割字符串 [&apos;abc&apos;, &apos;efg&apos;, &apos;ijk&apos;, &apos;mno&apos;, &apos;qrs&apos;]</span><br><span class="line"></span><br><span class="line">-------sub的用法--------</span><br><span class="line"></span><br><span class="line">love替换为like I love you, do you love me?</span><br><span class="line">替换函数的使用 I LIKE you, do you LIKE me?</span><br><span class="line"></span><br><span class="line">-------match.group的用法--------</span><br><span class="line"></span><br><span class="line">match object &lt;re.Match object; span=(0, 11), match=&apos;Kobe Bryant&apos;&gt;</span><br><span class="line">完整匹配 Kobe Bryant</span><br><span class="line">match first group Kobe</span><br><span class="line">match second group Bryant</span><br><span class="line"></span><br><span class="line">-------match.group的用法--------</span><br><span class="line"></span><br><span class="line">match all the groups (&apos;Kobe&apos;, &apos;Bryant&apos;)</span><br><span class="line"></span><br><span class="line">-------match.start的用法--------</span><br><span class="line"></span><br><span class="line">返回第一个匹配开始的index值 0</span><br><span class="line">返回第二组匹配开始的index值 5</span><br><span class="line"></span><br><span class="line">-------match.span的用法--------</span><br><span class="line"></span><br><span class="line">返回第一个匹配的index范围值 (0, 11)</span><br><span class="line">返回第二个匹配的index范围值 (5, 11)</span><br><span class="line">忽略大小写的匹配 [&apos;like&apos;, &apos;LIKE&apos;, &apos;LiKe&apos;]</span><br></pre></td></tr></table></figure><p>参考资料如下：  </p><ul><li><a href="https://blog.csdn.net/lisonglisonglisong/article/details/39697137" target="_blank" rel="noopener">https://blog.csdn.net/lisonglisonglisong/article/details/39697137</a>  </li><li><a href="https://www.cnblogs.com/haochen273/p/10256418.html#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8Are%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8" target="_blank" rel="noopener">https://www.cnblogs.com/haochen273/p/10256418.html#%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%8F%8Are%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-正则表达式简介&quot;&gt;&lt;a href=&quot;#1-正则表达式简介&quot; class=&quot;headerlink&quot; title=&quot;1.正则表达式简介&quot;&gt;&lt;/a&gt;1.正则表达式简介&lt;/h1&gt;&lt;p&gt;正则表达式（或 RE）是一种小型的、高度专业化的编程语言，（在Python中）它内嵌
      
    
    </summary>
    
      <category term="Python核心编程" scheme="http://haochen95.github.io/categories/Python%E6%A0%B8%E5%BF%83%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="正则表达式" scheme="http://haochen95.github.io/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>TCP和UDP套接字介绍及Socket模块的使用</title>
    <link href="http://haochen95.github.io/2019/03/02/TCP%E5%92%8CUDP%E5%A5%97%E6%8E%A5%E5%AD%97%E4%BB%8B%E7%BB%8D%E5%8F%8ASocket%E6%A8%A1%E5%9D%97%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/TCP和UDP套接字介绍及Socket模块的使用/</id>
    <published>2019-03-01T16:02:44.000Z</published>
    <updated>2019-03-01T16:03:35.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-客户端-服务端架构"><a href="#1-客户端-服务端架构" class="headerlink" title="1.客户端/服务端架构"></a>1.客户端/服务端架构</h1><div align="center"><img src="https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Client-server-model.svg/375px-Client-server-model.svg.png"></div><ul><li>服务端的作用: 等待客户端的请求，并相应他们提供服务，然后等待更多请求  </li><li>客户端的作用： 发送请给给服务端以获取相关信息  </li></ul><p>注意：  </p><ol><li>客户端和服务器交互之前，需要进行一些必要的设置： 设置通信端点(比如，你要上网，必须要网线插口才可以)  </li><li>客户端需要做的就是创建一个它的单一通信端点，然后建立一个到服务器的连接，然后，客户端就可以发送请求，一旦请求诶服务器处理，且客户端收到了请求的结果，此次通信就结束了  </li></ol><h1 id="2-套接字"><a href="#2-套接字" class="headerlink" title="2. 套接字"></a>2. 套接字</h1><h1 id="3-Python中的网络编程socket"><a href="#3-Python中的网络编程socket" class="headerlink" title="3. Python中的网络编程socket"></a>3. Python中的网络编程socket</h1><h2 id="3-1-socket-模块函数"><a href="#3-1-socket-模块函数" class="headerlink" title="3.1. socket()模块函数"></a>3.1. socket()模块函数</h2><p>创建套接字的语法如下：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socket.socket(socket_family, socket_type, protocol=<span class="number">0</span>)</span><br></pre></td></tr></table></figure><ul><li><code>socket_family</code>： 是<code>AF_UNIX</code>(基于文件的套接字)和<code>AF_INET</code>(基于网络的套接字)  </li><li><code>socket_type</code>: <code>SOCK_STREAM</code>(面向连接的套接字，也称为<code>TCP/TP</code>套接字) + <code>SOCK_DGRAM</code>(无连接套接字，也称为<code>UDP/TP</code>套接字)  </li><li><code>protocol</code>：一般为0，不用设置这个  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line">tcpSock = socket(socket.AF_INET,socket.SOCK_STREAM)   <span class="comment"># 创建TCP/TP套接字</span></span><br><span class="line">udpSock = socket(socket.AF_INET,socket.SOCK_DGRAM)    <span class="comment"># 创建UDP/IP套接字</span></span><br></pre></td></tr></table></figure><h2 id="3-2-套接字对象的方法"><a href="#3-2-套接字对象的方法" class="headerlink" title="3.2. 套接字对象的方法"></a>3.2. 套接字对象的方法</h2><table><thead><tr><th>名称</th><th>说明</th><th>类别</th></tr></thead><tbody><tr><td>s.bind()</td><td>将地址(主机名-端口号对)绑定到套接字上</td><td>服务器套接字方法</td></tr><tr><td>s.listen()</td><td>设置并启动TCP监听器</td><td></td></tr><tr><td>s.accept()</td><td>被动接受TCP客户端连接，一直等待直到连接到达(阻塞)</td><td></td></tr><tr><td>s.connect()</td><td>主动发起TCP服务器连接</td><td>客户端套接字方法</td></tr><tr><td>s.connect_ex()</td><td>connect的扩展，会以错误码的形式返回问题</td><td></td></tr><tr><td>s.recv()</td><td>接收TCP信息</td><td>普通的套接字方法</td></tr><tr><td>s.recv_into()</td><td>接收TCP信息到指定发缓存区</td><td></td></tr><tr><td>s.send()</td><td>发送TCP信息</td><td></td></tr><tr><td>s.sendall()</td><td>完整地发送TCP信息</td><td></td></tr><tr><td>s.recvfrom()</td><td>接收UDP信息</td><td></td></tr><tr><td>s.recvfrom_into()</td><td>接收UDP信息到指定的缓冲区</td><td></td></tr><tr><td>s.sendto()</td><td>发送UDP信息</td><td></td></tr><tr><td>s.getpeername()</td><td>连接到套接字TCP的远程地址</td><td></td></tr><tr><td>s.getsockname()</td><td>当前套接字的地址</td><td></td></tr><tr><td>s.getsockopt()</td><td>返回给定套接字选项的值</td><td></td></tr><tr><td>s.setsockopt()</td><td>设置给定套接字选项的值</td><td></td></tr><tr><td>s.shutdown()</td><td>关闭连接</td><td></td></tr><tr><td>s.close()</td><td>关闭套接字</td><td></td></tr><tr><td>s.detach()</td><td>在未关闭文件描述符的情况下关闭套接字，返回文件描述符</td><td></td></tr><tr><td>s.ioctl()</td><td>控制套接字的模式</td><td></td></tr><tr><td>s.setblocking()</td><td>设置套接字的阻塞或者非阻塞模式</td><td>面向阻塞的套接字方法</td></tr><tr><td>s.settimeout()</td><td>设置阻塞套接字的操作的超时时间</td><td></td></tr><tr><td>s.gettimeout()</td><td>获取阻塞套接字操作的超时时间</td><td></td></tr><tr><td>s.fileno()</td><td>套接字的文件描述符</td><td>面向文件的套接字方法</td></tr><tr><td>s.makefile()</td><td>创建与套接字关联的文件对象</td><td></td></tr><tr><td>s.family</td><td>套接字家族</td><td>数据类型</td></tr><tr><td>s.type</td><td>套接字类型</td><td></td></tr><tr><td>s.proto</td><td>套接字协议</td></tr></tbody></table><h2 id="3-3-创建TCP服务器"><a href="#3-3-创建TCP服务器" class="headerlink" title="3.3. 创建TCP服务器"></a>3.3. 创建TCP服务器</h2><p>这里我给出了创建TCP服务器的一般流程</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">ss = socket()              <span class="comment"># 创建服务器套接字</span></span><br><span class="line">ss.bind()                  <span class="comment"># 套接字与地址绑定</span></span><br><span class="line">ss.listen()                <span class="comment"># 监听连接</span></span><br><span class="line">inf_loop:                  <span class="comment"># 服务器无线循环中</span></span><br><span class="line">  cs = ss.accept()         <span class="comment"># 接收客户端连接</span></span><br><span class="line">  comm_loop:               <span class="comment"># 通信循环</span></span><br><span class="line">    cs.recv/cs.send()      <span class="comment"># 对话：接收或者发送</span></span><br><span class="line">  cs.close()               <span class="comment"># 关闭客户端套接字</span></span><br><span class="line">ss.close()                 <span class="comment"># 关闭服务端套接字(可选)</span></span><br></pre></td></tr></table></figure><ul><li>所有套接字都需要通过socket.socket()来创建来占用一个端口bind()并等待客户端的请求  </li><li>因为TCP是面向连接的通信，在执行请求前，需要设置一些监听设备listen()，一旦完成，就开始服务器的无线循环inf_loop</li><li>一旦服务器接收accpet()了一个连接，就会返回一个独立的客户端套接字cs，用它来与即将到来的信息进行交换(类似于主线员将这个客户切换给一个专用的客服代表，这样主线员就可以空出来继续接收连接)</li><li>通信开始，执行相关操作cs.recv或者cs.send()  </li><li>完成通信，关闭客户端套接字(切断客服代表的电话)cs.close()</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> ctime</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">''</span></span><br><span class="line">PORT = <span class="number">21567</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpSerSock = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpSerSock.bind(ADDR)</span><br><span class="line">tcpSerSock.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">"等待连接中...."</span>)</span><br><span class="line">    tcpCliSock, addr = tcpSerSock.accept()</span><br><span class="line">    print(<span class="string">"获取了一个的连接: "</span>,addr)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data = tcpCliSock.recv(BUFSIZ)</span><br><span class="line">        SendText = <span class="string">'Thanks for your connections---'</span> + data.decode()</span><br><span class="line"></span><br><span class="line">        print(type(data))</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        tcpCliSock.send(SendText.encode())</span><br><span class="line"></span><br><span class="line">    tcpCliSock.close()</span><br><span class="line">tcpSerSock.close()</span><br></pre></td></tr></table></figure><h2 id="3-4-创建TCP客户端"><a href="#3-4-创建TCP客户端" class="headerlink" title="3.4. 创建TCP客户端"></a>3.4. 创建TCP客户端</h2><p>这里我们给出创建TCP客户端的模板  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cs = socket()          <span class="comment"># 创建客户端套接字</span></span><br><span class="line">cs.connect()           <span class="comment"># 尝试连接服务器</span></span><br><span class="line">comm_loop:             <span class="comment"># 通信循环</span></span><br><span class="line">  cs.send()/cs.recv()  <span class="comment"># 对话发送，接收</span></span><br><span class="line">cs.close()             <span class="comment"># 关闭客户端套接字</span></span><br></pre></td></tr></table></figure><p>标准的TCP实例如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span></span><br><span class="line">PORT = <span class="number">1565</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">tcpCliSock = socket(AF_INET,SOCK_STREAM)</span><br><span class="line">tcpCliSock.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    data = input(<span class="string">'&gt;'</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tcpCliSock.send(data.encode())</span><br><span class="line">    data = tcpCliSock.recv(BUFSIZ)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:       <span class="comment"># 服务器端终止且对recv()方法的调用失败</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">tcpCliSock.close()</span><br></pre></td></tr></table></figure><h2 id="3-5-运行TCP服务-客户端"><a href="#3-5-运行TCP服务-客户端" class="headerlink" title="3.5. 运行TCP服务-客户端"></a>3.5. 运行TCP服务-客户端</h2><ul><li>首先运行TCP服务端  </li></ul><div align="center"><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_1.PNG"></div><ul><li>然后运行TCP客户端，并且输入<code>Python</code>  </li></ul><div align="center"><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_2.PNG"></div><h2 id="3-6-创建UDP服务器"><a href="#3-6-创建UDP服务器" class="headerlink" title="3.6. 创建UDP服务器"></a>3.6. 创建UDP服务器</h2><p>UDP服务器不像TCP服务器那么多设置，因为UDP服务器不是面向连接的，除了等待传入的连接外，几乎不需要做其他任何工作  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ss = socket()</span><br><span class="line">ss.bind()</span><br><span class="line">inf_loop:</span><br><span class="line">  cs = css.recvfrom()/ss.sendto()</span><br></pre></td></tr></table></figure><p><strong>特点：服务器只接受小象，并可能回复数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">''</span></span><br><span class="line">PORT = <span class="number">21567</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpServer = socket(AF_INET,SOCK_DGRAM)</span><br><span class="line">udpServer.bind(ADDR)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    print(<span class="string">"等待连接...."</span>)</span><br><span class="line">    data,addr = udpServer.recvfrom(BUFSIZ)</span><br><span class="line">    print(<span class="string">"获取了一个的连接: "</span>, addr)</span><br><span class="line"></span><br><span class="line">    SendText = <span class="string">'Thanks for your connections---'</span> + data.decode()</span><br><span class="line"></span><br><span class="line">    udpServer.sendto(SendText.encode(),addr)</span><br><span class="line"></span><br><span class="line">udpServer.close()</span><br></pre></td></tr></table></figure><h2 id="3-7-创建UDP客户端"><a href="#3-7-创建UDP客户端" class="headerlink" title="3.7. 创建UDP客户端"></a>3.7. 创建UDP客户端</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span></span><br><span class="line">PORT = <span class="number">21567</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line">udpCliSock = socket(AF_INET,SOCK_DGRAM)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    into = input(<span class="string">"&gt;"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> into:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    udpCliSock.sendto(into.encode(),ADDR)</span><br><span class="line"></span><br><span class="line">    data,ADDR = udpCliSock.recvfrom(BUFSIZ)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(data.decode(<span class="string">'utf-8'</span>))</span><br><span class="line"></span><br><span class="line">udpCliSock.close()</span><br></pre></td></tr></table></figure><p>运行服务端，以及客户端  </p><div align="center"><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_3.PNG"></div><div align="center"><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_4.PNG"></div><p>参考文献  </p><ul><li><a href="https://www.cnblogs.com/liu-yao/p/5283379.html" target="_blank" rel="noopener">https://www.cnblogs.com/liu-yao/p/5283379.html</a></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-客户端-服务端架构&quot;&gt;&lt;a href=&quot;#1-客户端-服务端架构&quot; class=&quot;headerlink&quot; title=&quot;1.客户端/服务端架构&quot;&gt;&lt;/a&gt;1.客户端/服务端架构&lt;/h1&gt;&lt;div align=&quot;center&quot;&gt;&lt;img src=&quot;https:/
      
    
    </summary>
    
      <category term="Python网络编程" scheme="http://haochen95.github.io/categories/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Socket" scheme="http://haochen95.github.io/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>Python中SocketServer的使用</title>
    <link href="http://haochen95.github.io/2019/03/02/Python%E4%B8%ADSocketServer%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/Python中SocketServer的使用/</id>
    <published>2019-03-01T16:02:03.000Z</published>
    <updated>2019-03-01T16:02:32.559Z</updated>
    
    <content type="html"><![CDATA[<ol><li>SocketServer模块介绍  </li></ol><p>SockerServer是创建网络客户端和服务器所必须的代码，这个模块有为你创建的各种各样的类  </p><table><thead><tr><th>类</th><th>描述</th></tr></thead><tbody><tr><td><code>BaseServer</code></td><td>包含服务器的核心功能</td></tr><tr><td><code>TCPServer/UDPServer</code></td><td>基于网络的TCP/UDP服务器</td></tr><tr><td><code>UnixStreamServer/UnixDatagramServer</code></td><td>基于文件的基础同步TCP/UDP服务器</td></tr><tr><td><code>ForkingMixIn/ThreadingMixIn</code></td><td>核心派出或者线程功能</td></tr><tr><td><code>ForkingTCPServer/ForkingUDPServer</code></td><td>ForkingMixIn和TCPServer/UDPServer的组合</td></tr><tr><td><code>ThreadingTCPServer/ThreadingUDPserver</code></td><td>ThreadingMixIn和TCPServer/UDPServer的组合</td></tr><tr><td><code>BaseRequestHandler</code></td><td>包含处理服务请求的核心功能</td></tr><tr><td><code>StreamRequestHandler/DatagramRequestHandler</code></td><td>实现TCP/UDP服务器的服务处理器</td></tr></tbody></table><h1 id="2-创建SocketServer-TCP服务器"><a href="#2-创建SocketServer-TCP服务器" class="headerlink" title="2. 创建SocketServer TCP服务器"></a>2. 创建SocketServer TCP服务器</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socketserver <span class="keyword">import</span> (TCPServer <span class="keyword">as</span> TCP, StreamRequestHandler <span class="keyword">as</span> SRH)</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">''</span></span><br><span class="line">PORT = <span class="number">21567</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyRequestHandler</span><span class="params">(SRH)</span>:</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 重写SRH中的handle方法</span></span><br><span class="line">    <span class="comment"># 当接收一个来自客户端的信息时，他就会调用handle()方法</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handle</span><span class="params">(self)</span>:</span></span><br><span class="line">        print(<span class="string">"获取了一个的连接: "</span>, self.client_address)</span><br><span class="line">        <span class="comment"># SRH将输入和输出套接字看成类似文件的对象，我们可以通过readline()来获取客户端信息，并通过write()将字符串发送给客户端</span></span><br><span class="line">        </span><br><span class="line">        SendText = <span class="string">'Thanks for your connections---'</span> + self.rfile.readline()</span><br><span class="line">        self.wfile.write(SendText)</span><br><span class="line"></span><br><span class="line">tcpServ = TCP(ADDR,MyRequestHandler)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"等待连接....."</span>)</span><br><span class="line"><span class="comment"># 无线循环下去</span></span><br><span class="line">tcpServ.serve_forever()</span><br></pre></td></tr></table></figure><h1 id="3-创建SocketServer-TCP客户端"><a href="#3-创建SocketServer-TCP客户端" class="headerlink" title="3. 创建SocketServer TCP客户端"></a>3. 创建SocketServer TCP客户端</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> socket <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">HOST = <span class="string">'localhost'</span></span><br><span class="line">PORT = <span class="number">21567</span></span><br><span class="line">BUFSIZ = <span class="number">1024</span></span><br><span class="line">ADDR = (HOST,PORT)</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="comment"># socketserver的默认行为：接收连接、获取请求、关闭连接</span></span><br><span class="line">    <span class="comment"># 我们不能再整个应用执行过程中一直保持连接，每次向服务器发送消息时，都需要创建一个新的套接字</span></span><br><span class="line">    tcpClient = socket(AF_INET, SOCK_STREAM)</span><br><span class="line">    tcpClient.connect(ADDR)</span><br><span class="line">    into = input(<span class="string">"&gt;"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> into:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    tcpClient.send(into.encode())</span><br><span class="line"></span><br><span class="line">    data = tcpClient.recv(BUFSIZ)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    print(data.strip())</span><br><span class="line">    tcpClient.close()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;SocketServer模块介绍  &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;SockerServer是创建网络客户端和服务器所必须的代码，这个模块有为你创建的各种各样的类  &lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;类&lt;/th&gt;
&lt;th&gt;描述&lt;/th&gt;

      
    
    </summary>
    
      <category term="Python网络编程" scheme="http://haochen95.github.io/categories/Python%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/"/>
    
    
      <category term="Socket" scheme="http://haochen95.github.io/tags/Socket/"/>
    
  </entry>
  
  <entry>
    <title>pyecharts的API配置内容</title>
    <link href="http://haochen95.github.io/2019/03/02/pyecharts%E7%9A%84API%E9%85%8D%E7%BD%AE%E5%86%85%E5%AE%B9/"/>
    <id>http://haochen95.github.io/2019/03/02/pyecharts的API配置内容/</id>
    <published>2019-03-01T16:01:11.000Z</published>
    <updated>2019-03-01T16:01:48.642Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h1><p>安装pyecharts  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pyecharts</span><br></pre></td></tr></table></figure><h1 id="图表配置"><a href="#图表配置" class="headerlink" title="图表配置"></a>图表配置</h1><h2 id="图形初始化选项"><a href="#图形初始化选项" class="headerlink" title="图形初始化选项"></a>图形初始化选项</h2><table><thead><tr><th>接收参数</th><th>默认值</th><th>说明</th></tr></thead><tbody><tr><td>title(str)</td><td>“”</td><td>主标题</td></tr><tr><td>subtitle(str)</td><td>“”</td><td>副标题</td></tr><tr><td>width(int)</td><td>800px</td><td>画布宽度</td></tr><tr><td>height(int)</td><td>400px</td><td>画布高度</td></tr><tr><td>title_pos(str/int)</td><td>left</td><td>标题距离左侧距离</td></tr><tr><td>title_top(str/int)</td><td>top</td><td>标题距离顶部距离</td></tr><tr><td>title_color(str)</td><td><code>#000</code></td><td>主标题颜色</td></tr><tr><td>subtitle_color(str)</td><td><code>#aaa</code></td><td>副标题颜色</td></tr><tr><td>title_text_size(int)</td><td>18</td><td>主标题字体大小</td></tr><tr><td>subtitle_text_size (int)</td><td>12</td><td>副标题字体大小</td></tr><tr><td>background_color(str)</td><td>‘#fff’</td><td>画布背景颜色</td></tr><tr><td>page_title (str)</td><td>‘Echarts’</td><td>指定生成的 html 文件中 <code>&lt;title&gt;</code> 标签的值</td></tr><tr><td>renderer(str)</td><td>‘canvas’</td><td>指定使用渲染方式</td></tr><tr><td>extra_html_text_label(list)</td><td></td><td></td></tr><tr><td>is_animation(bool)</td><td>True</td><td>是否开启动画</td></tr></tbody></table><h2 id="通用配置项：add-中设置"><a href="#通用配置项：add-中设置" class="headerlink" title="通用配置项：add()中设置"></a>通用配置项：add()中设置</h2><h3 id="xyAxis：轴相关设置"><a href="#xyAxis：轴相关设置" class="headerlink" title="xyAxis：轴相关设置"></a>xyAxis：轴相关设置</h3><table><thead><tr><th>设置选项</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>is_convert</td><td>bool</td><td>是否交换 x 轴与 y 轴</td></tr><tr><td>is_xaxislabel_align</td><td>bool</td><td>x 轴刻度线和标签是否对齐</td></tr><tr><td>is_xaxis_inverse</td><td>bool</td><td>是否反向 x 坐标轴。</td></tr><tr><td>is_xaxis_boundarygap</td><td>bool</td><td>x 轴两边留白策略，适用于类目轴。</td></tr><tr><td>is_xaxis_show</td><td>bool</td><td>是否显示 x 轴</td></tr><tr><td>is_splitline_show</td><td>bool</td><td>是否显示 y 轴网格线。</td></tr><tr><td>x_axis</td><td>list</td><td>x 轴数据项</td></tr><tr><td>xaxis_interval</td><td>int</td><td>x 轴刻度标签的显示间隔，在类目轴中有效。</td></tr><tr><td>xaxis_margin</td><td>int</td><td>x 轴刻度标签与轴线之间的距离</td></tr><tr><td>xaxis_name</td><td>string</td><td>x 轴名称</td></tr><tr><td>xaxis_name_size</td><td>int</td><td>x 轴名称体大小</td></tr><tr><td>xaxis_name_gap</td><td>in</td><td>x 轴名称与轴线之间的距离。</td></tr><tr><td>xaxis_name_pos</td><td>str</td><td>x 轴名称位置，有’start’，’middle’，’end’可选</td></tr><tr><td>xaxis_min</td><td>int/float</td><td>x 坐标轴刻度最小值，默认为自适应。</td></tr><tr><td>xaxis_max</td><td>int/float</td><td>x 坐标轴刻度最大值，默认为自适应。</td></tr><tr><td>xaxis_pos</td><td>str</td><td>x 坐标轴位置，有’top’,’bottom’可选</td></tr><tr><td>xaxis_label_textsize</td><td>int</td><td>x 坐标轴标签字体大小。</td></tr><tr><td>xaxis_label_textcolor</td><td>str</td><td>x 坐标轴标签字体颜色。</td></tr><tr><td>xaxis_type</td><td>str</td><td>x 坐标轴类型（value,category,log）</td></tr><tr><td>xaxis_rotate</td><td>int</td><td>x 轴刻度标签旋转的角度</td></tr><tr><td>xaxis_formatter</td><td>str</td><td>x 轴标签格式器（回调函数）</td></tr><tr><td>xaxis_line_color</td><td>str</td><td>x 坐标轴线线的颜色。</td></tr><tr><td>xaxis_line_width</td><td>int</td><td>x 坐标轴线线的宽度。</td></tr></tbody></table><h3 id="datazoom：缩放设置"><a href="#datazoom：缩放设置" class="headerlink" title="datazoom：缩放设置"></a>datazoom：缩放设置</h3><p>一般不用，详情请看<code>http://pyecharts.org/#/zh-cn/charts_configure</code></p><h3 id="legend-图例组件"><a href="#legend-图例组件" class="headerlink" title="legend:图例组件"></a>legend:图例组件</h3><table><thead><tr><th>设置选项</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>is_legend_show</td><td>bool</td><td>是否显示顶端图例</td></tr><tr><td>legend_orient</td><td>str</td><td>图例列表的布局朝向</td></tr><tr><td>legend_pos</td><td>str</td><td>图例组件离容器左侧的距离’left’, ‘center’, ‘right’</td></tr><tr><td>legend_top</td><td>str</td><td>图例组件离容器上侧的距离</td></tr><tr><td>legend_selectedmode</td><td>str/bool</td><td>图例选择的模式，控制是否可以通过点击图例改变系列的显示状态</td></tr><tr><td>legend_text_size</td><td>int</td><td>图例名称字体大小</td></tr><tr><td>legend_text_color</td><td>str</td><td>图例名称字体颜色</td></tr></tbody></table><h3 id="label-文本标签"><a href="#label-文本标签" class="headerlink" title="label:文本标签"></a>label:文本标签</h3><table><thead><tr><th>设置选项</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>is_label_show</td><td></td><td>是否正常显示标签</td></tr><tr><td>is_label_emphasis</td><td></td><td>是否高亮显示标签</td></tr><tr><td>label_pos</td><td></td><td>标签的位置’top’, ‘left’, ‘right’, ‘bottom’, ‘inside’,’outside’</td></tr><tr><td>label_emphasis_pos</td><td></td><td>高亮标签的位置’top’, ‘left’, ‘right’, ‘bottom’, ‘inside’,’outside’</td></tr><tr><td>label_text_color</td><td></td><td>标签字体颜色</td></tr><tr><td>label_emphasis_textcolor</td><td></td><td>高亮标签字体颜色</td></tr><tr><td>label_text_size</td><td></td><td>标签字体大小</td></tr><tr><td>label_emphasis_textsize</td><td></td><td>高亮标签字体大小</td></tr><tr><td>is_random</td><td></td><td>是否随机排列颜色列表</td></tr><tr><td>label_color</td><td></td><td>自定义标签颜色</td></tr><tr><td>label_formatter</td><td></td></tr></tbody></table><h3 id="toolbox"><a href="#toolbox" class="headerlink" title="toolbox"></a>toolbox</h3><table><thead><tr><th>设置选项</th><th>格式</th><th>说明</th></tr></thead><tbody><tr><td>is_toolbox_show</td><td>bool</td><td>是否显示右侧实用工具箱</td></tr><tr><td>is_more_utils</td><td>bool</td><td>指定是否提供更多的实用工具按钮</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本用法&quot;&gt;&lt;a href=&quot;#基本用法&quot; class=&quot;headerlink&quot; title=&quot;基本用法&quot;&gt;&lt;/a&gt;基本用法&lt;/h1&gt;&lt;p&gt;安装pyecharts  &lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;
      
    
    </summary>
    
      <category term="Python可视化" scheme="http://haochen95.github.io/categories/Python%E5%8F%AF%E8%A7%86%E5%8C%96/"/>
    
    
      <category term="pyecharts" scheme="http://haochen95.github.io/tags/pyecharts/"/>
    
  </entry>
  
  <entry>
    <title>MySQL基础语法</title>
    <link href="http://haochen95.github.io/2019/03/02/MySQL%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://haochen95.github.io/2019/03/02/MySQL基础语法/</id>
    <published>2019-03-01T16:00:18.000Z</published>
    <updated>2019-03-01T16:00:47.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基本MySQL语法"><a href="#基本MySQL语法" class="headerlink" title="基本MySQL语法"></a>基本MySQL语法</h1><h2 id="从CMD中调用mysql"><a href="#从CMD中调用mysql" class="headerlink" title="从CMD中调用mysql"></a>从CMD中调用mysql</h2><p>运行以下代码<code>mysql -u root -p</code>连接服务器并且输入密码  </p><h2 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h2><table><thead><tr><th>语法</th><th>用法说明</th></tr></thead><tbody><tr><td>create database 数据库名字 charset=utf8;</td><td>创建数据库</td></tr><tr><td>drop database 数据库名字;</td><td>删除数据库</td></tr><tr><td>use 数据库名字;</td><td>使用这个数据库</td></tr><tr><td>show databases;</td><td>查看当前的所有数据库</td></tr><tr><td>select database();</td><td>查看当前正在用的是哪个数据库</td></tr></tbody></table><h2 id="创建数据库下面的表"><a href="#创建数据库下面的表" class="headerlink" title="创建数据库下面的表"></a>创建数据库下面的表</h2><table><thead><tr><th>语法</th><th>用法说明</th></tr></thead><tbody><tr><td>show tables;</td><td>查看所有的表</td></tr><tr><td>create table 表名(列和其类型);</td><td>创建表</td></tr><tr><td>desc 表名;</td><td>查看表的结构</td></tr><tr><td>`alter table 表名 add</td><td>change</td><td>drop 列名 类型；`</td><td>修改表(增加，修改，删除列)</td></tr><tr><td>drop table 表名;</td><td>删除表</td></tr><tr><td>rename table 原表名 to 新表名;</td><td>更改表的名字</td></tr><tr><td>show create table 表名;</td><td>查看表的创建语句</td></tr></tbody></table><h2 id="表格中的数据操作"><a href="#表格中的数据操作" class="headerlink" title="表格中的数据操作"></a>表格中的数据操作</h2><table><thead><tr><th>语法</th><th>用法说明</th></tr></thead><tbody><tr><td>select * from  表名;</td><td>查询数据</td></tr><tr><td>insert into 表名 values(…);</td><td>添加数据（顺序要与表格一致）:全列插入</td></tr><tr><td>insert into 表名(列1，..，) values(…);</td><td>添加数据（顺序要与表格一致）:指定列插入</td></tr><tr><td>insert into 表名 values(),()…;</td><td>添加数据：一次性插入多条数据</td></tr><tr><td>update 表名 set 列1=值1,… where 条件;</td><td>修改数据</td></tr><tr><td>delete from 表名 where 条件;</td><td>删除数据</td></tr></tbody></table><h2 id="例子演示"><a href="#例子演示" class="headerlink" title="例子演示"></a>例子演示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">create table students(</span><br><span class="line">  id int auto_increment primary key not null,</span><br><span class="line">  name varchar(10) not null,</span><br><span class="line">  gender bit default 1,</span><br><span class="line">  birthday datetime</span><br><span class="line">  )  </span><br><span class="line"></span><br><span class="line">alter table students add isDelete bit default 0;</span><br><span class="line"></span><br><span class="line">desc students;  </span><br><span class="line"></span><br><span class="line">show create table students;  </span><br><span class="line"></span><br><span class="line">insert into students values(0, &apos;hao&apos;,1,&apos;1991-1-1&apos;,0);</span><br><span class="line">insert into students(name) values(&apos;a1&apos;),(&apos;a2&apos;),(&apos;a3&apos;);</span><br><span class="line"></span><br><span class="line">update students set birthday=&apos;1990-2-5&apos; where id=2;</span><br><span class="line">select * from students;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id       | int(11)     | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name     | varchar(10) | NO   |     | NULL    |                |</span><br><span class="line">| gender   | bit(1)      | YES  |     | b&apos;1&apos;    |                |</span><br><span class="line">| birthday | datetime    | YES  |     | NULL    |                |</span><br><span class="line">| isDelete | bit(1)      | YES  |     | b&apos;0&apos;    |                |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">| students | CREATE TABLE `students` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(10) NOT NULL,</span><br><span class="line">  `gender` bit(1) DEFAULT b&apos;1&apos;,</span><br><span class="line">  `birthday` datetime DEFAULT NULL,</span><br><span class="line">  `isDelete` bit(1) DEFAULT b&apos;0&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8 |  </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+----+------+--------+---------------------+----------+</span><br><span class="line">| id | name | gender | birthday            | isDelete |</span><br><span class="line">+----+------+--------+---------------------+----------+</span><br><span class="line">|  1 | hao  |       | 1991-01-01 00:00:00 |          |</span><br><span class="line">|  2 | hao  |       | 1991-01-01 00:00:00 |          |</span><br><span class="line">|  3 | kjkj |       | NULL                |          |</span><br></pre></td></tr></table></figure><h1 id="MySQL查询语句"><a href="#MySQL查询语句" class="headerlink" title="MySQL查询语句"></a>MySQL查询语句</h1><p>查询的基本语法是  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select * from students; # 全部查询</span><br><span class="line">select id,name from students;   # 根据条件选择</span><br><span class="line">select distinct gender from students;  # 消除重复行</span><br><span class="line">select distinct id, gender from students;  # 消除重复行(id, gender全部相同时才会消除)</span><br></pre></td></tr></table></figure><h2 id="条件where"><a href="#条件where" class="headerlink" title="条件where"></a>条件where</h2><p>对行数据进行筛选，满足要求的出现在结果集中，不满足的直接舍弃不要  </p><p><strong>先查看condition，在执行select</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 wehre conditions;</span><br></pre></td></tr></table></figure><h3 id="condition的写法"><a href="#condition的写法" class="headerlink" title="condition的写法"></a>condition的写法</h3><ul><li><strong>比较运算符</strong>： <code>=, &gt;, &lt;, &gt;=,&lt;=, !=</code>  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id&gt;3;</span><br></pre></td></tr></table></figure><ul><li><strong>逻辑运算符</strong>： <code>and, or, not</code>  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id&gt;3 and gender=0;</span><br></pre></td></tr></table></figure><ul><li><strong>模糊查询</strong>：   <ul><li>关键字： like  </li><li>%表示任意多个字符</li><li>_表示任意一个字符<br>例子：<em>查询姓黄的学生</em></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;黄%&apos;;</span><br></pre></td></tr></table></figure><p>例子：<em>查询黄（两个字）的学生</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;黄_&apos;;</span><br></pre></td></tr></table></figure><p>例子：<em>查询名字中间有财的的学生</em>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;%财%&apos;;</span><br></pre></td></tr></table></figure><ul><li><strong>范围查询</strong>  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id in (1,3,8);</span><br><span class="line">select * from students where id between 3 and 8;</span><br></pre></td></tr></table></figure><ul><li><strong>空判断</strong>  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from students where birthday is null;</span><br><span class="line">select * from students where birthday is not null;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;基本MySQL语法&quot;&gt;&lt;a href=&quot;#基本MySQL语法&quot; class=&quot;headerlink&quot; title=&quot;基本MySQL语法&quot;&gt;&lt;/a&gt;基本MySQL语法&lt;/h1&gt;&lt;h2 id=&quot;从CMD中调用mysql&quot;&gt;&lt;a href=&quot;#从CMD中调用mysql&quot;
      
    
    </summary>
    
      <category term="数据库" scheme="http://haochen95.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://haochen95.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的基本语法及在python中的实现</title>
    <link href="http://haochen95.github.io/2019/03/02/MySQL%E7%9A%84%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8A%E5%9C%A8python%E4%B8%AD%E7%9A%84%E5%AE%9E%E7%8E%B0/"/>
    <id>http://haochen95.github.io/2019/03/02/MySQL的基本语法及在python中的实现/</id>
    <published>2019-03-01T15:59:19.000Z</published>
    <updated>2019-03-01T16:00:02.653Z</updated>
    
    <content type="html"><![CDATA[<p>本文的主要目的是：  </p><ol><li>通过一个例子全方位了解mysql的基础以及深度使用语法   <blockquote><p> 建立一个students表格,查询等操作<br>和scores,subject关联，聚合操作</p></blockquote></li><li>python和mysql的交互操作 <blockquote><p>和students表格交互</p></blockquote></li><li>更高效的python-mysql语法  <blockquote><p>代码封装<br>用户登录系统</p></blockquote></li></ol><p>使用到的包为：  </p><blockquote><p>mysql, pymysql, hashlib  </p></blockquote><h1 id="1-MySQL语法"><a href="#1-MySQL语法" class="headerlink" title="1. MySQL语法"></a>1. MySQL语法</h1><h2 id="1-1-创建students数据库"><a href="#1-1-创建students数据库" class="headerlink" title="1.1. 创建students数据库"></a>1.1. 创建students数据库</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">mysql -u root  -p  </span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看有多少数据库</span></span><br><span class="line">show databases;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建数据库</span></span><br><span class="line">create database practice charset=<span class="string">'utf8'</span>;   </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除数据库</span></span><br><span class="line"><span class="comment"># drop database practice</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用数据库</span></span><br><span class="line">use practice;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建table</span></span><br><span class="line">create table students(</span><br><span class="line">    id int primary key auto_increment <span class="keyword">not</span> null,</span><br><span class="line">    name varchar(<span class="number">10</span>),</span><br><span class="line">    birthday datetime,</span><br><span class="line">    gender bit default <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看数据库下所有的table</span></span><br><span class="line">show tables;</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 修改table</span></span><br><span class="line">alter table students add isDelete bit default <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除表格</span></span><br><span class="line"><span class="comment"># drop table practice</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看table的结构</span></span><br><span class="line">desc table;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看创建table的语句</span></span><br><span class="line">show create table students;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| python3            |</span><br><span class="line">| sakila             |</span><br><span class="line">| sys                |</span><br><span class="line">| world              |</span><br><span class="line">+--------------------+</span><br><span class="line"></span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| Field    | Type        | Null | Key | Default | Extra          |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line">| id       | int(11)     | NO   | PRI | NULL    | auto_increment |</span><br><span class="line">| name     | varchar(10) | YES  |     | NULL    |                |</span><br><span class="line">| birthday | datetime    | YES  |     | NULL    |                |</span><br><span class="line">| gender   | bit(1)      | YES  |     | b&apos;1&apos;    |                |</span><br><span class="line">| isDelete | bit(1)      | YES  |     | b&apos;0&apos;    |                |</span><br><span class="line">+----------+-------------+------+-----+---------+----------------+</span><br><span class="line"></span><br><span class="line">+--------------------+</span><br><span class="line">| Tables_in_practice |</span><br><span class="line">+--------------------+</span><br><span class="line">| students           |</span><br><span class="line">+--------------------+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line"></span><br><span class="line"> students | CREATE TABLE `students` (</span><br><span class="line">  `id` int(11) NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `name` varchar(10) DEFAULT NULL,</span><br><span class="line">  `birthday` datetime DEFAULT NULL,</span><br><span class="line">  `gender` bit(1) DEFAULT b&apos;1&apos;,</span><br><span class="line">  `isDelete` bit(1) DEFAULT b&apos;0&apos;,</span><br><span class="line">  PRIMARY KEY (`id`)</span><br><span class="line">) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci</span><br></pre></td></tr></table></figure><h2 id="1-2-MySQL数据操作"><a href="#1-2-MySQL数据操作" class="headerlink" title="1.2. MySQL数据操作"></a>1.2. MySQL数据操作</h2><h3 id="增加数据"><a href="#增加数据" class="headerlink" title="增加数据"></a>增加数据</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 方法 1： 直接插入</span></span><br><span class="line">insert into students values(<span class="number">1</span>,<span class="string">'hao'</span>,<span class="string">'1995-10-10'</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">insert into students values(<span class="number">2</span>,<span class="string">'li'</span>,<span class="string">'2001-9-8'</span>,<span class="number">1</span>,<span class="number">0</span>);</span><br><span class="line">insert into students values(<span class="number">3</span>,<span class="string">'wang'</span>,<span class="string">'2015-2-15'</span>,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方法2： 选择列 + 多数据同时插入</span></span><br><span class="line">insert into students(name) values(<span class="string">'meng'</span>),(<span class="string">'bei'</span>);</span><br><span class="line"></span><br><span class="line">select * <span class="keyword">from</span> students;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">| id | name | birthday            | gender | isDelete |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">|  1 | hao  | 1995-10-10 00:00:00 |       |          |</span><br><span class="line">|  2 | li   | 2001-09-08 00:00:00 |       |          |</span><br><span class="line">|  3 | wang | 2015-02-15 00:00:00 |        |          |</span><br><span class="line">|  4 | meng | NULL                |       |          |</span><br><span class="line">|  5 | bei  | NULL                |       |          |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br></pre></td></tr></table></figure><h3 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">delete from students where name = &quot;meng&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">| id | name | birthday            | gender | isDelete |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">|  1 | hao  | 1995-10-10 00:00:00 |       |          |</span><br><span class="line">|  2 | li   | 2001-09-08 00:00:00 |       |          |</span><br><span class="line">|  3 | wang | 2015-02-15 00:00:00 |        |          |</span><br><span class="line">|  5 | bei  | NULL                |       |          |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br></pre></td></tr></table></figure><h3 id="查询数据"><a href="#查询数据" class="headerlink" title="查询数据"></a>查询数据</h3><p>这部分单独拿出来讲  </p><h2 id="1-3-MySQL查询操作"><a href="#1-3-MySQL查询操作" class="headerlink" title="1.3. MySQL查询操作"></a>1.3. MySQL查询操作</h2><h3 id="1-条件查询where"><a href="#1-条件查询where" class="headerlink" title="1.条件查询where"></a>1.条件查询where</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> 表名 wehre conditions;</span><br></pre></td></tr></table></figure><p><strong><font color="red">condition的写法</font></strong></p><ul><li><strong>比较运算符</strong>： <code>=, &gt;, &lt;, &gt;=,&lt;=, !=</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id&gt;3;</span><br></pre></td></tr></table></figure><ul><li><strong>逻辑运算符</strong>： <code>and, or, not</code></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id&gt;3 and gender=0;</span><br></pre></td></tr></table></figure><ul><li><strong>模糊查询</strong>：<ul><li>关键字： like</li><li>%表示任意多个字符</li><li>_表示任意一个字符<br>例子：<em>查询姓黄的学生</em></li></ul></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;黄%&apos;;</span><br></pre></td></tr></table></figure><p>例子：<em>查询黄（两个字）的学生</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;黄_&apos;;</span><br></pre></td></tr></table></figure><p>例子：<em>查询名字中间有财的的学生</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where name like &apos;%财%&apos;;</span><br></pre></td></tr></table></figure><ul><li><strong>范围查询</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from students where id in (1,3,8);</span><br><span class="line">select * from students where id between 3 and 8;</span><br></pre></td></tr></table></figure><ul><li><strong>空判断</strong></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select * from students where birthday is null;</span><br><span class="line">select * from students where birthday is not null;</span><br></pre></td></tr></table></figure><h3 id="2-聚合"><a href="#2-聚合" class="headerlink" title="2. 聚合"></a>2. 聚合</h3><p><strong>为了快速得到统计数据，提供了5个聚合函数</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select count(*) <span class="keyword">from</span> students;                 <span class="comment"># 统计有多少行</span></span><br><span class="line">select max(id) <span class="keyword">from</span> students where gender=<span class="number">0</span>;   <span class="comment"># 求最大值</span></span><br><span class="line">select min(id) <span class="keyword">from</span> students where gender=<span class="number">0</span>;   <span class="comment"># 求最大值</span></span><br><span class="line">select sum(id) <span class="keyword">from</span> students where gender=<span class="number">0</span>;   <span class="comment"># 求和</span></span><br><span class="line">select avg(id) <span class="keyword">from</span> students where gender=<span class="number">0</span>;   <span class="comment"># 求最大值</span></span><br></pre></td></tr></table></figure><h3 id="3-分组groupby"><a href="#3-分组groupby" class="headerlink" title="3.分组groupby"></a>3.分组groupby</h3><ul><li>按照字段分组，表示此字段相同的数据会被放到一个组中（为了更好的统计数据）</li><li>分组后，只能查询相同的数据列，有差异的数据列无法显示在结果列中 </li><li>语法是  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 列1，列2，聚合... from 表名 group by 列1， 列2，列3...</span><br></pre></td></tr></table></figure></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">select gender ,count(*) <span class="keyword">from</span> stundets group by gender;  <span class="comment"># 查询男女生总数  </span></span><br><span class="line"></span><br><span class="line">+--------+----------+</span><br><span class="line">| gender | count(*) |</span><br><span class="line">+--------+----------+</span><br><span class="line">|       |        <span class="number">3</span> |</span><br><span class="line">|        |        <span class="number">1</span> |</span><br><span class="line">+--------+----------+</span><br></pre></td></tr></table></figure><h4 id="分组后筛选"><a href="#分组后筛选" class="headerlink" title="分组后筛选"></a>分组后筛选</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select 列1，列2，聚合... from 表名 group by 列1， 列2，列3... having 列1...聚合....</span><br></pre></td></tr></table></figure><p>分组病筛选例子  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select gender ,count(*) from stundets group by gender having gender=0;</span><br><span class="line">select gender ,count(*) as rs from stundets group by gender having rs&gt;2;  # rs为一个count()的标记名</span><br></pre></td></tr></table></figure><ul><li>where是对from后面指定的表进行数据筛选，属于原始数据的筛选</li><li>having是对group by的结果进行筛选</li></ul><h3 id="4-排序"><a href="#4-排序" class="headerlink" title="4.排序"></a>4.排序</h3><ul><li>asec升序排， desc降序排  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 order by 列1 asc |desc, 列2 asc |desc,...</span><br></pre></td></tr></table></figure><p>排序例子<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where isdelete=0 and gender=1 order by id desc;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">| id | name | birthday            | gender | isDelete |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br><span class="line">|  5 | bei  | NULL                |       |          |</span><br><span class="line">|  2 | li   | 2001-09-08 00:00:00 |       |          |</span><br><span class="line">|  1 | hao  | 1995-10-10 00:00:00 |       |          |</span><br><span class="line">+----+------+---------------------+--------+----------+</span><br></pre></td></tr></table></figure><h3 id="5-分页-limit"><a href="#5-分页-limit" class="headerlink" title="5. 分页 limit"></a>5. 分页 limit</h3><ul><li>当数据量过大时，分页查看数据  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from 表名 limit start, count  # 从start开始，获取count条数据</span><br></pre></td></tr></table></figure><p>已知：每个显示m条数据，当前是第n页(n=1,…)  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from students where isdelete=0 limit (n-1)*m, m</span><br></pre></td></tr></table></figure><h3 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h3><p>完整的查询语句  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select * <span class="keyword">from</span> table</span><br><span class="line">where ...</span><br><span class="line">group by ... having....</span><br><span class="line">orderby ....</span><br><span class="line">limit start, count</span><br></pre></td></tr></table></figure><h2 id="1-2-MySQL关系操作"><a href="#1-2-MySQL关系操作" class="headerlink" title="1.2. MySQL关系操作"></a>1.2. MySQL关系操作</h2><h3 id="1-关系分析"><a href="#1-关系分析" class="headerlink" title="1. 关系分析"></a>1. 关系分析</h3><p><strong>分析</strong>  </p><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_1.png" alt></p><ul><li>分析： 一个成绩对应有多个科目，在成绩中创建外键引用</li></ul><p>创建表的语句  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">create table scores(</span><br><span class="line">   -&gt; id int primary key auto_increment not null,</span><br><span class="line">   -&gt; stuid int,</span><br><span class="line">   -&gt; subid int,</span><br><span class="line">   -&gt; score decimal(4,1));</span><br></pre></td></tr></table></figure><h3 id="2-使用外键保证关系数据的有效性"><a href="#2-使用外键保证关系数据的有效性" class="headerlink" title="2. 使用外键保证关系数据的有效性"></a>2. 使用外键保证关系数据的有效性</h3><ul><li>必须是学生表中id列存在的数据，可以通过外键约束进行数据的有效性验证  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># 添加外键约束 </span><br><span class="line"></span><br><span class="line">alter table scores add constraint stu_sco foreign key(stuid) references student (id);</span><br><span class="line"></span><br><span class="line"># 或者直接在创建的时候添加约束  </span><br><span class="line"> create table scores(</span><br><span class="line">    id int primary key auto_increment not null,</span><br><span class="line">    stuid int,</span><br><span class="line">    subid int,</span><br><span class="line">    score decimal(4,1),</span><br><span class="line">    foreign key(stuid) references students (id),</span><br><span class="line">    foreign key(subid) references subjects (id));</span><br></pre></td></tr></table></figure><p><strong>只有stuid在students的id中才有效，同理subid</strong>   </p><h3 id="3-连接join"><a href="#3-连接join" class="headerlink" title="3. 连接join"></a>3. 连接join</h3><p>当我们查看scores表的时候呈现的结果是这样的  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; select * from scores;</span><br><span class="line">+----+-------+-------+-------+</span><br><span class="line">| id | stuid | subid | score |</span><br><span class="line">+----+-------+-------+-------+</span><br><span class="line">|  1 |     1 |     1 | 100.0 |</span><br><span class="line">|  2 |     2 |     2 |  98.0 |</span><br><span class="line">|  3 |     2 |     1 |  96.0 |</span><br><span class="line">|  4 |     1 |     2 |  86.0 |</span><br><span class="line">+----+-------+-------+-------+</span><br></pre></td></tr></table></figure><p>但是这个表一点都不直观，我哪里知道stuid的1和2代表的谁啊？如果能够显示出人名就好啦，目标效果为  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">    张山            数学            100</span><br><span class="line">students.name  subjects.title  scores.score</span><br></pre></td></tr></table></figure><p><strong>方法</strong>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select students.name,subjects.title,scores.score </span><br><span class="line">from scores </span><br><span class="line">inner join students on stuid = students.id</span><br><span class="line">inner join subjects on scores.subid = subjects.id;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+------+---------+-------+</span><br><span class="line">| name | title   | score |</span><br><span class="line">+------+---------+-------+</span><br><span class="line">| hao  | math    | 100.0 |</span><br><span class="line">| hao  | math    |  96.0 |</span><br><span class="line">| hao  | english |  98.0 |</span><br><span class="line">| hao  | english |  86.0 |</span><br></pre></td></tr></table></figure><p><strong>结果来源于多张表的时候，使用连接查询</strong></p><h4 id="连接查询的种类"><a href="#连接查询的种类" class="headerlink" title="连接查询的种类"></a>连接查询的种类</h4><ul><li>inner join： 内连接，要求连接的表都匹配的才会出现  </li><li>left join：  左连接， 对应数据都有 + 左边表信息也会显示出现，内容为NULL</li><li>right join： 右连接，上同</li></ul><h3 id="4-自关联"><a href="#4-自关联" class="headerlink" title="4. 自关联"></a>4. 自关联</h3><p>设计一个省的表结构provinces  </p><ul><li>id</li><li>ptitle<br>设计一个市信息的表结构citys</li><li>id</li><li>ctitle</li><li>proid（城市所属的省-id）</li></ul><p><strong>问题</strong>： 每次新建一张表的开销大，而且储存的内容很少—： 有没有可能将这两个表统一成一张表呢？</p><p><strong>答案：自关联：</strong> 表中的某一列，关联了这个表的另外一列</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table areas(</span><br><span class="line">  id int primary key,</span><br><span class="line">  atitle varchar(20),</span><br><span class="line">  pid int,</span><br><span class="line">  foreign key(pid) references areas(id)</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><p>导入外部sql文件  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">source area.sql;</span><br></pre></td></tr></table></figure><p>查询一共有多少省  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select count(*) from areas where pid is null</span><br></pre></td></tr></table></figure><p>查询省的名称为“山西省”的所有城市  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select city.* from areas as city</span><br><span class="line">inner join areas as province on city.pid=province.aid</span><br><span class="line">where province.atitle=&quot;山西省&quot;;</span><br></pre></td></tr></table></figure><p>查询市的名称为“广东市”的所有区县  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">select dis.* from aras as dis</span><br><span class="line">inner join areas as city on city.aid = dis.prd</span><br><span class="line">where city.atitle = &quot;广州市&quot;;</span><br></pre></td></tr></table></figure><h3 id="5-视图"><a href="#5-视图" class="headerlink" title="5. 视图"></a>5. 视图</h3><ul><li>对于复杂的查询，多次使用时，维护很麻烦 </li><li>解决：定义视图——来代表复杂的查询  </li><li>视图本身是对查询的一个封装</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 创建view</span><br><span class="line">create view myview as</span><br><span class="line"></span><br><span class="line">select * from scores</span><br><span class="line">inner join students on scores.stuid = students.id</span><br><span class="line">inner join subjects.on scores.subid = subjects.id;</span><br><span class="line"></span><br><span class="line"># 使用视图</span><br><span class="line">select * from myview;</span><br></pre></td></tr></table></figure><h3 id="6-事务-git版本回退功能"><a href="#6-事务-git版本回退功能" class="headerlink" title="6. 事务:git版本回退功能"></a>6. 事务:git版本回退功能</h3><ul><li>当一个业务逻辑需要多个sql完成时，如果其中某条sql语句出错，希望整个操作都退回  </li><li>使用事务可以完成退回的功能，保证业务逻辑的正确性  </li><li><p>事务的四大特征（ACID）:</p><ul><li>原子性(Atomicity): 事务的全部操作在数据库中时不可分割的，要么全部完成，要么不执行</li><li>一致性(Consisitency)： 几个并行执行的事务，其执行结果必须与按照某一顺序串行执行的结果一致</li><li>隔离线(Isolation)： 事务的执行不受其他事务的干扰，事务执行的中间结果对其他事务必须是透明的</li><li>持久性(Durability)： 对于任意已经提交的事务，系统必须保证该事务对数据库的改变不被丢弃  </li></ul></li><li><p>要求：表的类型必须是innodb或者bdb类型才能使用事务  </p></li><li>使用情况：当数据被更改时，insert, alter等</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 查看表的创建语句</span><br><span class="line">show create table students;</span><br><span class="line"># 修改表的类型</span><br><span class="line">alter table 表名 engine=innodb;</span><br><span class="line"># 事务语句</span><br><span class="line"></span><br><span class="line">开启begin；</span><br><span class="line">提交commit；</span><br><span class="line">回滚rollback；</span><br></pre></td></tr></table></figure><p>例子：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">begin;  # 开启数据</span><br><span class="line">update students set name = &apos;option&apos; where id=1;  # 修改数据</span><br><span class="line">commit;  # 提交修改</span><br><span class="line"></span><br><span class="line">rollback;  # 修改被放弃了</span><br></pre></td></tr></table></figure><h1 id="2-Python和MySQL的交互"><a href="#2-Python和MySQL的交互" class="headerlink" title="2. Python和MySQL的交互"></a>2. Python和MySQL的交互</h1><p>安装mysql for python </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install PyMySQL</span><br></pre></td></tr></table></figure><h2 id="2-1-基本用法"><a href="#2-1-基本用法" class="headerlink" title="2.1 基本用法"></a>2.1 基本用法</h2><h3 id="1-Connector对象"><a href="#1-Connector对象" class="headerlink" title="1. Connector对象"></a>1. Connector对象</h3><ul><li>用于建立与数据库的连接  </li><li>创建对象：调用connect()方法  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conn = connect(host主机, port端口, db数据库名称, user用户, password密码, charset)</span><br></pre></td></tr></table></figure><ul><li>对象的方法有  <ul><li>close()关闭</li><li>commit()提交事务</li><li>rollback()撤销操作</li><li>cursor()返回Cursor对象，用于执行sql语句并且获得结果  </li></ul></li></ul><h3 id="2-Cursor对象"><a href="#2-Cursor对象" class="headerlink" title="2. Cursor对象"></a>2. Cursor对象</h3><ul><li>执行sql语句  </li><li>创建对象： 调用Connection对象的cursor()方法  </li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curxor1 = conn.cursor()</span><br></pre></td></tr></table></figure><ul><li><p><strong>对象方法</strong>  </p><ul><li>close()： 关闭</li><li>execute(operation [, paramters])： 执行语句，返回受影响的行数</li><li>fetchone()： 执行查询语句时，获取查询结果集的第一行数据，返回一个元组</li><li>next()： 执行查询语句时，获取当前行的下一行</li><li>fetchall()： 执行查询时，获取结果期的所有行，一行构成一个元组</li><li>scroll(value, [mode]) 将行指针移动到某个位置<ul><li>mode：移动的方式</li><li>mode：默认为relative，表示基于当前行移动到value，value为正则向下移动</li><li>mode的值Wieabsolute，表示基于第一条数据的位置(0)  </li></ul></li></ul></li><li><p><strong>对象的属性</strong>  </p><ul><li>rowcount：只读属性，表示最近一次exectute()返回的行数  </li><li>connection: 获取当前的连接对象</li></ul></li></ul><h2 id="2-2-增改删查"><a href="#2-2-增改删查" class="headerlink" title="2.2 增改删查"></a>2.2 增改删查</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> pymysql <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 通过connect连接mysql数据库</span></span><br><span class="line">    conn = connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,database=<span class="string">'python3'</span>,</span><br><span class="line">                   user=<span class="string">'root'</span>,password=<span class="string">'720678'</span>,charset=<span class="string">'utf8'</span>)</span><br><span class="line">    <span class="comment"># 获得Cursor对象</span></span><br><span class="line">    cursor1 = conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 增加数据</span></span><br><span class="line">    cursor1.execute(<span class="string">'insert into students(name) values("飞机")'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 更新数据</span></span><br><span class="line">    cursor1.execute(<span class="string">'update students set name="大炮" where name = "a1"'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 删除数据</span></span><br><span class="line">    cursor1.execute(<span class="string">'delete from students where id = 10'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 提交之前的操作，如果之前已经之执行过多次的execute，那么就都进行提交</span></span><br><span class="line">    conn.commit()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 关闭Cursor对象</span></span><br><span class="line">    cursor1.close()</span><br><span class="line">    <span class="comment"># 关闭Connection对象</span></span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"MySQL operation works. Congrad..."</span>)</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"Wrong!!!!"</span>)</span><br></pre></td></tr></table></figure><p><strong>下面来看看怎么查看数据</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line"></span><br><span class="line">    conn = connect(host=<span class="string">'localhost'</span>,port=<span class="number">3306</span>,database=<span class="string">'python3'</span>,</span><br><span class="line">                   user=<span class="string">'root'</span>,password=<span class="string">'720678'</span>,charset=<span class="string">'utf8'</span>)</span><br><span class="line"></span><br><span class="line">    cursor1 = conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 查询数据</span></span><br><span class="line">    count = cursor1.execute(<span class="string">'select id, name from students where id&gt;=5'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 打印受影响的行数</span></span><br><span class="line">    print(<span class="string">"查询到%d条数据:"</span> % count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(count):</span><br><span class="line">        <span class="comment"># 获取查询的结果</span></span><br><span class="line">        result = cursor1.fetchone()</span><br><span class="line">        <span class="comment"># 打印查询的结果</span></span><br><span class="line">        print(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    conn.commit()</span><br><span class="line">    cursor1.close()</span><br><span class="line">    conn.close()</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"MySQL operation works. Congrad..."</span>)</span><br><span class="line"><span class="keyword">except</span> Exception:</span><br><span class="line"></span><br><span class="line">    print(<span class="string">"Wrong!!!!"</span>)</span><br></pre></td></tr></table></figure><h2 id="2-3-参数化"><a href="#2-3-参数化" class="headerlink" title="2.3. 参数化"></a>2.3. 参数化</h2><ul><li>执行数据库中的内置函数，通过调用参数来查询  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sname = input(<span class="string">"请输入学生姓名："</span>)</span><br><span class="line">params = [sname]</span><br><span class="line"></span><br><span class="line">count = cursor1.execute(<span class="string">'insert into students(name) values(%s)'</span>, params)</span><br></pre></td></tr></table></figure><h2 id="2-4-封装"><a href="#2-4-封装" class="headerlink" title="2.4. 封装"></a>2.4. 封装</h2><p>上述代码一看 就有重复性，我们可以将它封装到一个类中，实际应用中我们只关注他的sql语句的书写  </p><h2 id="4-4-封装"><a href="#4-4-封装" class="headerlink" title="(4.4) 封装"></a>(4.4) 封装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pymysql</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySQLHelper</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,host,port,db,user,passwd,charset = <span class="string">'utf8'</span>)</span>:</span></span><br><span class="line">        self.host = host</span><br><span class="line">        self.port = port</span><br><span class="line">        self.database = db</span><br><span class="line">        self.user = user</span><br><span class="line">        self.password = passwd</span><br><span class="line">        self.charset = charset</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">connect</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.conn = pymysql.connect(host = self.host, port = self.port, user = self.user,</span><br><span class="line">                                    password = self.password, database = self.database, charset = self.charset)</span><br><span class="line">        self.cursor = self.conn.cursor()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">close</span><span class="params">(self)</span>:</span></span><br><span class="line">        self.cursor.close()</span><br><span class="line">        self.conn.close()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">cud</span><span class="params">(self, sql, params)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.connect()</span><br><span class="line"></span><br><span class="line">            self.cursor.execute(sql, params)</span><br><span class="line">            self.conn.commit()</span><br><span class="line"></span><br><span class="line">            self.close()</span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">"Wrong"</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">all</span><span class="params">(self, sql, params)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            self.connect()</span><br><span class="line">            self.cursor.execute(sql, params)</span><br><span class="line">            res = self.cursor.fetchall()</span><br><span class="line"></span><br><span class="line">            self.close()</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">        <span class="keyword">except</span> Exception:</span><br><span class="line">            print(<span class="string">"Wrong"</span>)</span><br></pre></td></tr></table></figure><p>使用：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> MySQL.MySQLHelper <span class="keyword">import</span> MySQLHelper</span><br><span class="line"></span><br><span class="line">name = input(<span class="string">"请输入学生姓名"</span>)</span><br><span class="line">nub = input(<span class="string">"请输入学生编号"</span>)</span><br><span class="line"></span><br><span class="line">sql = <span class="string">'update students set name = %s where id = %s'</span></span><br><span class="line">params = [name, nub]</span><br><span class="line"></span><br><span class="line">sqlhelper = MySQLHelper(<span class="string">'localhost'</span>, <span class="number">3306</span>, <span class="string">'python3'</span>, <span class="string">'root'</span>, <span class="string">'720678'</span>)</span><br><span class="line"></span><br><span class="line">sqlhelper.cud(sql,params)</span><br></pre></td></tr></table></figure><h1 id="3-实例：实现用户登录功能"><a href="#3-实例：实现用户登录功能" class="headerlink" title="3. 实例：实现用户登录功能"></a>3. 实例：实现用户登录功能</h1><ul><li>接收用户输入： 用户名 + 密码  </li><li>根据用户名，查询密码  <ul><li>未查到： <em>用户名错误</em>  </li><li>查到： 匹配密码  <ul><li>匹配失败： <em>错误</em>  </li><li>匹配成功： <em>登录成功</em></li></ul></li></ul></li></ul><h3 id="创建表"><a href="#创建表" class="headerlink" title="创建表"></a>创建表</h3><ol><li>表的结构： id, uname, upwd, isdelete   </li><li>需要对密码加密：  <ul><li>md5加密：密码包含32个字符  </li><li>sha1加密： 密码包含40个字符 </li></ul></li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">create table users(</span><br><span class="line">  id int primary key auto_increment,</span><br><span class="line">  name varchar(10), </span><br><span class="line">  password char(40)</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">insert into users values(1,&apos;hao&apos;,&apos;1d2b703d7a1f59d7d04c1850a2e308810b49b851&apos;);  # 密码是123</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+----+------+------------------------------------------+</span><br><span class="line">| id | name | password                                 |</span><br><span class="line">+----+------+------------------------------------------+</span><br><span class="line">|  1 | hao  | 40bd001563085fc35165329ea1ff5c5ecbdbbeef |</span><br><span class="line">+----+------+------------------------------------------+</span><br></pre></td></tr></table></figure><h3 id="写登录模块"><a href="#写登录模块" class="headerlink" title="写登录模块"></a>写登录模块</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> MySQL.MySQLHelper <span class="keyword">import</span> MySQLHelper</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> sha1</span><br><span class="line"></span><br><span class="line">name = input(<span class="string">"请输入用户名： "</span>)</span><br><span class="line">pwd = input(<span class="string">"请输入密码： "</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 对密码加密</span></span><br><span class="line">s1 = sha1()</span><br><span class="line">s1.update(pwd.encode(<span class="string">'utf-8'</span>))</span><br><span class="line">pwd2 = s1.hexdigest()</span><br><span class="line"></span><br><span class="line">sql = <span class="string">'select password from users where name = %s'</span></span><br><span class="line">helper = MySQLHelper(<span class="string">'localhost'</span>, <span class="number">3306</span>, <span class="string">'python3'</span>, <span class="string">'root'</span>, <span class="string">'720678'</span>)</span><br><span class="line">result = helper.all(sql, [name])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> len(result) == <span class="number">0</span>:</span><br><span class="line">    print(<span class="string">"用户名出错"</span>)</span><br><span class="line"><span class="keyword">elif</span> result[<span class="number">0</span>][<span class="number">0</span>] == pwd2:</span><br><span class="line">    print(<span class="string">"登录成功"</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">"密码错误"</span>)</span><br></pre></td></tr></table></figure><p>测试  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">请输入用户名： hao</span><br><span class="line">请输入密码： <span class="number">123</span></span><br><span class="line">登录成功</span><br></pre></td></tr></table></figure><h1 id="4-MySQL常用语法"><a href="#4-MySQL常用语法" class="headerlink" title="4. MySQL常用语法"></a>4. MySQL常用语法</h1><h2 id="4-1-创建数据库"><a href="#4-1-创建数据库" class="headerlink" title="4.1.创建数据库"></a>4.1.创建数据库</h2><table><thead><tr><th style="text-align:left">语法</th><th style="text-align:left">用法说明</th></tr></thead><tbody><tr><td style="text-align:left">create database 数据库名字 charset=utf8;</td><td style="text-align:left">创建数据库</td></tr><tr><td style="text-align:left">drop database 数据库名字;</td><td style="text-align:left">删除数据库</td></tr><tr><td style="text-align:left">use 数据库名字;</td><td style="text-align:left">使用这个数据库</td></tr><tr><td style="text-align:left">show databases;</td><td style="text-align:left">查看当前的所有数据库</td></tr><tr><td style="text-align:left">select database();</td><td style="text-align:left">查看当前正在用的是哪个数据库</td></tr></tbody></table><h2 id="4-2-创建数据库下面的表"><a href="#4-2-创建数据库下面的表" class="headerlink" title="4.2.创建数据库下面的表"></a>4.2.创建数据库下面的表</h2><table><thead><tr><th style="text-align:left">语法</th><th style="text-align:left">用法说明</th></tr></thead><tbody><tr><td style="text-align:left">show tables;</td><td style="text-align:left">查看所有的表</td></tr><tr><td style="text-align:left">create table 表名(列和其类型);</td><td style="text-align:left">创建表</td></tr><tr><td style="text-align:left">desc 表名;</td><td style="text-align:left">查看表的结构</td></tr><tr><td style="text-align:left">`alter table 表名 add</td><td style="text-align:left">change</td><td>drop 列名 类型；`</td><td>修改表(增加，修改，删除列)</td></tr><tr><td style="text-align:left">drop table 表名;</td><td style="text-align:left">删除表</td></tr><tr><td style="text-align:left">rename table 原表名 to 新表名;</td><td style="text-align:left">更改表的名字</td></tr><tr><td style="text-align:left">show create table 表名;</td><td style="text-align:left">查看表的创建语句</td></tr></tbody></table><h2 id="4-3-表格中的数据操作"><a href="#4-3-表格中的数据操作" class="headerlink" title="4.3.表格中的数据操作"></a>4.3.表格中的数据操作</h2><table><thead><tr><th style="text-align:left">语法</th><th style="text-align:left">用法说明</th></tr></thead><tbody><tr><td style="text-align:left">select * from  表名;</td><td style="text-align:left">查询数据</td></tr><tr><td style="text-align:left">insert into 表名 values(…);</td><td style="text-align:left">添加数据（顺序要与表格一致）:全列插入</td></tr><tr><td style="text-align:left">insert into 表名(列1，..，) values(…);</td><td style="text-align:left">添加数据（顺序要与表格一致）:指定列插入</td></tr><tr><td style="text-align:left">insert into 表名 values(),()…;</td><td style="text-align:left">添加数据：一次性插入多条数据</td></tr><tr><td style="text-align:left">update 表名 set 列1=值1,… where 条件;</td><td style="text-align:left">修改数据</td></tr><tr><td style="text-align:left">delete from 表名 where 条件;</td><td style="text-align:left">删除数据</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;本文的主要目的是：  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过一个例子全方位了解mysql的基础以及深度使用语法   &lt;blockquote&gt;
&lt;p&gt; 建立一个students表格,查询等操作&lt;br&gt;和scores,subject关联，聚合操作&lt;/p&gt;
&lt;/blockquote&gt;

      
    
    </summary>
    
      <category term="数据库" scheme="http://haochen95.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MySQL" scheme="http://haochen95.github.io/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB语法大全</title>
    <link href="http://haochen95.github.io/2019/03/02/MongoDB%E8%AF%AD%E6%B3%95%E5%A4%A7%E5%85%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/MongoDB语法大全/</id>
    <published>2019-03-01T15:58:21.000Z</published>
    <updated>2019-03-01T15:58:59.770Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-MongoDB简介"><a href="#1-MongoDB简介" class="headerlink" title="1.MongoDB简介"></a>1.MongoDB简介</h1><h2 id="1-1-MongoDB特点"><a href="#1-1-MongoDB特点" class="headerlink" title="1.1.MongoDB特点"></a>1.1.MongoDB特点</h2><ul><li>模式自由：可以将不同格式的文档存在同一个数据库中</li><li>面向集合的储存： 适合储存JSON风格文件的形式</li><li>完整的索引支持：对任何书写可索引</li><li>复制和高可用性： 支持服务器之间的数据复制，支持主-从模式及服务器之间的相互复制</li><li>自动分片： 支持云级别的伸缩性：自动分片功能支持水平的数据库集群，可动态添加额外的机器</li><li>丰富的查询： 支持丰富的查询表达方式</li><li>快速就地更新：查询优化器会分析查询表达式，并生成一个搞笑的额查询计划</li><li>搞笑的传统储存方法，支持二进制数据及大型对象，比如图片</li></ul><h2 id="1-2-MongoDB与MySQL的区别"><a href="#1-2-MongoDB与MySQL的区别" class="headerlink" title="1.2.MongoDB与MySQL的区别"></a>1.2.MongoDB与MySQL的区别</h2><table><thead><tr><th>MySQL术语</th><th>MongoDB术语</th><th>说明</th></tr></thead><tbody><tr><td>database</td><td>database</td><td>数据库</td></tr><tr><td>table</td><td>collection</td><td>数据库表/集合</td></tr><tr><td>row</td><td>document</td><td>数据记录行/文档</td></tr><tr><td>column</td><td>field</td><td>数据字段/域</td></tr><tr><td>index</td><td>index</td><td>索引</td></tr><tr><td>table joins</td><td></td><td>表连接，MongoDB不支持</td></tr><tr><td>primary key</td><td>primary key</td><td>主见</td></tr></tbody></table><h2 id="1-3-MongoDB三元素"><a href="#1-3-MongoDB三元素" class="headerlink" title="1.3.MongoDB三元素"></a>1.3.MongoDB三元素</h2><ul><li>数据库</li></ul><p>一个集合的物理容器，一个数据库中科院包含多个文档</p><ul><li>文档： 就是SQL的行</li></ul><p>一个对象，由键值对组成，是json的扩展</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&apos;name&apos;:&apos;guojing&apos;, &apos;gender&apos;:&apos;男&apos;&#125;</span><br></pre></td></tr></table></figure><ul><li>集合：就是SQL中的表</li></ul><p>类似SQL中的表，储存多个文档，结构不固定：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;&apos;name&apos;:&apos;guojing&apos;, &apos;gender&apos;:&apos;男&apos;&#125;</span><br><span class="line">&#123;&apos;name&apos;:&apos;hua&apos;, &apos;age&apos;:20&#125;</span><br><span class="line">&#123;&apos;name&apos;:&apos;shxhx&apos;, &apos;hero&apos;:&apos;1998&apos;&#125;</span><br></pre></td></tr></table></figure><h2 id="1-4-window中启动mongodb的服务"><a href="#1-4-window中启动mongodb的服务" class="headerlink" title="1.4. window中启动mongodb的服务"></a>1.4. window中启动mongodb的服务</h2><ol><li>首先在官网下载安装好数据库</li><li>将MongoDB添加到 环境变量<ul><li>找到MongoDB的bin文件夹：<code>C:\Program Files\MongoDB\Server\4.0\bin</code></li><li>打开<code>计算机-属性-高级系统设置-环境变量-系统变量-path-编辑-粘贴上面的bin地址</code></li></ul></li><li>在CMD中输入<code>mongo</code>就可以进入服务了</li></ol><h1 id="2-数据库的语法"><a href="#2-数据库的语法" class="headerlink" title="2. 数据库的语法"></a>2. 数据库的语法</h1><h2 id="2-1-数据库语法"><a href="#2-1-数据库语法" class="headerlink" title="2.1. 数据库语法"></a>2.1. 数据库语法</h2><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>db</td><td>查看当前数据库</td></tr><tr><td>show dbs</td><td>查看所有数据库</td></tr><tr><td>use 数据库名字</td><td>使用数据库(没有的话自动创建)</td></tr><tr><td>db.dropDatabase()</td><td>删除当前数据库</td></tr></tbody></table><h2 id="2-1-集合语法"><a href="#2-1-集合语法" class="headerlink" title="2.1. 集合语法"></a>2.1. 集合语法</h2><table><thead><tr><th>代码</th><th>说明</th></tr></thead><tbody><tr><td>db.createCollection(集合名字，其他选项)</td><td>创建集合</td></tr><tr><td>show collections</td><td>查看当前数据库的集合</td></tr><tr><td>db.集合名字.drop()</td><td>删除一个集合</td></tr></tbody></table><h2 id="2-2-支持的数据类型"><a href="#2-2-支持的数据类型" class="headerlink" title="2.2. 支持的数据类型"></a>2.2. 支持的数据类型</h2><table><thead><tr><th>类型</th><th>说明</th></tr></thead><tbody><tr><td>ObjectID</td><td>文档ID：保证文档的唯一性</td></tr><tr><td>String</td><td>字符串</td></tr><tr><td>Boolean</td><td>布尔</td></tr><tr><td>Integer</td><td>整数</td></tr><tr><td>Double</td><td>浮点</td></tr><tr><td>Arrays</td><td>数组和列表</td></tr><tr><td>Object</td><td>嵌入式文档</td></tr><tr><td>NULL</td><td>存NULL值</td></tr><tr><td>Timestamp</td><td>时间戳</td></tr><tr><td>Date</td><td>存当前时间</td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># capped是否设置集合大小的上限</span></span><br><span class="line">db.createCollection(<span class="string">"sub"</span>, &#123;capped: true, size :<span class="number">10</span>&#125;)  <span class="comment"># capped：true 如果db的容量大于10的话，就会覆盖</span></span><br></pre></td></tr></table></figure><h1 id="3-数据库的实际操作"><a href="#3-数据库的实际操作" class="headerlink" title="3. 数据库的实际操作"></a>3. 数据库的实际操作</h1><h2 id="3-1-增修删"><a href="#3-1-增修删" class="headerlink" title="3.1. 增修删"></a>3.1. 增修删</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 插入</span></span><br><span class="line"></span><br><span class="line">db.集合名称.insert(document)</span><br><span class="line"></span><br><span class="line">db.mask.insert(&#123;<span class="string">'name'</span>:<span class="string">'g'</span>, gender:<span class="number">1</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更改</span></span><br><span class="line">db.集合名称.update(</span><br><span class="line">  &lt;query&gt;,   <span class="comment"># 查询条件，类型where</span></span><br><span class="line">  &lt;update&gt;, <span class="comment"># 更新操作费，类型set</span></span><br><span class="line">  &#123;multi:&lt;boolean&gt;&#125;  <span class="comment"># false：只更新找到的第一条记录,true:修改多行</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">db.mask.update(&#123;name:<span class="string">'hr'</span>&#125;,&#123;name: <span class="string">'ceo'</span>&#125;)          <span class="comment"># 这个会修改整个文档结构，最后用set，只修改值</span></span><br><span class="line">db.mask.update(&#123;&#125;,&#123;$set:&#123;gender:<span class="number">0</span>&#125;&#125;,&#123;multi:true&#125;)  <span class="comment"># 修改多个数据</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除</span></span><br><span class="line">db.集合名称.remove(</span><br><span class="line">  &lt;query&gt;,</span><br><span class="line">  &#123;</span><br><span class="line">    justOne:&lt;Boolean&gt;   <span class="comment"># TRUE：只删除一条，false：删除多条</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">db.mask.remove(&#123;gender:<span class="number">0</span>&#125;,&#123;justOne:true&#125;)   <span class="comment"># 只删除匹配的第一条</span></span><br><span class="line">db.mask.remove(&#123;&#125;)    <span class="comment"># 删除所有</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 简单查询</span></span><br><span class="line">db.mask.find()</span><br><span class="line"><span class="comment"># &#123; "_id" : ObjectId("5c6e7e90394099d27b230266"), "name" : "g", "gender" : 1 &#125;</span></span><br></pre></td></tr></table></figure><h2 id="3-2-查询操作"><a href="#3-2-查询操作" class="headerlink" title="3.2. 查询操作"></a>3.2. 查询操作</h2><h3 id="1-基本查询"><a href="#1-基本查询" class="headerlink" title="1.基本查询"></a>1.基本查询</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基础查询</span></span><br><span class="line">db.集合名称.find(&#123;条件文档&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询只返回一个数据</span></span><br><span class="line">db.集合名称.findOne():</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询结果格式化</span></span><br><span class="line">db.集合名称.find(&#123;条件文档&#125;).pretty()</span><br></pre></td></tr></table></figure><h4 id="1）-比较运算符"><a href="#1）-比较运算符" class="headerlink" title="1） 比较运算符"></a>1） 比较运算符</h4><ul><li>等于，直接用属性 + <code>:</code></li><li>小于：$lt</li><li>小于等于:$lte</li><li>大于: $gt</li><li>大于等于: $gte</li><li>不等于: ne</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find(&#123;count:&#123;$gt:<span class="number">5</span>&#125;&#125;)  <span class="comment"># count大于5的结果</span></span><br></pre></td></tr></table></figure><h4 id="2）逻辑运算符"><a href="#2）逻辑运算符" class="headerlink" title="2）逻辑运算符"></a>2）逻辑运算符</h4><ul><li>and： 不需要写什么，逗号就是了</li><li>or：使用$or</li><li>and和or结合使用</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find(&#123;age:&#123;$gte:<span class="number">18</span>&#125;, gender:<span class="number">1</span>&#125;)</span><br><span class="line">db.mask.find(&#123;$<span class="keyword">or</span>:[&#123;age:&#123;$gte:<span class="number">18</span>&#125;,gender:<span class="number">1</span>&#125;]&#125;)</span><br><span class="line">db.mask.find(&#123;$<span class="keyword">or</span>:[&#123;age:&#123;$gte:<span class="number">18</span>&#125;,gender:<span class="number">1</span>&#125;],name:<span class="string">'gj'</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="3）范围运算符"><a href="#3）范围运算符" class="headerlink" title="3）范围运算符"></a>3）范围运算符</h4><ul><li>使用<code>$in,$nin</code>判断是否在某个范围内</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find(&#123;age:&#123;$<span class="keyword">in</span>:[<span class="number">18</span>,<span class="number">28</span>]&#125;&#125;)  <span class="comment"># 年龄为18和28的学生</span></span><br></pre></td></tr></table></figure><h4 id="4）支持正则表达式"><a href="#4）支持正则表达式" class="headerlink" title="4）支持正则表达式"></a>4）支持正则表达式</h4><ul><li>使用//或者$regex编写正则表达式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find(&#123;name:&#123;$regex:<span class="string">'^黄'</span>&#125;&#125;)  <span class="comment"># 查询姓黄的学生</span></span><br></pre></td></tr></table></figure><h3 id="2-自定义函数查询"><a href="#2-自定义函数查询" class="headerlink" title="2. 自定义函数查询"></a>2. 自定义函数查询</h3><ul><li>使用$where定义函数查询</li><li>函数跟JS函数定义是一样的</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find($where:function()&#123;<span class="keyword">return</span> this.age&gt;<span class="number">20</span>&#125;)</span><br></pre></td></tr></table></figure><h3 id="3-查询的扩展功能"><a href="#3-查询的扩展功能" class="headerlink" title="3.查询的扩展功能"></a>3.查询的扩展功能</h3><h4 id="1）Limit-Skip"><a href="#1）Limit-Skip" class="headerlink" title="1）Limit + Skip"></a>1）Limit + Skip</h4><ul><li>limit：用于读取指定数量的文档，表示获取几条数据</li><li>skip: 跳过指定数量的文档，从第几条开始看</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find().limit(<span class="number">2</span>)   <span class="comment"># 只查询两条信息</span></span><br><span class="line">db.mask.find().skip(<span class="number">2</span>)    <span class="comment"># 查询从第三条开始的信息</span></span><br></pre></td></tr></table></figure><h4 id="2）投影"><a href="#2）投影" class="headerlink" title="2）投影"></a>2）投影</h4><ul><li>在查询返回的结果中，只选择必要的字段，而不是选择一个文档的整个字段—-投影</li><li>在find的第二个参数中去写</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.find(&#123;&#125;,&#123;字段名称:<span class="number">1</span>,...&#125;)  <span class="comment"># 需要显示的字段，设置为1</span></span><br><span class="line"></span><br><span class="line">db.mask.find(&#123;&#125;,&#123;_id:<span class="number">0</span>, name:<span class="number">1</span>,gender:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><h4 id="3）排序"><a href="#3）排序" class="headerlink" title="3）排序"></a>3）排序</h4><ul><li>sort方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find().sort(&#123;age:<span class="number">-1</span>&#125;)  <span class="comment"># 1为升序，-1为降序</span></span><br></pre></td></tr></table></figure><h4 id="3）统计个数"><a href="#3）统计个数" class="headerlink" title="3）统计个数"></a>3）统计个数</h4><ul><li>count()方法</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.count(&#123;条件&#125;)</span><br><span class="line"></span><br><span class="line">db.mask.count(&#123;age:&#123;gt:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure><h4 id="3）消除重复"><a href="#3）消除重复" class="headerlink" title="3）消除重复"></a>3）消除重复</h4><ul><li>distinct() 去重复</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.distinct(<span class="string">'去重字段'</span>，&#123;条件&#125;)</span><br><span class="line"></span><br><span class="line">db.mask.distinct(gender,&#123;age:&#123;$gt:<span class="number">20</span>&#125;&#125;)  <span class="comment"># age大于20的进行消除重复</span></span><br></pre></td></tr></table></figure><h1 id="4-MongoDB的高级操作"><a href="#4-MongoDB的高级操作" class="headerlink" title="4.MongoDB的高级操作"></a>4.MongoDB的高级操作</h1><p>主要讲解这个数据库的高级操作，包括聚合、主从复制、分片、备份和恢复、MR、与python的交互</p><h2 id="4-1-聚合aggregate"><a href="#4-1-聚合aggregate" class="headerlink" title="4.1. 聚合aggregate"></a>4.1. 聚合aggregate</h2><ul><li>用于计算数据，类型sum()和avg（）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.aggregate([&#123;管道:&#123;表达式&#125;&#125;])</span><br></pre></td></tr></table></figure><ol><li><strong>管道的含义：</strong> 将前一次操作的输出结果作为下一个命令的输入</li></ol><ul><li>常用管道有：<ul><li>$group:将集合中的文档分组，用于统计结果</li><li>$match:过滤数据，只输出符合条件的文档</li><li>$project:修改输入文档的结果</li><li>$sort:将输入文档排序后输出</li><li>$limit:限制聚合管道返回的文档数</li><li>$skip:跳过指定数量的文档</li><li>$unwind:将数组类型的字段进行拆分</li></ul></li></ul><ol start="2"><li><strong>表达式：</strong> 处理输入文档并输出</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表达式：<span class="string">'$列名'</span></span><br></pre></td></tr></table></figure><ul><li><p>常用表达式为：</p><ul><li>$sum: 计算总数</li><li>$avg:</li><li>$min:</li><li>$max:</li><li>$push:在结果文档中插入值到另外一个数组中</li><li>$first:根据资源文档的排序获取第一个文档数据</li><li>$last:根据资源文档的排序获取最后一个文档数据<h3 id="4-1-1-group"><a href="#4-1-1-group" class="headerlink" title="4.1.1. $group"></a>4.1.1. $group</h3></li></ul></li><li><p>将集合中的文档分组，用于统计结果  </p></li><li>_id表示分组的依据，使用某个字段的格式为’$字段’  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计男生，女生的总人数</span></span><br><span class="line">db.mask.aggregate([</span><br><span class="line">   &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$sum:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">   &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$avg:<span class="string">'age'</span>&#125;&#125;&#125;  <span class="comment"># gender分组，对age求和</span></span><br><span class="line">   &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$frist:<span class="string">'age'</span>&#125;&#125;&#125;  <span class="comment"># 拿到第一个值</span></span><br><span class="line">   <span class="comment"># push--透视数据</span></span><br><span class="line">   &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$push:<span class="string">'age'</span>&#125;&#125;&#125;   <span class="comment"># 将基于gender的分组结果放到数组中</span></span><br><span class="line">    &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$push:<span class="string">'$$ROOT'</span>&#125;&#125;&#125;  <span class="comment"># 查看文档所有内容(gender分组情况下)</span></span><br><span class="line">   ])</span><br></pre></td></tr></table></figure><p><strong>Group by null</strong> 将这个集合数据分成一组  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.mask.aggregate(</span><br><span class="line">  &#123;$group:&#123;_id:null,counter:&#123;$sum:<span class="number">1</span>&#125;&#125;&#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h3 id="4-1-2-match"><a href="#4-1-2-match" class="headerlink" title="4.1.2. $match"></a>4.1.2. $match</h3><ul><li>用于过滤数据  </li></ul><h3 id="4-1-3-project"><a href="#4-1-3-project" class="headerlink" title="4.1.3.$project"></a>4.1.3.$project</h3><ul><li>将结果集中的一部分拿出来显示</li></ul><h3 id="4-1-4-sort"><a href="#4-1-4-sort" class="headerlink" title="4.1.4. $sort"></a>4.1.4. $sort</h3><ul><li>用于排序</li></ul><h3 id="4-1-5-limit-skip"><a href="#4-1-5-limit-skip" class="headerlink" title="4.1.5. $limit+skip"></a>4.1.5. $limit+skip</h3><h3 id="4-1-6-unwind"><a href="#4-1-6-unwind" class="headerlink" title="4.1.6. $unwind"></a>4.1.6. $unwind</h3><ul><li>将文档中的某个数组类型字段拆分成多条，每条包含数组中的一个值  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.集合名称.aggregate([&#123;$unwind:<span class="string">'$字段名称'</span>&#125;])</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">db.mask.aggregate([]</span><br><span class="line">  <span class="comment"># 管道1：过滤数据</span></span><br><span class="line">  &#123;$match:&#123;age:&#123;$gt:<span class="number">20</span>&#125;&#125;&#125;,  <span class="comment"># 查询大于20的信息</span></span><br><span class="line">  <span class="comment"># 管道2：分组数据</span></span><br><span class="line">  &#123;$group:&#123;_id:<span class="string">'$gender'</span>,counter:&#123;$sum:<span class="number">1</span>&#125;&#125;&#125;,</span><br><span class="line">  <span class="comment"># 管道3：设置显示哪些数据</span></span><br><span class="line">  &#123;$project:&#123;_id:<span class="number">0</span>,name:<span class="number">1</span>,age:<span class="number">1</span>&#125;&#125;,</span><br><span class="line">  <span class="comment"># 管道4：数据排序</span></span><br><span class="line">  &#123;$sort:&#123;_id:<span class="number">1</span>&#125;&#125;,</span><br><span class="line">  <span class="comment"># 管道5： 跳过多少数据</span></span><br><span class="line">  &#123;$skip:<span class="number">1</span>&#125;,</span><br><span class="line">  &#123;$limit:<span class="number">1</span>&#125;,</span><br><span class="line">])</span><br></pre></td></tr></table></figure><h2 id="4-2-索引"><a href="#4-2-索引" class="headerlink" title="4.2. 索引"></a>4.2. 索引</h2><ul><li>在大量数据中快速查找  </li></ul><p><strong>步骤一：创造大量数据</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">100000</span>,i++)&#123;</span><br><span class="line">  db.mask.insert(name:<span class="string">'test'</span> + i, age:i)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>步骤二：数据查找性能分析</strong>  </p><ul><li>查找姓名为<code>test10000</code>的文档,并通过explain()来进行性能分析  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.find(&#123;name:<span class="string">'test10000'</span>&#125;).explain(<span class="string">'executionStats'</span>)  <span class="comment"># 整体查询时间，96毫秒</span></span><br></pre></td></tr></table></figure><p><strong>步骤三：创建索引</strong>  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">db.集合.ensureIndex(&#123;属性:<span class="number">1</span>&#125;)  <span class="comment"># 1表示升序  </span></span><br><span class="line"></span><br><span class="line">db.mask.ensureIndex(&#123;<span class="string">"name"</span>:<span class="number">1</span>&#125;)</span><br><span class="line">db.mask.find(&#123;name:<span class="string">'test10000'</span>&#125;).explain(<span class="string">'executionStats'</span>)  <span class="comment"># 2毫秒</span></span><br></pre></td></tr></table></figure><p><strong>索引命令</strong> </p><ul><li>建立单一索引  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.ensureIndex(&#123;<span class="string">"name"</span>:<span class="number">1</span>&#125;,&#123;<span class="string">"unique"</span>: true&#125;)</span><br></pre></td></tr></table></figure><ul><li>建立多个索引   </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db.mask.ensureIndex(&#123;<span class="string">"name"</span>:<span class="number">1</span>，<span class="string">"age"</span>:<span class="number">1</span>&#125;)</span><br></pre></td></tr></table></figure><ul><li><p>查看所有索引  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">db.mask.getIndexes()</span><br><span class="line"></span><br><span class="line">db.mask.dropIndexes(‘索引名称’)  <span class="comment"># 删除</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="4-3-安全-超级管理员和普通用户创建"><a href="#4-3-安全-超级管理员和普通用户创建" class="headerlink" title="4.3. 安全:超级管理员和普通用户创建"></a>4.3. 安全:超级管理员和普通用户创建</h2><ol><li><strong>创建超级管理员</strong>  </li></ol><p>为了更安全的访问MongoDB，需要访问者提供用户名和密码，所以我们需要在mongodb中创建用户，mongoDB采用了角色-用户-数据库的安全管理方式，每个用户被分配了一个角色，不同角色有不同的管理权限，常用角色为如下：  </p><ul><li>root: 只在admin数据库中可用，超级管理员</li><li>read：读</li><li>readwrite：读写</li></ul><p>下面我们来创建超级管理员：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">use admin</span><br><span class="line">ad.createUser(&#123;</span><br><span class="line">  user:<span class="string">'admin'</span>,</span><br><span class="line">  pwd:<span class="string">'123'</span></span><br><span class="line">  roles:[&#123;role:<span class="string">'root'</span>,db:<span class="string">'admin'</span>&#125;]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="2"><li><strong>修改配置文件，启用身份验证</strong>  </li></ol><p>修改配置文件<code>C:\Program Files\MongoDB\Server\4.0\bin\mongod.cfg</code>  </p><p>查找<code>security</code>字段并重写为：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">security:</span><br><span class="line">    authorization: enabled</span><br></pre></td></tr></table></figure><ol start="3"><li><strong>重启服务</strong>  </li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo restart # 重启服务</span><br></pre></td></tr></table></figure><ol start="4"><li><strong>使用超级管理员登录</strong>  </li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo -u admin -p <span class="number">123</span> --authenticationDatabase admin</span><br></pre></td></tr></table></figure><p>里面有以下列表  </p><ul><li>system.Users:通过db.system.Users.find()查看所有的user信息</li><li>system.version</li></ul><ol start="5"><li><strong>为普通用户创建一个数据库</strong>  </li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use test1</span><br></pre></td></tr></table></figure><ol start="6"><li><strong>创建普通用户</strong>  </li></ol><p>从超级管理员那里创建一个普通用户账户(无法访问超级数据库)  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">db.createUser(&#123;</span><br><span class="line">  user:<span class="string">'t1'</span>,</span><br><span class="line">  pwd:<span class="string">'123'</span>,</span><br><span class="line">  roles:[&#123;role:<span class="string">'readWrite'</span>, db:<span class="string">'test1'</span>&#125;]</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><ol start="7"><li><strong>使用普通用户登录</strong></li></ol><p>为普通用户授权test1的数据库权限</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mongo -u t1 -p <span class="number">123</span> -authenticationDatabase test1</span><br></pre></td></tr></table></figure><h2 id="4-4-数据备份和恢复"><a href="#4-4-数据备份和恢复" class="headerlink" title="4.4. 数据备份和恢复"></a>4.4. 数据备份和恢复</h2><h3 id="4-1-MongoDB复制"><a href="#4-1-MongoDB复制" class="headerlink" title="4.1. MongoDB复制"></a>4.1. MongoDB复制</h3><p><strong>复制的工作原理</strong>  </p><ul><li>复制至少需要两个节点A，B…  </li><li>A是主节点，负责处理客户端请求  </li><li>其余的是从节点，负责复制主节点上的数据 </li><li>节点的常见搭配方式是：一主一从、一主多从  </li><li>主节点记录在其上的操作，从节点定期轮询主机诶单获取这些操作，然后对自己的数据副本执行这些操作，从而保证从节点的数据与主节点一致  </li><li>主节点与丛节点进行数据交互保障数据的一致性  </li></ul><p><strong>复制的特点</strong>  </p><ul><li>N个节点的集群  </li><li>任何节点可作为主节点  </li><li>所有写入操作都在主节点  </li><li>自动故障转移  </li><li>自动恢复  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-MongoDB简介&quot;&gt;&lt;a href=&quot;#1-MongoDB简介&quot; class=&quot;headerlink&quot; title=&quot;1.MongoDB简介&quot;&gt;&lt;/a&gt;1.MongoDB简介&lt;/h1&gt;&lt;h2 id=&quot;1-1-MongoDB特点&quot;&gt;&lt;a href=&quot;#1-1-
      
    
    </summary>
    
      <category term="数据库" scheme="http://haochen95.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MongoDb" scheme="http://haochen95.github.io/tags/MongoDb/"/>
    
  </entry>
  
  <entry>
    <title>MongoDB和Python的交互</title>
    <link href="http://haochen95.github.io/2019/03/02/MongoDB%E5%92%8CPython%E7%9A%84%E4%BA%A4%E4%BA%92/"/>
    <id>http://haochen95.github.io/2019/03/02/MongoDB和Python的交互/</id>
    <published>2019-03-01T15:57:34.000Z</published>
    <updated>2019-03-01T15:58:06.592Z</updated>
    
    <content type="html"><![CDATA[<p>安装pymongo包  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install pymongo</span><br></pre></td></tr></table></figure><h1 id="1-MongoDB和Python交互"><a href="#1-MongoDB和Python交互" class="headerlink" title="1.MongoDB和Python交互"></a>1.MongoDB和Python交互</h1><h2 id="1-1-连接mongoDB服务器-MongoClient"><a href="#1-1-连接mongoDB服务器-MongoClient" class="headerlink" title="1.1. 连接mongoDB服务器-MongoClient"></a>1.1. 连接mongoDB服务器-MongoClient</h2><ul><li>建立连接并创建客户端  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 无安全验证 </span></span><br><span class="line">client = MongoClient(<span class="string">'mongodb://localhost:27017/database_name'</span>)</span><br><span class="line"><span class="comment"># 有安全验证</span></span><br><span class="line">client = MongoClient(<span class="string">'mongodb://user:pwd@localhost:27017/databse_name'</span>)</span><br></pre></td></tr></table></figure><ul><li>获取数据库-database  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">db = client.py</span><br></pre></td></tr></table></figure><ul><li>数据库的方法-类Collection  </li></ul><p>主要方法有：  </p><ul><li>insert_one</li><li>insert_many</li><li>update_one</li><li>update_many</li><li>delete_one</li><li>delete_many</li><li>find_one</li><li>find  </li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取集合stu</span></span><br><span class="line">stu = db.stu</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加文档，返回文档id</span></span><br><span class="line">s1 = &#123;<span class="string">'name'</span>:<span class="string">'张三'</span>,<span class="string">'gender'</span>:<span class="literal">True</span>&#125;</span><br><span class="line">s1_id = stu.insert_one(s1).insert_id</span><br><span class="line">print(s1_id)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改文档</span></span><br><span class="line">stu.update_one(&#123;<span class="string">'name'</span>:<span class="string">'张三'</span>&#125;,&#123;<span class="string">'$set'</span>:&#123;<span class="string">'name'</span>:<span class="string">'张三的爸爸'</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除文档 </span></span><br><span class="line">stu.delete_one(&#123;<span class="string">'name'</span>:<span class="string">'张三的爸爸'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查找一个文档，将文档转换为一个元组返回  </span></span><br><span class="line">s2 = stu.find_one(&#123;<span class="string">'name'</span>:<span class="string">'李四'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询多个文档，返回一个Cursor类型对象，用于遍历返回元组形式的文档</span></span><br><span class="line">cursor = stu.find(&#123;<span class="string">'hometown'</span>:<span class="string">'重庆'</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序，返回Cursor类型对象 </span></span><br><span class="line">cursor = stu.find().sort(<span class="string">'age'</span>,DESCENDING)</span><br><span class="line">cursor = stu.find().sort([(<span class="string">'age'</span>,DESCENDING),<span class="string">'name'</span>,ASCENDING])</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装pymongo包  &lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=
      
    
    </summary>
    
      <category term="数据库" scheme="http://haochen95.github.io/categories/%E6%95%B0%E6%8D%AE%E5%BA%93/"/>
    
    
      <category term="MongoDB" scheme="http://haochen95.github.io/tags/MongoDB/"/>
    
  </entry>
  
  <entry>
    <title>Java的基础语法</title>
    <link href="http://haochen95.github.io/2019/03/02/Java%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/"/>
    <id>http://haochen95.github.io/2019/03/02/Java的基础语法/</id>
    <published>2019-03-01T15:53:02.000Z</published>
    <updated>2019-03-01T15:54:47.050Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h1><h2 id="1-1-环境变量"><a href="#1-1-环境变量" class="headerlink" title="1.1. 环境变量"></a>1.1. 环境变量</h2><p>环境变量通常是指在操作系统(win10,win7)中，用来指定操作系统运行时需要的一些参数(比如一个国家需要人民，货币，货物…)，一般为一些<strong>键值对</strong></p><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132755959-53807503.png" alt></p><h3 id="Path环境变量的作用-gt-寻找命令"><a href="#Path环境变量的作用-gt-寻找命令" class="headerlink" title="Path环境变量的作用-&gt;寻找命令"></a>Path环境变量的作用-&gt;寻找命令</h3><p>Path环境变量是操作系统外部命令搜索路径</p><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132801853-1760222595.png" alt></p><h3 id="classpath变量的作用-gt-寻找类文件"><a href="#classpath变量的作用-gt-寻找类文件" class="headerlink" title="classpath变量的作用-&gt;寻找类文件"></a>classpath变量的作用-&gt;寻找类文件</h3><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132807739-795377267.png" alt></p><h2 id="1-2-JDK里面有什么？"><a href="#1-2-JDK里面有什么？" class="headerlink" title="1.2. JDK里面有什么？"></a>1.2. JDK里面有什么？</h2><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132813270-1731200656.png" alt></p><h2 id="1-3-什么是JRE？"><a href="#1-3-什么是JRE？" class="headerlink" title="1.3. 什么是JRE？"></a>1.3. 什么是JRE？</h2><p>JRE是JAVA运行的环境，包括以下几个部分：</p><ul><li>Java虚拟机： 它是由一个软件虚拟出来的计算机</li><li>Java平台核心类文件</li><li>其他支持文件</li></ul><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132820156-1504528087.png" alt></p><h1 id="2-Java的基本语法"><a href="#2-Java的基本语法" class="headerlink" title="2.Java的基本语法"></a>2.Java的基本语法</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">  这是一个注释</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ClassName</span></span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span></span>&#123;</span><br><span class="line">    object.method(parameters)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>技巧：在IDEA中输入psvm会直接创建main函数</strong></p><h2 id="2-1-Java的数据类型"><a href="#2-1-Java的数据类型" class="headerlink" title="2.1 Java的数据类型"></a>2.1 Java的数据类型</h2><p>java是一种强类型语言，这就意味着必须为每个变量声明一种类型  </p><ol><li>整型: int, short, long, byte  </li><li>浮点型: float, double</li><li>char类型: 用单引号</li><li>boolean类型</li></ol><h2 id="2-2-变量"><a href="#2-2-变量" class="headerlink" title="2.2. 变量"></a>2.2. 变量</h2><h3 id="2-2-1-变量的声明方法"><a href="#2-2-1-变量的声明方法" class="headerlink" title="2.2.1. 变量的声明方法"></a>2.2.1. 变量的声明方法</h3><p>声明变量的语法如下：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> <span class="keyword">var</span>=<span class="number">10</span>;</span><br></pre></td></tr></table></figure></p><h3 id="2-2-2-常量final"><a href="#2-2-2-常量final" class="headerlink" title="2.2.2. 常量final"></a>2.2.2. 常量final</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">  <span class="comment">// 类常量用static final定义</span></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> PRESEM = <span class="number">2.54</span>;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      <span class="comment">//基本常量用final定义</span></span><br><span class="line">      <span class="keyword">final</span> <span class="keyword">int</span> jbg = <span class="number">12</span>;</span><br><span class="line">      System.out.println(<span class="string">"Hello World!"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-3-运算符"><a href="#2-3-运算符" class="headerlink" title="2.3. 运算符"></a>2.3. 运算符</h2><ul><li>数学运算符，<code>+,-,*,/</code></li><li>数学函数与常量: <code>Math.sqrt(),Math.pow(),Math.sin(),Math.tan(),Math.exp().Math.log(),Math.PI</code></li><li>强制类型转换  </li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">double</span> x =<span class="number">9.98</span>;</span><br><span class="line"><span class="keyword">int</span> nx = (<span class="keyword">int</span>) x;</span><br></pre></td></tr></table></figure><h2 id="2-4-字符串"><a href="#2-4-字符串" class="headerlink" title="2.4. 字符串"></a>2.4. 字符串</h2><p><strong>字符串是不可变字符串，无法直接修改</strong><br>但是我们可以修改字符串变量，让他引用另外一个字符串，达到修改的效果</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">String greet = <span class="string">"Hello"</span>;</span><br><span class="line"><span class="comment">// 子串</span></span><br><span class="line">String s  = greet.substring(<span class="number">0</span>,<span class="number">3</span>);</span><br><span class="line"><span class="comment">// 拼接</span></span><br><span class="line">String msg = greet + <span class="string">"friends"</span>;</span><br><span class="line"><span class="comment">// 判断是否相等</span></span><br><span class="line">greet.equals(<span class="string">"help"</span>);</span><br><span class="line"><span class="comment">//判断空串和Null串</span></span><br><span class="line"><span class="keyword">if</span>(greet!= <span class="keyword">null</span> &amp;&amp; greet.lend()!=<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h3 id="2-4-1-字符串构造器"><a href="#2-4-1-字符串构造器" class="headerlink" title="2.4.1. 字符串构造器"></a>2.4.1. 字符串构造器</h3><p>有时候我们需要一段一段的构造一个字符串，那么我们就可以通过一个字符串构建器来创造<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造字符串构建器</span></span><br><span class="line">StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line"><span class="comment">//添加字符串</span></span><br><span class="line">builder.append(ch);</span><br><span class="line">builder.append(ch2);</span><br><span class="line"><span class="comment">//转换成真正的字符串</span></span><br><span class="line">String finalString = builder.toString();</span><br></pre></td></tr></table></figure></p><h2 id="2-5-输入输出"><a href="#2-5-输入输出" class="headerlink" title="2.5. 输入输出"></a>2.5. 输入输出</h2><h3 id="2-5-1-键盘输入"><a href="#2-5-1-键盘输入" class="headerlink" title="2.5.1. 键盘输入"></a>2.5.1. 键盘输入</h3><p>读取输入流<code>System.in</code>需要以下两个步骤  </p><ol><li>创建<code>Scanner</code>对象，并关联<code>System.in</code></li><li>通过<code>Scanner</code>对象的<code>nextLine(),next(),nextInt()</code>方法读取数据  </li><li>最后通过<code>hasNext(),hasNextInt(),hasNextDouble()</code>判断是否读取完</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">test</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        Scanner in = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"What is your name?"</span>);</span><br><span class="line">        String name = in.nextLine();</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">"What is your age?"</span>);</span><br><span class="line">        <span class="keyword">int</span> age = in.nextInt();</span><br><span class="line">        </span><br><span class="line">        System.out.println(<span class="string">"Hello, "</span> + name + <span class="string">". you age is "</span> + age);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-5-2-格式化输出"><a href="#2-5-2-格式化输出" class="headerlink" title="2.5.2. 格式化输出"></a>2.5.2. 格式化输出</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">System.out.printf(<span class="string">"hello, %s, you age is %d"</span>, name,age)</span><br></pre></td></tr></table></figure><h3 id="2-5-3-文件输入和输出"><a href="#2-5-3-文件输入和输出" class="headerlink" title="2.5.3. 文件输入和输出"></a>2.5.3. 文件输入和输出</h3><p><strong>文件读取</strong></p><p>要想对文件进行读取，有以下几个步骤  </p><ol><li>用File对象构造一个Scanner对象</li><li>通过<code>Scanner</code>对象的<code>nextLine(),next(),nextInt()</code>方法读取数据</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Scanner in = <span class="keyword">new</span> Scanner(Path.get(<span class="string">"C:\\mydirectory\\myfile.txt"</span>), <span class="string">"UTF-8"</span>);</span><br><span class="line">String msg = in.nextLine();</span><br></pre></td></tr></table></figure><p><strong>文件写入</strong>  </p><p>PrinterWriter out = new PrinterWriter(“myfile.txt”, “UTF-8”)</p><h2 id="2-6-循环控制流程"><a href="#2-6-循环控制流程" class="headerlink" title="2.6. 循环控制流程"></a>2.6. 循环控制流程</h2><p><img src="https://img2018.cnblogs.com/blog/1575244/201901/1575244-20190114132902071-832476832.png" alt></p><h2 id="2-7-数组"><a href="#2-7-数组" class="headerlink" title="2.7. 数组"></a>2.7. 数组</h2><ul><li>数组是一种数据结构，用来储存同一类型值得集合，通过一个整型下标就可以访问数组中的每个值，如果a是一个整型数组，a[i]就是数组中下标为i的整数  </li><li><font color="red">数组是用来储存同一数据类型的集合</font></li></ul><p><strong>一旦创建，不可改变大小</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        <span class="comment">// 创建数组，指定数组长度(不可更改),创建后，所有元素初始化为0，布尔为false， 对象数组为null</span></span><br><span class="line">        <span class="keyword">int</span>[] a = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">10</span>];</span><br><span class="line">        <span class="comment">// 给数组赋值</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;a.length; i++)&#123;</span><br><span class="line">            a[i] = i;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// foreach循环</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> element: a)&#123;</span><br><span class="line">            System.out.println(element);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 数组初始化(无需指定长度) </span></span><br><span class="line">        <span class="keyword">int</span>[] b = &#123;<span class="number">1</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">8</span>,<span class="number">6</span>,<span class="number">12</span>&#125;;</span><br><span class="line">        <span class="comment">// 数组拷贝(指向内存同一个区域)</span></span><br><span class="line">        <span class="keyword">int</span>[] c = b;</span><br><span class="line">        <span class="keyword">int</span>[] c_hard_copy = Arrays.copyOf(b, b.length);</span><br><span class="line">        <span class="comment">// 数组排序</span></span><br><span class="line">        Arrays.sort(b);</span><br><span class="line">        <span class="comment">// 命令行参数 在main方法中的String[] args就是一个字符串数组，接收一系列命令行参数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-基本概念&quot;&gt;&lt;a href=&quot;#1-基本概念&quot; class=&quot;headerlink&quot; title=&quot;1. 基本概念&quot;&gt;&lt;/a&gt;1. 基本概念&lt;/h1&gt;&lt;h2 id=&quot;1-1-环境变量&quot;&gt;&lt;a href=&quot;#1-1-环境变量&quot; class=&quot;headerlink
      
    
    </summary>
    
      <category term="Java" scheme="http://haochen95.github.io/categories/Java/"/>
    
    
  </entry>
  
  <entry>
    <title>Django的基本用法教程-Part-I</title>
    <link href="http://haochen95.github.io/2019/03/02/Django%E7%9A%84%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95%E6%95%99%E7%A8%8B-Part-I/"/>
    <id>http://haochen95.github.io/2019/03/02/Django的基本用法教程-Part-I/</id>
    <published>2019-03-01T15:52:03.000Z</published>
    <updated>2019-03-01T15:52:44.619Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Django基础"><a href="#1-Django基础" class="headerlink" title="1. Django基础"></a>1. Django基础</h1><h2 id="1-1-Django简介"><a href="#1-1-Django简介" class="headerlink" title="1.1. Django简介"></a>1.1. Django简介</h2><h2 id="1-2-Django安装"><a href="#1-2-Django安装" class="headerlink" title="1.2. Django安装"></a>1.2. Django安装</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip install Django</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> django</span><br><span class="line">print(django.get_version())  <span class="comment"># 2.1.7</span></span><br></pre></td></tr></table></figure><h2 id="1-3-创建Django项目"><a href="#1-3-创建Django项目" class="headerlink" title="1.3. 创建Django项目"></a>1.3. 创建Django项目</h2><p>在你希望创建django项目的文件夹下输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">django-admin startproject mysite</span><br></pre></td></tr></table></figure></p><p>mysite项目下面有如下的文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysite/</span><br><span class="line">    manage.py            # 管理 Django 项目的命令行工具</span><br><span class="line">    mysite/</span><br><span class="line">        __init__.py      # 一个空文件，告诉 Python 这个目录应该被认为是一个 Python 包</span><br><span class="line">        settings.py      # Django 项目的配置文件</span><br><span class="line">        urls.py          # Django 项目的 URL 声明</span><br><span class="line">        wsgi.py          # 项目的运行在 WSGI 兼容的Web服务器上的入口</span><br></pre></td></tr></table></figure></p><p>在mysite文件夹内运行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver  # 启动了一个自带的简易服务器</span><br></pre></td></tr></table></figure></p><p>现在，服务器正在运行，浏览器访问 <a href="https://127.0.0.1:8000/" target="_blank" rel="noopener">https://127.0.0.1:8000/</a>。你将会看到一个“祝贺”页面，随着一只火箭发射，服务器已经运行了。  </p><h2 id="1-4-创建一个应用"><a href="#1-4-创建一个应用" class="headerlink" title="1.4. 创建一个应用"></a>1.4. 创建一个应用</h2><p>你的应用可以存放在任何 Python path 中定义的路径。在这个教程中，我们将在你的 manage.py 同级目录下创建投票应用。这样它就可以作为顶级模块导入，而不是 mysite 的子模块。  </p><p>创建应用：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py startapp polls</span><br></pre></td></tr></table></figure><p>这将会创建一个 polls 目录，它的目录结构大致如下：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure><h2 id="1-5-创建第一个视图"><a href="#1-5-创建第一个视图" class="headerlink" title="1.5. 创建第一个视图"></a>1.5. 创建第一个视图</h2><p>让我们开始编写第一个视图吧。打开 polls/views.py，把下面这些 Python 代码输入进去：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"Hello, world. You're at the polls index."</span>)</span><br></pre></td></tr></table></figure><p>这是 Django 中最简单的视图。如果想看见效果，我们需要将一个 URL 映射到它——这就是我们需要 URLconf 的原因了。<br>为了创建 URLconf，请在 polls 目录里新建一个 urls.py 文件。你的应用目录现在看起来应该是这样  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">polls/</span><br><span class="line">    __init__.py</span><br><span class="line">    admin.py</span><br><span class="line">    apps.py</span><br><span class="line">    migrations/</span><br><span class="line">        __init__.py</span><br><span class="line">    models.py</span><br><span class="line">    tests.py</span><br><span class="line">    urls.py</span><br><span class="line">    views.py</span><br></pre></td></tr></table></figure><p>在 polls/urls.py 中，输入如下代码：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">''</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>下一步是要在根 URLconf 文件中指定我们创建的 <code>polls.urls</code> 模块。在 <code>mysite/urls.py</code> 文件的 <code>urlpatterns</code> 列表里插入一个 <code>include()</code>， 如下：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> include, path</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    path(<span class="string">'polls/'</span>, include(<span class="string">'polls.urls'</span>)),</span><br><span class="line">    path(<span class="string">'admin/'</span>, admin.site.urls),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>函数 <code>include()</code> 允许引用其它 <code>URLconfs</code>。每当 <code>Django</code> 遇到 <code>:func：~django.urls.include</code> 时，它会截断与此项匹配的 <code>URL</code> 的部分，并将剩余的字符串发送到<code>URLconf</code> 以供进一步处理   </p><p><strong>你现在把 index 视图添加进了 URLconf。可以验证是否正常工作</strong>  </p><p>用你的浏览器访问 <a href="http://localhost:8000/polls/" target="_blank" rel="noopener">http://localhost:8000/polls/</a>来检查</p><h3 id="函数path的使用"><a href="#函数path的使用" class="headerlink" title="函数path的使用"></a>函数path的使用</h3><p>函数 <code>path()</code> 具有四个参数，两个必须参数：<code>route</code>和 <code>view</code>，两个可选参数：<code>kwargs</code> 和 <code>name</code>。现在，是时候来研究这些参数的含义了。  </p><ul><li>route: route 是一个匹配 URL 的准则（类似正则表达式）。当 Django 响应一个请求时，它会从 urlpatterns 的第一项开始，按顺序依次匹配列表中的项，直到找到匹配的项  </li><li>view:当 Django 找到了一个匹配的准则，就会调用这个特定的视图函数，并传入一个 HttpRequest 对象作为第一个参数，被“捕获”的参数以关键字参数的形式传入。稍后，我们会给出一个例子。  </li><li>kwargs: 任意个关键字参数可以作为一个字典传递给目标视图函数。</li><li>name: 为你的 URL 取名能使你在 Django 的任意地方唯一地引用它</li></ul><h1 id="2-Django的数据库部分"><a href="#2-Django的数据库部分" class="headerlink" title="2. Django的数据库部分"></a>2. Django的数据库部分</h1><h2 id="2-1-数据库配置"><a href="#2-1-数据库配置" class="headerlink" title="2.1. 数据库配置"></a>2.1. 数据库配置</h2><p>现在，打开 mysite/settings.py 。这是个包含了 Django 项目设置的 Python 模块。通常默认SQLite数据库  </p><p>在数据库中创建表<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br></pre></td></tr></table></figure></p><ul><li>这个 migrate 命令检查 INSTALLED_APPS 设置，为其中的每个应用创建需要的数据表，至于具体会创建什么，这取决于你的 mysite/settings.py 设置文件和每个应用的数据库迁移文件  </li><li>这个命令所执行的每个迁移操作都会在终端中显示出来  </li></ul><h2 id="2-2-创建模型"><a href="#2-2-创建模型" class="headerlink" title="2.2. 创建模型"></a>2.2. 创建模型</h2><p>定义模型 - 也就是数据库结构设计和附加的其它元数据。  </p><ul><li>在这个简单的投票应用中，需要创建两个模型：问题 Question 和选项 Choice。Question 模型包括问题描述和发布时间。Choice 模型有两个字段，选项描述和当前得票数。每个选项属于一个问题。  </li></ul><p>polls/models.py 文件 中编写如下代码  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.db <span class="keyword">import</span> models</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your models here.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个模型被表示为 django.db.models.Model 类的子类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Question</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="comment"># 每个模型有一些类变量，它们都表示模型里的一个数据库字段。</span></span><br><span class="line">    <span class="comment"># 每个字段都是 Field 类的实例，告诉 Django 每个字段要处理的数据类型。</span></span><br><span class="line">    <span class="comment"># 字符字段被表示为 CharField</span></span><br><span class="line">    question_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    <span class="comment"># 日期时间字段被表示为 DateTimeField</span></span><br><span class="line">    pub_date = models.DateTimeField(<span class="string">'date published'</span>)</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.question_text</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Choice</span><span class="params">(models.Model)</span>:</span></span><br><span class="line">    <span class="comment"># 使用 ForeignKey 定义了一个关系。这将告诉 Django，每个 Choice 对象都关联到一个 Question 对象。</span></span><br><span class="line">    <span class="comment"># Django 支持所有常用的数据库关系：多对一、多对多和一对一。</span></span><br><span class="line">    question  = models.ForeignKey(Question, on_delete = models.CASCADE)</span><br><span class="line">    choice_text = models.CharField(max_length=<span class="number">200</span>)</span><br><span class="line">    votes = models.IntegerField(default=<span class="number">0</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__str__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> self.choice_text</span><br></pre></td></tr></table></figure><h2 id="2-3-激活模型"><a href="#2-3-激活模型" class="headerlink" title="2.3. 激活模型"></a>2.3. 激活模型</h2><p>通过上述代码，djanao可以  </p><ul><li>为这个应用创建数据库 schema（生成 CREATE TABLE 语句）  </li><li>创建可以与 Question 和 Choice 对象进行交互的 Python 数据库 API  </li></ul><p><strong>但是首先得把 polls 应用安装到我们的项目里</strong>  </p><p>为了在我们的工程中包含这个应用，我们需要在配置类 INSTALLED_APPS 中添加设置。因为 PollsConfig 类写在文件 polls/apps.py 中，所以它的点式路径是 ‘polls.apps.PollsConfig’。在文件 mysite/settings.py 中 INSTALLED_APPS 子项添加点式路径后，它看起来像这样：  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">INSTALLED_APPS = [</span><br><span class="line">    &apos;polls.apps.PollsConfig&apos;,</span><br><span class="line">    &apos;django.contrib.admin&apos;,</span><br><span class="line">    &apos;django.contrib.auth&apos;,</span><br><span class="line">    &apos;django.contrib.contenttypes&apos;,</span><br><span class="line">    &apos;django.contrib.sessions&apos;,</span><br><span class="line">    &apos;django.contrib.messages&apos;,</span><br><span class="line">    &apos;django.contrib.staticfiles&apos;,</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后为polls创建数据库  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py makemigrations polls</span><br></pre></td></tr></table></figure><ul><li><p>通过运行 makemigrations 命令，Django 会检测你对模型文件的修改（在这种情况下，你已经取得了新的），并且把修改的部分储存为一次 迁移。</p></li><li><p>Django 有一个自动执行数据库迁移并同步管理你的数据库结构的命令 - 这个命令是 migrate，我们马上就会接触它 - 但是首先，让我们看看迁移命令会执行哪些 SQL 语句。sqlmigrate 命令接收一个迁移的名称，然后返回对应的 SQL：    </p></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py sqlmigrate polls 0001</span><br></pre></td></tr></table></figure><p>输出：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">BEGIN</span>;</span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Create model Choice</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"polls_choice"</span> (</span><br><span class="line">    <span class="string">"id"</span> <span class="built_in">serial</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="string">"choice_text"</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">"votes"</span> <span class="built_in">integer</span> <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Create model Question</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">"polls_question"</span> (</span><br><span class="line">    <span class="string">"id"</span> <span class="built_in">serial</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> PRIMARY <span class="keyword">KEY</span>,</span><br><span class="line">    <span class="string">"question_text"</span> <span class="built_in">varchar</span>(<span class="number">200</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</span><br><span class="line">    <span class="string">"pub_date"</span> <span class="built_in">timestamp</span> <span class="keyword">with</span> <span class="built_in">time</span> zone <span class="keyword">NOT</span> <span class="literal">NULL</span></span><br><span class="line">);</span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="comment">-- Add field question to choice</span></span><br><span class="line"><span class="comment">--</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">"polls_choice"</span> <span class="keyword">ADD</span> <span class="keyword">COLUMN</span> <span class="string">"question_id"</span> <span class="built_in">integer</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">"polls_choice"</span> <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> <span class="string">"question_id"</span> <span class="keyword">DROP</span> <span class="keyword">DEFAULT</span>;</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">INDEX</span> <span class="string">"polls_choice_7aa0f6ee"</span> <span class="keyword">ON</span> <span class="string">"polls_choice"</span> (<span class="string">"question_id"</span>);</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> <span class="string">"polls_choice"</span></span><br><span class="line">  <span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> <span class="string">"polls_choice_question_id_246c99a640fbbd72_fk_polls_question_id"</span></span><br><span class="line">    <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="string">"question_id"</span>)</span><br><span class="line">    <span class="keyword">REFERENCES</span> <span class="string">"polls_question"</span> (<span class="string">"id"</span>)</span><br><span class="line">    DEFERRABLE <span class="keyword">INITIALLY</span> <span class="keyword">DEFERRED</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">COMMIT</span>;</span><br></pre></td></tr></table></figure><ul><li>数据库的表名是由应用名(polls)和模型名的小写形式( question 和 choice)连接而来</li><li>主键(IDs)会被自动创建</li><li>默认的，Django 会在外键字段名后追加字符串 “_id” 。</li><li>外键关系由 FOREIGN KEY 生成。你不用关心 DEFERRABLE 部分，它只是告诉 PostgreSQL，请在事务全都执行完之后再创建外键关系。</li><li>生成的 SQL 语句是为你所用的数据库定制的，所以那些和数据库有关的字段类型，比如 auto_increment (MySQL)、 serial (PostgreSQL)和 integer primary key autoincrement (SQLite)，Django 会帮你自动处理</li><li>这个 sqlmigrate 命令并没有真正在你的数据库中的执行迁移 - 它只是把命令输出到屏幕上，让你看看 Django 认为需要执行哪些 SQL 语句。</li></ul><p>现在，再次运行 migrate 命令，在数据库里创建新定义的模型的数据表：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">python manage.py migrate</span><br><span class="line"><span class="comment"># Operations to perform:</span></span><br><span class="line"><span class="comment">#   Apply all migrations: admin, auth, contenttypes, polls, sessions</span></span><br><span class="line"><span class="comment"># Running migrations:</span></span><br><span class="line"><span class="comment">#   Applying polls.0001_initial... OK</span></span><br></pre></td></tr></table></figure><ul><li>这个 migrate 命令选中所有还没有执行过的迁移（Django 通过在数据库中创建一个特殊的表 django_migrations 来跟踪执行过哪些迁移）并应用在数据库上 - 也就是将你对模型的更改同步到数据库结构上。  </li><li>迁移是非常强大的功能，它能让你在开发过程中持续的改变数据库结构而不需要重新删除和创建表 - 它专注于使数据库平滑升级而不会丢失数据。  </li><li>现在，你只需要记住，改变模型需要这三步：  <ul><li><ol><li>编辑 models.py 文件，改变模型。</li></ol></li><li><ol start="2"><li>运行 python manage.py makemigrations 为模型的改变生成迁移文件。</li></ol></li><li><ol start="3"><li>运行 python manage.py migrate 来应用数据库迁移。  </li></ol></li></ul></li></ul><h2 id="2-4-初试-API"><a href="#2-4-初试-API" class="headerlink" title="2.4. 初试 API"></a>2.4. 初试 API</h2><p>现在让我们进入交互式 Python 命令行，尝试一下 Django 为你创建的各种 API。通过以下命令打开 Python 命令行  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> polls.models <span class="keyword">import</span> Choice, Question  <span class="comment"># Import the model classes we just wrote.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># No questions are in the system yet.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Question.objects.all()</span><br><span class="line">&lt;QuerySet []&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create a new Question.</span></span><br><span class="line"><span class="comment"># Support for time zones is enabled in the default settings file, so</span></span><br><span class="line"><span class="comment"># Django expects a datetime with tzinfo for pub_date. Use timezone.now()</span></span><br><span class="line"><span class="comment"># instead of datetime.datetime.now() and it will do the right thing.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">from</span> django.utils <span class="keyword">import</span> timezone</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q = Question(question_text=<span class="string">"What's new?"</span>, pub_date=timezone.now())</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save the object into the database. You have to call save() explicitly.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># Now it has an ID.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.id</span><br><span class="line"><span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Access model field values via Python attributes.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.question_text</span><br><span class="line"><span class="string">"What's new?"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.pub_date</span><br><span class="line">datetime.datetime(<span class="number">2012</span>, <span class="number">2</span>, <span class="number">26</span>, <span class="number">13</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">775217</span>, tzinfo=&lt;UTC&gt;)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Change values by changing the attributes, then calling save().</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.question_text = <span class="string">"What's up?"</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>q.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># objects.all() displays all the questions in the database.</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>Question.objects.all()</span><br><span class="line">&lt;QuerySet [&lt;Question: Question object (<span class="number">1</span>)&gt;]&gt;</span><br></pre></td></tr></table></figure><h2 id="2-5-介绍Django的管理页面"><a href="#2-5-介绍Django的管理页面" class="headerlink" title="2.5. 介绍Django的管理页面"></a>2.5. 介绍Django的管理页面</h2><h3 id="创建一个管理员账号"><a href="#创建一个管理员账号" class="headerlink" title="创建一个管理员账号"></a>创建一个管理员账号</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py createsuperuser</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Username: admin</span><br><span class="line">Email address: admin@example.com</span><br><span class="line">Password: **********</span><br><span class="line">Password (again): *********</span><br><span class="line">Superuser created successfully.</span><br></pre></td></tr></table></figure><h3 id="启动开发服务器"><a href="#启动开发服务器" class="headerlink" title="启动开发服务器"></a>启动开发服务器</h3><p>Django 的管理界面默认就是启用的。让我们启动开发服务器，看看它到底是什么样的。  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py runserver</span><br></pre></td></tr></table></figure><p>现在，打开浏览器，转到你本地域名的 “/admin/“ 目录， – 比如 “<a href="http://127.0.0.1:8000/admin/" target="_blank" rel="noopener">http://127.0.0.1:8000/admin/</a>“ 。你应该会看见管理员登录界面：  </p><p><img src="https://docs.djangoproject.com/zh-hans/2.1/_images/admin01.png" alt></p><h3 id="进入管理页面"><a href="#进入管理页面" class="headerlink" title="进入管理页面"></a>进入管理页面</h3><p>通过密码进入页面如下  </p><p><img src="https://docs.djangoproject.com/zh-hans/2.1/_images/admin02.png" alt>  </p><p>你将会看到几种可编辑的内容：组和用户。它们是由 django.contrib.auth 提供的，这是 Django 开发的认证框架  </p><h2 id="向管理页面加入投票应用"><a href="#向管理页面加入投票应用" class="headerlink" title="向管理页面加入投票应用"></a>向管理页面加入投票应用</h2><p>告诉管理页面，问题 Question 对象需要被管理。打开 polls/admin.py 文件，把它编辑成下面这样 </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">from django.contrib import admin</span><br><span class="line"></span><br><span class="line">from .models import Question</span><br><span class="line"></span><br><span class="line">admin.site.register(Question)</span><br></pre></td></tr></table></figure><h1 id="3-视图"><a href="#3-视图" class="headerlink" title="3. 视图"></a>3. 视图</h1><h2 id="3-1-什么是视图"><a href="#3-1-什么是视图" class="headerlink" title="3.1. 什么是视图"></a>3.1. 什么是视图</h2><p>视图的概念是「一类具有相同功能和模板的网页的集合」。比如，在一个博客应用中，你可能会创建如下几个视图  </p><ol><li>博客首页——展示最近的几项内容。</li><li>内容“详情”页——详细展示某项内容。</li><li>以年为单位的归档页——展示选中的年份里各个月份创建的内容</li><li>评论处理器——用于响应为一项内容添加评论的操作。  </li></ol><p>而在我们的投票应用中，我们需要下列几个视图  </p><ol><li>问题索引页——展示最近的几个投票问题</li><li>问题详情页——展示某个投票的问题和不带结果的选项列表。</li><li>问题结果页——展示某个投票的结果。</li><li>投票处理器——用于响应用户为某个问题的特定选项投票的操作。  </li></ol><p>在 Django 中，网页和其他内容都是从视图派生而来。每一个视图表现为一个简单的 Python 函数  </p><ul><li>一个 URL 模式定义了某种 URL 的基本格式——举个例子：<code>/newsarchive/&lt;year&gt;/&lt;month&gt;/</code>。  </li><li>为了将 URL 和视图关联起来，Django 使用了 ‘URLconfs’ 来配置。URLconf 将 URL 模式映射到视图。  </li></ul><h2 id="3-2-编写更多视图"><a href="#3-2-编写更多视图" class="headerlink" title="3.2. 编写更多视图"></a>3.2. 编写更多视图</h2><p>在让我们向 polls/views.py 里添加更多视图。这些视图有一些不同，因为他们接收参数：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request, question_id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"You're looking at question %s."</span> % question_id)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">results</span><span class="params">(request, question_id)</span>:</span></span><br><span class="line">    response = <span class="string">"You're looking at the results of question %s."</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(response % question_id)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">vote</span><span class="params">(request, question_id)</span>:</span></span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">"You're voting on question %s."</span> % question_id)</span><br></pre></td></tr></table></figure><p>把这些新视图添加进 polls.urls 模块里，只要添加几个 url() 函数调用就行：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> path</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> . <span class="keyword">import</span> views</span><br><span class="line"></span><br><span class="line">urlpatterns = [</span><br><span class="line">    <span class="comment"># ex: /polls/</span></span><br><span class="line">    path(<span class="string">''</span>, views.index, name=<span class="string">'index'</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/</span></span><br><span class="line">    path(<span class="string">'&lt;int:question_id&gt;/'</span>, views.detail, name=<span class="string">'detail'</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/results/</span></span><br><span class="line">    path(<span class="string">'&lt;int:question_id&gt;/results/'</span>, views.results, name=<span class="string">'results'</span>),</span><br><span class="line">    <span class="comment"># ex: /polls/5/vote/</span></span><br><span class="line">    path(<span class="string">'&lt;int:question_id&gt;/vote/'</span>, views.vote, name=<span class="string">'vote'</span>),</span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>然后看看你的浏览器，如果你转到 “/polls/34/“ ，Django 将会运行 detail() 方法并且展示你在 URL 里提供的问题 ID。再试试 “/polls/34/vote/“ 和 “/polls/34/vote/“ ——你将会看到暂时用于占位的结果和投票页。</p><p>当某人请求你网站的某一页面时——比如说， “/polls/34/“ ，Django 将会载入 mysite.urls 模块，因为这在配置项 ROOT_URLCONF 中设置了。然后 Django 寻找名为 urlpatterns 变量并且按序匹配正则表达式。在找到匹配项 ‘polls/‘，它切掉了匹配的文本（”polls/“），将剩余文本——“34/“，发送至 ‘polls.urls’ URLconf 做进一步处理。在这里剩余文本匹配了 ‘<a href="int:question_id" target="_blank" rel="noopener">int:question_id</a>/‘，使得我们 Django 以如下形式调用 detail():  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">detail(request=&lt;HttpRequest object&gt;, question_id=<span class="number">34</span>)</span><br></pre></td></tr></table></figure><h2 id="3-3-写一个真正的视图"><a href="#3-3-写一个真正的视图" class="headerlink" title="3.3. 写一个真正的视图"></a>3.3. 写一个真正的视图</h2><ul><li><p>每个视图必须的两个步骤  </p><ol><li>返回一个包含请求页面内容的HttpResponse对象  </li><li>抛出异常Http404  </li><li>其他你自己定义的操作  </li></ol></li><li><p>你的视图可以从数据库里读取记录，可以使用一个模板引擎（比如 Django 自带的，或者其他第三方的），可以生成一个 PDF 文件，可以输出一个 XML，创建一个 ZIP 文件，你可以做任何你想做的事，使用任何你想用的 Python 库。  </p></li></ul><p>首先，在你的 polls 目录里创建一个 templates 目录。Django 将会在这个目录里查找模板文件。</p><p>你项目的 TEMPLATES 配置项描述了 Django 如何载入和渲染模板。默认的设置文件设置了 DjangoTemplates 后端，并将 APP_DIRS 设置成了 True。这一选项将会让 DjangoTemplates 在每个 INSTALLED_APPS 文件夹中寻找 “templates” 子目录。这就是为什么尽管我们没有像在第二部分中那样修改 DIRS 设置，Django 也能正确找到 polls 的模板位置的原因。</p><p>在你刚刚创建的 templates 目录里，再创建一个目录 polls，然后在其中新建一个文件 index.html 。换句话说，你的模板文件的路径应该是 polls/templates/polls/index.html 。因为 Django 会寻找到对应的 app_directories ，所以你只需要使用 polls/index.html 就可以引用到这一模板了。  </p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if latest_question_list %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    &#123;% for question in latest_question_list %&#125;</span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/polls/&#123;&#123; question.id &#125;&#125;/"</span>&gt;</span>&#123;&#123; question.question_text &#125;&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    &#123;% endfor %&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">&#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>No polls are available.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>然后，让我们更新一下 polls/views.py 里的 index 视图来使用模板：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> .models <span class="keyword">import</span> Question</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span><span class="params">(request)</span>:</span></span><br><span class="line">    latest_question_list = Question.objects.order_by(<span class="string">'-pub_date'</span>)[:<span class="number">5</span>]</span><br><span class="line">    context = &#123;<span class="string">'latest_question_list'</span>: latest_question_list&#125;</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'polls/index.html'</span>, context)</span><br></pre></td></tr></table></figure><p>用你的浏览器访问 “/polls/“ ，你将会看见一个无序列表  </p><h2 id="3-4-抛出404错误"><a href="#3-4-抛出404错误" class="headerlink" title="3.4. 抛出404错误"></a>3.4. 抛出404错误</h2><p>现在，我们来处理投票详情视图——它会显示指定投票的问题标题。下面是这个视图的代码：  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">detail</span><span class="params">(request, question_id)</span>:</span></span><br><span class="line">  <span class="comment"># 试用 get() 函数获取一个对象，如果不存在就抛出 Http404 </span></span><br><span class="line">    question = get_object_or_404(Question, pk=question_id)</span><br><span class="line">    <span class="keyword">return</span> render(request, <span class="string">'polls/detail.html'</span>, &#123;<span class="string">'question'</span>: question&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Django基础&quot;&gt;&lt;a href=&quot;#1-Django基础&quot; class=&quot;headerlink&quot; title=&quot;1. Django基础&quot;&gt;&lt;/a&gt;1. Django基础&lt;/h1&gt;&lt;h2 id=&quot;1-1-Django简介&quot;&gt;&lt;a href=&quot;#1-1-Dja
      
    
    </summary>
    
      <category term="Web开发" scheme="http://haochen95.github.io/categories/Web%E5%BC%80%E5%8F%91/"/>
    
    
      <category term="Django" scheme="http://haochen95.github.io/tags/Django/"/>
    
  </entry>
  
  <entry>
    <title>Android开发教程6-Shape和Selector结合用于自定义控件</title>
    <link href="http://haochen95.github.io/2019/03/02/Android%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B6-Shape%E5%92%8CSelector%E7%BB%93%E5%90%88%E7%94%A8%E4%BA%8E%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    <id>http://haochen95.github.io/2019/03/02/Android开发教程6-Shape和Selector结合用于自定义控件/</id>
    <published>2019-03-01T15:51:02.000Z</published>
    <updated>2019-03-01T15:51:48.275Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-Selector和hape的说明"><a href="#1-Selector和hape的说明" class="headerlink" title="1.Selector和hape的说明"></a>1.Selector和hape的说明</h1><ul><li>在Android开发中，使用shape可以很方便的帮我们画出想要的背景，相对于png图片来说，使用shape可以减少安装包的大小，而且能够更好的适配不同的手机。  </li><li>Selector（背景选择器）主要是用来改变一个按钮控件的背景  </li><li>一般使用如下格式自定义控件  </li></ul><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">item</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">Shape</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Shape</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;/<span class="name">item</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span> &gt;</span></span><br></pre></td></tr></table></figure><h1 id="2-Shape的使用"><a href="#2-Shape的使用" class="headerlink" title="2. Shape的使用"></a>2. Shape的使用</h1><p>首先看官网的说明  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">shape</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">[</span>"<span class="attr">rectangle</span>" | "<span class="attr">oval</span>" | "<span class="attr">line</span>" | "<span class="attr">ring</span>"]      //共有<span class="attr">4</span>种类型，矩形（默认）/椭圆形/直线形/环形</span></span><br><span class="line"><span class="tag">    // 以下<span class="attr">4</span>个属性只有当类型为环形时才有效</span></span><br><span class="line"><span class="tag">    <span class="attr">android:innerRadius</span>=<span class="string">"dimension"</span>     //内环半径</span></span><br><span class="line"><span class="tag">    <span class="attr">android:innerRadiusRatio</span>=<span class="string">"float"</span>    //内环半径相对于环的宽度的比例，比如环的宽度为<span class="attr">50</span>,比例为<span class="attr">2.5</span>,那么内环半径为<span class="attr">20</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:thickness</span>=<span class="string">"dimension"</span>   //环的厚度</span></span><br><span class="line"><span class="tag">    <span class="attr">android:thicknessRatio</span>=<span class="string">"float"</span>     //环的厚度相对于环的宽度的比例</span></span><br><span class="line"><span class="tag">    <span class="attr">android:useLevel</span>=<span class="string">"boolean"</span>&gt;</span>    //如果当做是LevelListDrawable使用时值为true，否则为false.</span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span>    //定义圆角</span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"dimension"</span>      //全部的圆角半径</span></span><br><span class="line"><span class="tag">        <span class="attr">android:topLeftRadius</span>=<span class="string">"dimension"</span>   //左上角的圆角半径</span></span><br><span class="line"><span class="tag">        <span class="attr">android:topRightRadius</span>=<span class="string">"dimension"</span>  //右上角的圆角半径</span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottomLeftRadius</span>=<span class="string">"dimension"</span>    //左下角的圆角半径</span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottomRightRadius</span>=<span class="string">"dimension"</span> /&gt;</span>    //右下角的圆角半径</span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span>   //定义渐变效果</span></span><br><span class="line"><span class="tag">        <span class="attr">android:type</span>=<span class="string">[</span>"<span class="attr">linear</span>" | "<span class="attr">radial</span>" | "<span class="attr">sweep</span>"]    //共有<span class="attr">3</span>中渐变类型，线性渐变（默认）/放射渐变/扫描式渐变</span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">"integer"</span>     //渐变角度，必须为<span class="attr">45</span>的倍数，<span class="attr">0</span>为从左到右，<span class="attr">90</span>为从上到下</span></span><br><span class="line"><span class="tag">        <span class="attr">android:centerX</span>=<span class="string">"float"</span>     //渐变中心<span class="attr">X</span>的相当位置，范围为<span class="attr">0</span>～<span class="attr">1</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:centerY</span>=<span class="string">"float"</span>     //渐变中心<span class="attr">Y</span>的相当位置，范围为<span class="attr">0</span>～<span class="attr">1</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">"color"</span>      //渐变开始点的颜色</span></span><br><span class="line"><span class="tag">        <span class="attr">android:centerColor</span>=<span class="string">"color"</span>     //渐变中间点的颜色，在开始与结束点之间</span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">"color"</span>    //渐变结束点的颜色</span></span><br><span class="line"><span class="tag">        <span class="attr">android:gradientRadius</span>=<span class="string">"float"</span>  //渐变的半径，只有当渐变类型为<span class="attr">radial</span>时才能使用</span></span><br><span class="line"><span class="tag">        <span class="attr">android:useLevel</span>=<span class="string">[</span>"<span class="attr">true</span>" | "<span class="attr">false</span>"] /&gt;</span>  //使用LevelListDrawable时就要设置为true。设为false时才有渐变效果</span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span>    //内部边距</span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"dimension"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"dimension"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"dimension"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"dimension"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">size</span>   //自定义的图形大小</span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"dimension"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:height</span>=<span class="string">"dimension"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span>  //内部填充颜色</span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"color"</span> /&gt;</span></span><br><span class="line"> </span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span>     //描边</span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"dimension"</span>   //描边的宽度</span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"color"</span>   //描边的颜色</span></span><br><span class="line"><span class="tag">        // 以下两个属性设置虚线</span></span><br><span class="line"><span class="tag">        <span class="attr">android:dashWidth</span>=<span class="string">"dimension"</span>   //虚线的宽度，值为<span class="attr">0</span>时是实线</span></span><br><span class="line"><span class="tag">        <span class="attr">android:dashGap</span>=<span class="string">"dimension"</span> /&gt;</span>      //虚线的间隔</span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-1-直角与圆角矩形"><a href="#2-1-直角与圆角矩形" class="headerlink" title="2.1. 直角与圆角矩形"></a>2.1. 直角与圆角矩形</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"10dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"@color/holo_green_dark"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"@color/white"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="2-2-圆形"><a href="#2-2-圆形" class="headerlink" title="2.2. 圆形"></a>2.2. 圆形</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"oval"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:type</span>=<span class="string">"linear"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">"45"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">"@color/holo_green_dark"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:centerColor</span>=<span class="string">"@color/holo_blue_dark"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">"@color/holo_blue_bright"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><h1 id="3-Selector和Shape的结合使用"><a href="#3-Selector和Shape的结合使用" class="headerlink" title="3. Selector和Shape的结合使用"></a>3. Selector和Shape的结合使用</h1><p>通过实现一个按钮，按下前和按下后的不同变化来演示这个功能  </p><ol><li>创建正常状态下的button样式button_default.xml，可用未点击  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">"45"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">"#6a938b"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">"#051c3b"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"15dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"7dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#ffff"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>创建点击状态下的样式buttom_pressed.xml  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">gradient</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:angle</span>=<span class="string">"45"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:startColor</span>=<span class="string">"#9a5edf"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:endColor</span>=<span class="string">"#20549b"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"15dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"7dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#ffff"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>创建不可用状态下的样式buttom_disabled.xml  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">shape</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:shape</span>=<span class="string">"rectangle"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">solid</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#858687"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">corners</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:radius</span>=<span class="string">"15dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">padding</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:bottom</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:left</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:right</span>=<span class="string">"7dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:top</span>=<span class="string">"7dp"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">stroke</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:width</span>=<span class="string">"2dp"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:color</span>=<span class="string">"#ffff"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">shape</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>创建一个selector来关联这些shape：custeom_button.xml  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_pressed</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_enabled</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/button_default"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_pressed</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/button_pressed"</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:state_enabled</span>=<span class="string">"false"</span></span></span><br><span class="line"><span class="tag">        <span class="attr">android:drawable</span>=<span class="string">"@drawable/button_disabled"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="5"><li>在主button中引入这个selector    </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Button</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/custom_choose"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_margin</span>=<span class="string">"10dp"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"@drawable/custom_button"</span></span></span><br><span class="line"><span class="tag">    /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Switch</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@+id/if_enable"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:checked</span>=<span class="string">"true"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">android:text</span>=<span class="string">"Enabled"</span>/&gt;</span></span><br></pre></td></tr></table></figure><ol start="6"><li>在主活动中写入逻辑关系  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">CustomActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Button custom_BT;</span><br><span class="line">    <span class="keyword">private</span> Switch if_checked;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_custom);</span><br><span class="line"></span><br><span class="line">        custom_BT = (Button)findViewById(R.id.custom_choose);</span><br><span class="line">        if_checked = (Switch)findViewById(R.id.if_enable);</span><br><span class="line"></span><br><span class="line">        custom_BT.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                Toast.makeText(CustomActivity.<span class="keyword">this</span>,<span class="string">"CLicked"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        if_checked.setOnCheckedChangeListener(<span class="keyword">new</span> CompoundButton.OnCheckedChangeListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCheckedChanged</span><span class="params">(CompoundButton buttonView, <span class="keyword">boolean</span> isChecked)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (isChecked)&#123;</span><br><span class="line">                    custom_BT.setEnabled(<span class="keyword">true</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    custom_BT.setEnabled(<span class="keyword">false</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-通过Style保存刚刚设计的样式"><a href="#4-通过Style保存刚刚设计的样式" class="headerlink" title="4. 通过Style保存刚刚设计的样式"></a>4. 通过Style保存刚刚设计的样式</h1><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">name</span>=<span class="string">"CustomButton"</span> <span class="attr">parent</span>=<span class="string">"Widget.AppCompat.Button"</span>&gt;</span><span class="undefined"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span> = <span class="string">"android:background"</span>&gt;</span>@drawable/custom_button<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">name</span> = <span class="string">"android:textColor"</span>&gt;</span>#fff<span class="tag">&lt;/<span class="name">item</span>&gt;</span></span></span><br><span class="line"><span class="undefined"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_5.gif" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-Selector和hape的说明&quot;&gt;&lt;a href=&quot;#1-Selector和hape的说明&quot; class=&quot;headerlink&quot; title=&quot;1.Selector和hape的说明&quot;&gt;&lt;/a&gt;1.Selector和hape的说明&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;
      
    
    </summary>
    
      <category term="Android Development" scheme="http://haochen95.github.io/categories/Android-Development/"/>
    
    
      <category term="Android" scheme="http://haochen95.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android开发教程5-数据存储</title>
    <link href="http://haochen95.github.io/2019/03/02/Android%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B5-%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/Android开发教程5-数据存储/</id>
    <published>2019-03-01T15:50:07.000Z</published>
    <updated>2019-03-01T15:50:48.852Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-持久化技术"><a href="#1-持久化技术" class="headerlink" title="1. 持久化技术"></a>1. 持久化技术</h1><ul><li>将那些内存的瞬间数据保存到存储设备中，保证即使在手机或者电脑关机的状态下，数据不会丢失， Android有三种持久化方式  <ul><li>文件存储</li><li>SharedPreference储存</li><li>数据库储存  </li></ul></li></ul><h1 id="2-文件储存"><a href="#2-文件储存" class="headerlink" title="2. 文件储存"></a>2. 文件储存</h1><p>适用于存储一些简单的额文本数据或者二进制数据  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSaveActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    EditText editText;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_data_save);</span><br><span class="line"></span><br><span class="line">        editText = (EditText)findViewById(R.id.edit);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当从主活动转到这里的时候，会加载上一步的文本</span></span><br><span class="line">        String inputText = load();</span><br><span class="line">        <span class="comment">// !TextUtils.isEmpty(inputText):当传入的字符串登录null或者空的时候，返回trye</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(inputText))&#123;</span><br><span class="line">            editText.setText(inputText);</span><br><span class="line">            editText.setSelection(inputText.length());</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"Restoring success"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        String inputText = editText.getText().toString();</span><br><span class="line">        save(inputText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将数据保存到文件中</span></span><br><span class="line">    <span class="comment">// Context类体用了一个openFileOutput()方法，用于数据储存到指定文件</span></span><br><span class="line">    <span class="comment">// 输入参数: 1: 文件名，所有文件都默认放在/data/data/&lt;package name&gt;/files目录下</span></span><br><span class="line">    <span class="comment">//          2: 文件操作模式，private和append</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String inputText)</span></span>&#123;</span><br><span class="line">        FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">        BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            out = openFileOutput(<span class="string">"data"</span>, Context.MODE_PRIVATE);</span><br><span class="line">            writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">            writer.write(inputText);</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"Text has been saved"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (writer !=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从文件中读取数据</span></span><br><span class="line">    <span class="comment">// Context类提供一个openFileInput方法用于从文件读取数据，接收一个参数：文件名</span></span><br><span class="line">    <span class="comment">// 系统自动从/data/data/&lt;package name&gt;/files/目录下去加载这个文件，返回一个FileInputStream对象</span></span><br><span class="line">    <span class="comment">// 通过java流将数据读取出来</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">load</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FileInputStream in = <span class="keyword">null</span>;</span><br><span class="line">        BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">        StringBuilder content  =<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            in = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">            <span class="comment">// 通过BufferedReader进行一行行的读取</span></span><br><span class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">            String line = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                content.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (reader!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> content.toString();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_3.gif" alt></p><h1 id="3-SharedPreferences存储"><a href="#3-SharedPreferences存储" class="headerlink" title="3. SharedPreferences存储"></a>3. SharedPreferences存储</h1><ul><li>SharedPreference是通过键值对存储数据  </li></ul><h2 id="3-1-将数据存储到Sharepreferences中"><a href="#3-1-将数据存储到Sharepreferences中" class="headerlink" title="3.1. 将数据存储到Sharepreferences中"></a>3.1. 将数据存储到Sharepreferences中</h2><p>要想适用SharePreference来存储数据，首先需要获得SharePreference对象，Android提供了3中方式获取SharePreference对象  </p><ol><li>Context类中的<code>getSharedPreferences(filename, MODE)</code>方法 </li></ol><p>第一个参数是用于指定SharedPreferences的文件名称，保存在<code>/data/data/&lt;package name&gt;/shared_prefs/</code>目录下<br>第二个参数是默认操作模式，MODE_PRIVATE  </p><ol start="2"><li>Activity类中的getPreferences()方法</li></ol><p>这个方法和上面的很类似，不过它只接收一个操作模式参数</p><ol start="3"><li>PrefenceManager类中的getDefaultSharedPreferences()方法  </li></ol><p>这是一个静态方法接收context参数，并自动使用当前程序包名作为前缀来命名SharedPreferences文件  </p><p>得到了SharePreference对象后，我们就可向里面写入数据了，主要分为3步完成：  </p><p>(1). 调用SharePreference对象的edit()方法获取一个SharePreferences.Editor对象<br>(2). 向SharePreferences.Editor对象添加数据，putBoolean(),putString()<br>(3). 调用apply()方法将添加的数据提交，完成数据的存储操作</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DataSaveActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> EditText editText,account,pw;</span><br><span class="line">    <span class="keyword">private</span> Button login;</span><br><span class="line">    <span class="keyword">private</span> CheckBox rememberPW;</span><br><span class="line">    <span class="keyword">private</span> SharedPreferences pref;</span><br><span class="line">    <span class="keyword">private</span> SharedPreferences.Editor editor;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_data_save);</span><br><span class="line"></span><br><span class="line">        editText = (EditText)findViewById(R.id.edit);</span><br><span class="line">        account = (EditText)findViewById(R.id.account);</span><br><span class="line">        pw = (EditText)findViewById(R.id.pw);</span><br><span class="line">        login = (Button)findViewById(R.id.login);</span><br><span class="line">        rememberPW = (CheckBox)findViewById(R.id.remeber_pw);</span><br><span class="line">        pref = PreferenceManager.getDefaultSharedPreferences(<span class="keyword">this</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">boolean</span> isRemember = pref.getBoolean(<span class="string">"remember_password"</span>,<span class="keyword">false</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isRemember)&#123;</span><br><span class="line">            String accountText = pref.getString(<span class="string">"account"</span>,<span class="string">""</span>);</span><br><span class="line">            String passwordText = pref.getString(<span class="string">"password"</span>, <span class="string">""</span>);</span><br><span class="line">            account.setText(accountText);</span><br><span class="line">            pw.setText(passwordText);</span><br><span class="line">            rememberPW.setChecked(<span class="keyword">true</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        login.setOnClickListener(<span class="keyword">new</span> View.OnClickListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">                String accountText = account.getText().toString();</span><br><span class="line">                String passwordText = pw.getText().toString();</span><br><span class="line">                <span class="comment">// 如果账号是admin，且密码是123456，就任务登录成功</span></span><br><span class="line">                <span class="keyword">if</span> (accountText.equals(<span class="string">"admin"</span>) &amp;&amp; passwordText.equals(<span class="string">"123456"</span>))&#123;</span><br><span class="line">                    editor = pref.edit();</span><br><span class="line">                    <span class="keyword">if</span> (rememberPW.isChecked())&#123;</span><br><span class="line">                        editor.putBoolean(<span class="string">"remember_password"</span>, <span class="keyword">true</span>);</span><br><span class="line">                        editor.putString(<span class="string">"account"</span>, accountText);</span><br><span class="line">                        editor.putString(<span class="string">"password"</span>,passwordText);</span><br><span class="line">                    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        editor.clear();</span><br><span class="line">                    &#125;</span><br><span class="line">                    editor.apply();</span><br><span class="line">                    Toast.makeText(DataSaveActivity.<span class="keyword">this</span>, <span class="string">"You got it"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span>&#123;</span><br><span class="line">                    Toast.makeText(DataSaveActivity.<span class="keyword">this</span>, <span class="string">"Wrong account or password"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 当从主活动转到这里的时候，会加载上一步的文本</span></span><br><span class="line">        String inputText = load();</span><br><span class="line">        <span class="comment">// !TextUtils.isEmpty(inputText):当传入的字符串登录null或者空的时候，返回trye</span></span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(inputText))&#123;</span><br><span class="line">            editText.setText(inputText);</span><br><span class="line">            editText.setSelection(inputText.length());</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"Restoring success"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDestroy();</span><br><span class="line">        String inputText = editText.getText().toString();</span><br><span class="line">        save(inputText);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 将数据保存到文件中</span></span><br><span class="line">    <span class="comment">// Context类体用了一个openFileOutput()方法，用于数据储存到指定文件</span></span><br><span class="line">    <span class="comment">// 输入参数: 1: 文件名，所有文件都默认放在/data/data/&lt;package name&gt;/files目录下</span></span><br><span class="line">    <span class="comment">//          2: 文件操作模式，private和append</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">save</span><span class="params">(String inputText)</span></span>&#123;</span><br><span class="line">        FileOutputStream out = <span class="keyword">null</span>;</span><br><span class="line">        BufferedWriter writer = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            out = openFileOutput(<span class="string">"data"</span>, Context.MODE_PRIVATE);</span><br><span class="line">            writer = <span class="keyword">new</span> BufferedWriter(<span class="keyword">new</span> OutputStreamWriter(out));</span><br><span class="line">            writer.write(inputText);</span><br><span class="line">            Toast.makeText(<span class="keyword">this</span>, <span class="string">"Text has been saved"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">try</span>&#123;</span><br><span class="line">                <span class="keyword">if</span> (writer !=<span class="keyword">null</span>)&#123;</span><br><span class="line">                    writer.close();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 从文件中读取数据</span></span><br><span class="line">    <span class="comment">// Context类提供一个openFileInput方法用于从文件读取数据，接收一个参数：文件名</span></span><br><span class="line">    <span class="comment">// 系统自动从/data/data/&lt;package name&gt;/files/目录下去加载这个文件，返回一个FileInputStream对象</span></span><br><span class="line">    <span class="comment">// 通过java流将数据读取出来</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">load</span><span class="params">()</span></span>&#123;</span><br><span class="line">        FileInputStream in = <span class="keyword">null</span>;</span><br><span class="line">        BufferedReader reader = <span class="keyword">null</span>;</span><br><span class="line">        StringBuilder content  =<span class="keyword">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            in = openFileInput(<span class="string">"data"</span>);</span><br><span class="line">            <span class="comment">// 通过BufferedReader进行一行行的读取</span></span><br><span class="line">            reader = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(in));</span><br><span class="line">            String line = <span class="string">""</span>;</span><br><span class="line">            <span class="keyword">while</span> ((line = reader.readLine())!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                content.append(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (reader!=<span class="keyword">null</span>)&#123;</span><br><span class="line">                <span class="keyword">try</span>&#123;</span><br><span class="line">                    reader.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (IOException e)&#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">               &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">return</span> content.toString();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_4.gif" alt>  </p><h1 id="4-LitePal数据库存储"><a href="#4-LitePal数据库存储" class="headerlink" title="4. LitePal数据库存储"></a>4. LitePal数据库存储</h1><p>LitPal是一款开源的Android数据库框架，采用对象关系映射(ORM)模式，并将我们平时开发常用的一些数据库功能进行了一些封装  </p><h2 id="4-1-配置LitePal"><a href="#4-1-配置LitePal" class="headerlink" title="4.1. 配置LitePal"></a>4.1. 配置LitePal</h2><p>在app/build.gradle中添加implments  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">dependencies &#123;</span><br><span class="line">    implementation &apos;org.litepal.android:java:3.0.0&apos;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后需要配置litepal.xml文件，右击app/src/main目录-&gt;New-&gt;Directory创建一个assets目录，然后在里面创建litepal.xml文件  </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">litepal</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dbname</span> <span class="attr">value</span> = <span class="string">"BookStore"</span>&gt;</span><span class="tag">&lt;/<span class="name">dbname</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span> <span class="attr">value</span> = <span class="string">"1"</span>&gt;</span><span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="tag">&lt;<span class="name">list</span>&gt;</span><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="name">litepal</span>&gt;</span></span><br></pre></td></tr></table></figure><p>然后在AndroidManifest.xml中配置一下<code>android:name=&quot;org.litepal.LitePalApplication&quot;</code>  </p><h2 id="4-2-创建和升级数据库"><a href="#4-2-创建和升级数据库" class="headerlink" title="4.2. 创建和升级数据库"></a>4.2. 创建和升级数据库</h2><p>首先配置adb  </p><p><code>C:\Users\HAO\AppData\Local\Android\Sdk\platform-tools</code>添加到系统变量中</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-持久化技术&quot;&gt;&lt;a href=&quot;#1-持久化技术&quot; class=&quot;headerlink&quot; title=&quot;1. 持久化技术&quot;&gt;&lt;/a&gt;1. 持久化技术&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;将那些内存的瞬间数据保存到存储设备中，保证即使在手机或者电脑关机的状态下，数据不会丢
      
    
    </summary>
    
      <category term="Android Development" scheme="http://haochen95.github.io/categories/Android-Development/"/>
    
    
      <category term="Android" scheme="http://haochen95.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>Android开发教程4-BroadcastReceiver的使用</title>
    <link href="http://haochen95.github.io/2019/03/02/Android%E5%BC%80%E5%8F%91%E6%95%99%E7%A8%8B4-BroadcastReceiver%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>http://haochen95.github.io/2019/03/02/Android开发教程4-BroadcastReceiver的使用/</id>
    <published>2019-03-01T15:49:16.000Z</published>
    <updated>2019-03-01T15:49:55.683Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-广播机制"><a href="#1-广播机制" class="headerlink" title="1. 广播机制"></a>1. 广播机制</h1><p>BroadcastReceiver，顾名思义就是“广播接收者”的意思，它是Android四大基本组件之一，这种组件本质上是一种全局的监听器，用于监听系统全局的广播消息。它可以接收来自系统和应用的的广播。 BroadcastReceiver用于接收程序（包括系统程序和一般应用）通过sendBroadcast()方法发出的Broadcast intents</p><ul><li>Android的每个应用程序都可以对自己感兴趣的广播进行注册，这样该程序就会只接收自己关系的广播内容  </li><li>广播内容来自系统或者其他应用程序  </li><li>发送广播:Intent  </li><li>接收广播: Broadcaset Receiver  </li><li>广播的分类  <ul><li>标准广播：异步执行，广播发出后，所有的接收器几乎同时接收到这个广播，没有先后顺序之分  </li><li>有序广播： 同步执行，广播发出后，同意时间只有一个广播接收器能够接受这个广播，当接收完毕后才会继续传递给下一个  </li></ul></li></ul><h1 id="2-程序启动BroadcastReceiver的步骤："><a href="#2-程序启动BroadcastReceiver的步骤：" class="headerlink" title="2.程序启动BroadcastReceiver的步骤："></a>2.程序启动BroadcastReceiver的步骤：</h1><ol><li>创建需要启动BroadcastReceiver的Intent。</li><li>调用Context的sendBroadcast()或sendOrderedBroadcast()方法来启动指定的BroadcastReceiver。其中sendBroadcast发送的是普通广播，sendOrderedBroadcast发送的是有序广播。  </li></ol><h1 id="3-创建BroadcastReceiver的步骤"><a href="#3-创建BroadcastReceiver的步骤" class="headerlink" title="3.创建BroadcastReceiver的步骤"></a>3.创建BroadcastReceiver的步骤</h1><h2 id="3-1-创建BroadcastReceiver的自雷"><a href="#3-1-创建BroadcastReceiver的自雷" class="headerlink" title="3.1. 创建BroadcastReceiver的自雷"></a>3.1. 创建BroadcastReceiver的自雷</h2><p>由于BroadcastReceiver本质上是一种监听器，所以创建BroadcastReceiver的方法也非常简单，只需要创建一个BroadcastReceiver的子类然后重写onReceive (Context context, Intentintent)方法即可。  </p><h2 id="3-2-注册BroadcastReceiver"><a href="#3-2-注册BroadcastReceiver" class="headerlink" title="3.2. 注册BroadcastReceiver"></a>3.2. 注册BroadcastReceiver</h2><p>一旦实现了BroadcastReceiver，接下就应该指定该BroadcastReceiver能匹配的Intent即注册BroadcastReceiver。注册BroadcastReceiver的方式有两种：  </p><ol><li><strong>静态注册：</strong> 这种方法是在配置AndroidManifest.xml配置文件中注册，通过这种方式注册的广播为常驻型广播，也就是说如果应用程序关闭了，有相应事件触发，程序还是会被系统自动调用运行  </li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 在配置文件中注册BroadcastReceiver能够匹配的Intent --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">receiver</span> <span class="attr">android:name</span>=<span class="string">"com.example.test.MyBroadcastReceiver"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">intent-filter</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">android:name</span>=<span class="string">"android.intent.action.MyBroadcastReceiver"</span>&gt;</span><span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">category</span> <span class="attr">android:name</span>=<span class="string">"android.intent.category.DEFAULT"</span>&gt;</span><span class="tag">&lt;/<span class="name">category</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">intent-filter</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">receiver</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li><strong>动态注册:</strong> 种方法是通过代码在.Java文件中进行注册。通过这种方式注册的广播为非常驻型广播，即它会跟随Activity的生命周期，所以在Activity结束前我们需要调用unregisterReceiver(receiver)方法移除它。  </li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//通过代码的方式动态注册MyBroadcastReceiver</span></span><br><span class="line">MyBroadcastReceiver receiver=<span class="keyword">new</span> MyBroadcastReceiver();</span><br><span class="line">IntentFilter filter=<span class="keyword">new</span> IntentFilter();</span><br><span class="line">filter.addAction(<span class="string">"android.intent.action.MyBroadcastReceiver"</span>);</span><br><span class="line"><span class="comment">//注册receiver</span></span><br><span class="line">registerReceiver(receiver, filter);</span><br></pre></td></tr></table></figure><p>如果我们在Activity中注册了BroadcastReceiver，当这个Activity销毁的时候要主动撤销注册否则会出现异常。  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">         <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">         <span class="keyword">super</span>.onDestroy();</span><br><span class="line">         <span class="comment">//当Activity销毁的时候取消注册BroadcastReceiver</span></span><br><span class="line">         unregisterReceiver(receiver);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="4-BroadCastReceiver的生命周期"><a href="#4-BroadCastReceiver的生命周期" class="headerlink" title="4. BroadCastReceiver的生命周期"></a>4. BroadCastReceiver的生命周期</h1><p>BroadcastReceiver的生命周期，从对象调用它开始，到onReceiver方法执行完成之后结束。另外，每次广播被接收后会重新创建BroadcastReceiver对象，并在onReceiver方法中执行完就销毁，如果BroadcastReceiver的onReceiver方法中不能在10秒内执行完成，Android会出现ANR异常。所以不要在BroadcastReceiver的onReceiver方法中执行耗时的操作。</p><h1 id="5-实例"><a href="#5-实例" class="headerlink" title="5. 实例"></a>5. 实例</h1><p><strong><font color="red">最新Android不再兼容静态注册，尽量用动态注册</font></strong></p><p>先定义两个广播接收器  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//TODO</span></span><br><span class="line">        String msg = intent.getStringExtra(<span class="string">"msg"</span>);</span><br><span class="line"></span><br><span class="line">        Log.d(<span class="string">"TAG"</span>, <span class="string">"接收的消息时： "</span> + msg);</span><br><span class="line"></span><br><span class="line">        setResultData(<span class="string">"MyBroadcastReceiver接收到广播"</span>);</span><br><span class="line"></span><br><span class="line">        Toast.makeText(context, <span class="string">"时间： "</span> + <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-mm-dd hh.mm.ss"</span>).format(<span class="keyword">new</span> Date())</span><br><span class="line">                        + <span class="string">"\nMyBroadcastReceiver收到Action名为: "</span> + intent.getAction().toString()</span><br><span class="line">                        + <span class="string">"的广播\nComponent: "</span> + intent.getComponent()</span><br><span class="line">                        + <span class="string">"\nmsg: "</span> + msg,</span><br><span class="line">                        Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SecondBroadcastReceiver</span> <span class="keyword">extends</span> <span class="title">BroadcastReceiver</span> </span>&#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        String msg=intent.getExtras().get(<span class="string">"msg"</span>).toString();</span><br><span class="line">        String result=getResultData();</span><br><span class="line">        Toast.makeText(context,<span class="string">"时间："</span>+<span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy-MM-dd hh.mm.ss"</span>).format(<span class="keyword">new</span> Date())</span><br><span class="line">                        +<span class="string">"\nSecondBroadcastReceiver收到Action名为："</span>+intent.getAction().toString()</span><br><span class="line">                        +<span class="string">"的广播 \nComponent:"</span>+intent.getComponent()</span><br><span class="line">                        +<span class="string">"\nmsg:"</span>+msg+<span class="string">"\n上一个接受者传来的reult:"</span>+result,</span><br><span class="line">                Toast.LENGTH_LONG).show();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再在activity中发送广播  </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BroadcastDemoActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    Button general_BT, order_BT;</span><br><span class="line">    MyBroadcastReceiver receiver;</span><br><span class="line">    SecondBroadcastReceiver secondReceiver;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String ACTION = <span class="string">"com.android.broadcast.RECEIVER_ACTION"</span>;</span><br><span class="line">    <span class="keyword">private</span> IntentFilter intentFilter;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    String TAG = <span class="string">"DEBUG"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_broadcast_demo);</span><br><span class="line"></span><br><span class="line">        general_BT = (Button)findViewById(R.id.general_bc);</span><br><span class="line">        order_BT = (Button)findViewById(R.id.order_bc);</span><br><span class="line">        receiver=<span class="keyword">new</span> MyBroadcastReceiver();</span><br><span class="line">        secondReceiver = <span class="keyword">new</span> SecondBroadcastReceiver();</span><br><span class="line"></span><br><span class="line">        RegisterBroadcast(receiver,<span class="number">200</span>);</span><br><span class="line">        RegisterBroadcast(secondReceiver,<span class="number">100</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        general_BT.setOnClickListener(<span class="keyword">new</span> Mylistener());</span><br><span class="line">        order_BT.setOnClickListener(<span class="keyword">new</span> Mylistener());</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">RegisterBroadcast</span><span class="params">(BroadcastReceiver receiver, <span class="keyword">int</span> Value)</span></span>&#123;</span><br><span class="line">        intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line">        intentFilter.addAction(ACTION);</span><br><span class="line">        intentFilter.setPriority(Value);</span><br><span class="line">        registerReceiver(receiver,intentFilter);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Mylistener</span> <span class="keyword">implements</span> <span class="title">View</span>.<span class="title">OnClickListener</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">int</span> id = v.getId();</span><br><span class="line">            <span class="keyword">switch</span> (id)&#123;</span><br><span class="line">                <span class="keyword">case</span> R.id.general_bc:</span><br><span class="line">                    Intent intent = <span class="keyword">new</span> Intent(<span class="string">"com.android.broadcast.RECEIVER_ACTION"</span>);</span><br><span class="line">                    intent.putExtra(<span class="string">"msg"</span>,<span class="string">"我在发送广播！这智商一个普通的广播，"</span> + <span class="string">"你们无法通过abortBroadcast()方法停止广播的传播， "</span> +</span><br><span class="line">                                    <span class="string">"也无法往Broadcast中存入数据因为他是异步的"</span>);</span><br><span class="line">                    sendBroadcast(intent);</span><br><span class="line">                    Log.d(TAG, <span class="string">"发送成功啦！！！！"</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">case</span> R.id.order_bc:</span><br><span class="line">                    Intent intent2 =<span class="keyword">new</span> Intent();</span><br><span class="line">                    intent2.setAction(<span class="string">"com.android.broadcast.RECEIVER_ACTION"</span>);</span><br><span class="line">                    intent2.putExtra(<span class="string">"msg"</span>, <span class="string">"我在发送一个有序的广播，"</span>+</span><br><span class="line">                                    <span class="string">"你们可以通过abortBroadcast()的方法停止广播的传播，"</span>+</span><br><span class="line">                                    <span class="string">"也可以向Broadcast中存入数据"</span>);</span><br><span class="line">                    sendOrderedBroadcast(intent2, <span class="keyword">null</span>);</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                <span class="keyword">default</span>:</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onStop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onStop();</span><br><span class="line">        <span class="keyword">this</span>.unregisterReceiver(receiver);</span><br><span class="line">        <span class="keyword">this</span>.unregisterReceiver(secondReceiver);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如下：</p><p><img src="https://www.cnblogs.com/images/cnblogs_com/haochen273/1389248/o_1.gif" alt></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-广播机制&quot;&gt;&lt;a href=&quot;#1-广播机制&quot; class=&quot;headerlink&quot; title=&quot;1. 广播机制&quot;&gt;&lt;/a&gt;1. 广播机制&lt;/h1&gt;&lt;p&gt;BroadcastReceiver，顾名思义就是“广播接收者”的意思，它是Android四大基本组件之一
      
    
    </summary>
    
      <category term="Android Development" scheme="http://haochen95.github.io/categories/Android-Development/"/>
    
    
      <category term="Android" scheme="http://haochen95.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
